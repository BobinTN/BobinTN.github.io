import {
  e2,
  g
} from "./chunk-LXXF7K7W.js";
import {
  c,
  t
} from "./chunk-SBW6NNVI.js";
import {
  e
} from "./chunk-62CXLI6S.js";
import {
  n
} from "./chunk-WGO3VFQP.js";
import {
  p
} from "./chunk-WJ3HJKNC.js";

// node_modules/@arcgis/core/core/Clonable.js
var i = (s) => {
  let i2 = class extends s {
    clone() {
      var _a;
      const o = t(this);
      n(o, "unable to clone instance of non-accessor class");
      const s2 = o.metadatas, c2 = o.store, i3 = {}, l2 = /* @__PURE__ */ new Map();
      for (const r in s2) {
        const o2 = s2[r], n2 = c2 == null ? void 0 : c2.originOf(r), a2 = o2.clonable;
        if (o2.readOnly || false === a2 || n2 !== e2.USER && n2 !== e2.DEFAULTS && n2 !== e2.WEB_MAP && n2 !== e2.WEB_SCENE)
          continue;
        const p2 = this[r];
        let f = null;
        f = "function" == typeof a2 ? a2(p2) : "reference" === a2 ? p2 : p(p2), null != p2 && null == f || (n2 === e2.DEFAULTS ? l2.set(r, f) : i3[r] = f);
      }
      const a = new (0, Object.getPrototypeOf(this).constructor)(i3);
      if (l2.size) {
        const o2 = (_a = t(a)) == null ? void 0 : _a.store;
        if (o2)
          for (const [s3, t2] of l2)
            o2.set(s3, t2, e2.DEFAULTS);
      }
      return a;
    }
  };
  return i2 = e([c("esri.core.Clonable")], i2), i2;
};
var l = class extends i(g) {
};
l = e([c("esri.core.Clonable")], l);

export {
  i,
  l
};
//# sourceMappingURL=chunk-WJ4LS3YG.js.map
