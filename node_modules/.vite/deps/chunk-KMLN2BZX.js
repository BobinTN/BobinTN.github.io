import {
  D,
  y as y2
} from "./chunk-FYSZRVYZ.js";
import {
  e as e3
} from "./chunk-323PT7GB.js";
import {
  i as i2
} from "./chunk-TKJNJ6KH.js";
import {
  l
} from "./chunk-36R5EC6A.js";
import {
  s as s4
} from "./chunk-KLPBCYCG.js";
import {
  p as p3
} from "./chunk-3HOLDCR2.js";
import {
  i as i3
} from "./chunk-DCL3YBJN.js";
import {
  C as C2,
  S as S2,
  c as c2,
  u as u2
} from "./chunk-3ZWLSDVT.js";
import {
  o as o3
} from "./chunk-5DLICG33.js";
import {
  a as a4,
  d as d2
} from "./chunk-ZILXWPAR.js";
import {
  p as p4
} from "./chunk-HPFRYEGX.js";
import {
  w
} from "./chunk-4LDWKTSM.js";
import {
  A as A3
} from "./chunk-U4ONWLTG.js";
import {
  j as j2
} from "./chunk-POSLR7O2.js";
import {
  f
} from "./chunk-VOYU5TTK.js";
import {
  a as a3
} from "./chunk-P5VIVFJT.js";
import {
  t as t2
} from "./chunk-PIEUUBJ5.js";
import {
  u as u3
} from "./chunk-YIAYIZOZ.js";
import {
  m as m2
} from "./chunk-P5GW5DPX.js";
import {
  I as I3,
  S as S3,
  T as T2,
  c as c3,
  m as m4,
  y as y3
} from "./chunk-VIOPOI6P.js";
import {
  A as A2,
  E,
  F as F2,
  I as I2,
  O,
  P,
  Q,
  S,
  T,
  b as b2,
  j,
  m as m3,
  q,
  w as w2,
  x
} from "./chunk-DOALI2C2.js";
import {
  p as p2
} from "./chunk-UHNBENSV.js";
import {
  A,
  p
} from "./chunk-GDKL26HH.js";
import {
  F
} from "./chunk-HBL2432S.js";
import {
  b
} from "./chunk-45OAWGCA.js";
import {
  b as b3
} from "./chunk-YXRSJYLG.js";
import {
  k as k2
} from "./chunk-BELGAUAK.js";
import {
  s as s3
} from "./chunk-JHJVOI7Q.js";
import {
  t
} from "./chunk-OFRZSMZB.js";
import {
  g,
  p as p5
} from "./chunk-Z6KIMOUA.js";
import {
  n as n2
} from "./chunk-SZAJDZCO.js";
import {
  i
} from "./chunk-WJ4LS3YG.js";
import {
  h as h2
} from "./chunk-AOJ6OCPK.js";
import {
  C,
  d
} from "./chunk-TBSVVR6M.js";
import {
  V as V2
} from "./chunk-JUZJCTW2.js";
import {
  m
} from "./chunk-CCXEAKIM.js";
import {
  o as o2
} from "./chunk-WURET5CW.js";
import {
  r
} from "./chunk-QWPLZ3QH.js";
import {
  I,
  V
} from "./chunk-R5DM4YAB.js";
import {
  e2,
  n2 as n,
  y2 as y
} from "./chunk-LXXF7K7W.js";
import {
  c,
  u3 as u
} from "./chunk-SBW6NNVI.js";
import {
  e
} from "./chunk-62CXLI6S.js";
import {
  a as a2,
  h,
  k
} from "./chunk-RFPH3ZTZ.js";
import {
  a,
  o,
  s2 as s,
  s3 as s2
} from "./chunk-WJ3HJKNC.js";

// node_modules/@arcgis/core/layers/support/SubtypeSublayer.js
var G = ["charts", "editingEnabled", "formTemplate", "labelsVisible", "labelingInfo", "legendEnabled", "minScale", "maxScale", "opacity", "popupEnabled", "popupTemplate", "renderer", "subtypeCode", "templates", "title", "visible"];
var N = { key: "type", base: p, errorContext: "renderer", typeMap: { simple: p2, "unique-value": A, "class-breaks": w } };
var $ = s4();
var k3 = u({ types: N });
var M = 0;
function _(e4) {
  const t3 = e4.json.write;
  return "object" == typeof t3 ? t3.ignoreOrigin = true : e4.json.write = { ignoreOrigin: true }, e4;
}
function B(e4) {
  return new p2({ symbol: H(e4) });
}
function H(e4) {
  switch (e4) {
    case "point":
    case "multipoint":
      return S2.clone();
    case "polyline":
      return u2.clone();
    case "polygon":
    case "multipatch":
      return c2.clone();
    default:
      return null;
  }
}
function Q2(e4, t3) {
  return !!t3 && ("unique-value" === (e4 == null ? void 0 : e4.type) && "string" == typeof e4.field && e4.field.toLowerCase() === t3.toLowerCase() && !e4.field2 && !e4.field3 && !e4.valueExpression);
}
function z(e4, t3) {
  var _a;
  return null == e4 ? null : (_a = t3.subtypes) == null ? void 0 : _a.find((t4) => t4.code === e4);
}
function J(e4, t3) {
  let r2 = null;
  switch (t3.geometryType) {
    case "esriGeometryPoint":
    case "esriGeometryMultipoint":
      r2 = "point";
      break;
    case "esriGeometryPolyline":
      r2 = "line";
      break;
    case "esriGeometryPolygon":
    case "esriGeometryMultiPatch":
      r2 = "polygon";
      break;
    default:
      t3.type, r2 = null;
  }
  const i4 = {}, o4 = z(e4, t3);
  if (null != o4) {
    const { defaultValues: e5 } = o4;
    for (const t4 in e5)
      i4[t4] = e5[t4];
  }
  return i4[t3.subtypeField] = e4, new p3({ name: "New Feature", drawingTool: r2, prototype: { attributes: i4 } });
}
var K = "esri.layers.support.SubtypeSublayer";
var W = class extends m2(i(s3(m))) {
  constructor(e4) {
    super(e4), this.charts = null, this.editingEnabled = true, this.fieldOverrides = null, this.fieldsIndex = null, this.formTemplate = null, this.id = `${Date.now().toString(16)}-subtype-sublayer-${M++}`, this.type = "subtype-sublayer", this.labelsVisible = true, this.labelingInfo = null, this.layerType = "ArcGISFeatureLayer", this.legendEnabled = true, this.listMode = "show", this.minScale = 0, this.maxScale = 0, this.opacity = 1, this.parent = null, this.popupEnabled = true, this.popupTemplate = null, this.subtypeCode = null, this.templates = null, this.title = null, this.visible = true;
  }
  get capabilities() {
    var _a;
    return (_a = this.parent) == null ? void 0 : _a.capabilities;
  }
  get effectiveCapabilities() {
    var _a;
    return (_a = this.parent) == null ? void 0 : _a.effectiveCapabilities;
  }
  get effectiveEditingEnabled() {
    const { parent: e4 } = this;
    return e4 ? e4.effectiveEditingEnabled && this.editingEnabled : this.editingEnabled;
  }
  get elevationInfo() {
    var _a;
    return (_a = this.parent) == null ? void 0 : _a.elevationInfo;
  }
  writeFieldOverrides(e4, t3, r2) {
    const { fields: i4, parent: o4 } = this;
    let n3;
    if (i4) {
      n3 = [];
      let e5 = 0;
      i4.forEach(({ name: t4, alias: r3, editable: i5, visible: s5 }) => {
        var _a;
        if (!s5)
          return;
        const l2 = (_a = o4 == null ? void 0 : o4.fields) == null ? void 0 : _a.find((e6) => e6.name === t4);
        if (!l2)
          return;
        const a5 = { name: t4 };
        let p6 = false;
        r3 !== l2.alias && (a5.alias = r3, p6 = true), i5 !== l2.editable && (a5.editable = i5, p6 = true), n3.push(a5), p6 && e5++;
      }), 0 === e5 && n3.length === i4.length && (n3 = null);
    } else
      n3 = a(e4);
    (n3 == null ? void 0 : n3.length) && o(r2, n3, t3);
  }
  get fields() {
    const { parent: e4, fieldOverrides: t3, subtypeCode: r2 } = this, i4 = e4 == null ? void 0 : e4.fields;
    if (!e4 || !(i4 == null ? void 0 : i4.length))
      return null;
    const { subtypes: o4, subtypeField: n3 } = e4, s5 = o4 == null ? void 0 : o4.find((e5) => e5.code === r2), l2 = s5 == null ? void 0 : s5.defaultValues, a5 = s5 == null ? void 0 : s5.domains, p6 = [];
    for (const d3 of i4) {
      const e5 = d3.clone(), { name: i5 } = e5, o5 = t3 == null ? void 0 : t3.find((e6) => e6.name === i5);
      if (e5.visible = !t3 || !!o5, o5) {
        const { alias: t4, editable: r3 } = o5;
        t4 && (e5.alias = t4), false === r3 && (e5.editable = false);
      }
      const s6 = (l2 == null ? void 0 : l2[i5]) ?? null;
      e5.defaultValue = i5 === n3 ? r2 : s6;
      const u4 = (a5 == null ? void 0 : a5[i5]) ?? null;
      e5.domain = i5 === n3 ? null : u4 ? "inherited" === u4.type ? e5.domain : u4.clone() : null, p6.push(e5);
    }
    return p6;
  }
  get floorInfo() {
    var _a;
    return (_a = this.parent) == null ? void 0 : _a.floorInfo;
  }
  get geometryType() {
    var _a;
    return (_a = this.parent) == null ? void 0 : _a.geometryType;
  }
  get effectiveScaleRange() {
    const { minScale: e4, maxScale: t3 } = this;
    return { minScale: e4, maxScale: t3 };
  }
  get objectIdField() {
    var _a;
    return this.parent || s.getLogger(K).error(Y("objectIdField")), (_a = this.parent) == null ? void 0 : _a.objectIdField;
  }
  get defaultPopupTemplate() {
    return this.createPopupTemplate();
  }
  set renderer(e4) {
    p5(e4, this.fieldsIndex), this._override("renderer", e4);
  }
  get renderer() {
    if (this._isOverridden("renderer"))
      return this._get("renderer");
    const { parent: e4 } = this;
    return e4 && !e4.isTable && "mesh" !== e4.geometryType ? B(e4.geometryType) : null;
  }
  readRendererFromService(e4, t3, r2) {
    var _a, _b, _c;
    if ("Table" === t3.type)
      return null;
    const i4 = (_a = t3.drawingInfo) == null ? void 0 : _a.renderer, n3 = k3(i4, t3, r2);
    let s5;
    const { subtypeCode: l2 } = this;
    if (null != l2 && Q2(n3, t3.subtypeField)) {
      const e5 = (_b = n3.uniqueValueInfos) == null ? void 0 : _b.find(({ value: e6 }) => (e6 = "number" == typeof e6 ? String(e6) : e6) === String(l2));
      e5 && (s5 = new p2({ symbol: e5.symbol }));
    } else
      "simple" !== (n3 == null ? void 0 : n3.type) || ((_c = n3.visualVariables) == null ? void 0 : _c.length) || (s5 = n3);
    return s5;
  }
  readRenderer(e4, t3, r2) {
    var _a, _b, _c;
    const i4 = (_b = (_a = t3 == null ? void 0 : t3.layerDefinition) == null ? void 0 : _a.drawingInfo) == null ? void 0 : _b.renderer;
    if (!i4)
      return;
    const o4 = (_c = i4.visualVariables) == null ? void 0 : _c.some((e5) => "rotationInfo" !== e5.type);
    return o4 ? void 0 : k3(i4, t3, r2) || void 0;
  }
  get spatialReference() {
    var _a;
    return (_a = this.parent) == null ? void 0 : _a.spatialReference;
  }
  readTemplatesFromService(e4, t3) {
    return [J(this.subtypeCode, t3)];
  }
  readTitleFromService(e4, t3) {
    const r2 = z(this.subtypeCode, t3);
    return null != r2 ? r2.name : null;
  }
  get url() {
    var _a;
    return (_a = this.parent) == null ? void 0 : _a.url;
  }
  get userHasUpdateItemPrivileges() {
    var _a;
    return !!((_a = this.parent) == null ? void 0 : _a.userHasUpdateItemPrivileges);
  }
  async addAttachment(e4, t3) {
    const { parent: r2 } = this;
    if (!r2)
      throw Y("addAttachment");
    if (e4.getAttribute(r2.subtypeField) !== this.subtypeCode)
      throw new s2("subtype-sublayer:addAttachment", "The feature provided does not belong to this SubtypeSublayer");
    return r2.addAttachment(e4, t3);
  }
  async updateAttachment(e4, t3, r2) {
    const { parent: i4 } = this;
    if (!i4)
      throw Y("updateAttachment");
    if (e4.getAttribute(i4.subtypeField) !== this.subtypeCode)
      throw new s2("subtype-sublayer:updateAttachment", "The feature provided does not belong to this SubtypeSublayer");
    return i4.updateAttachment(e4, t3, r2);
  }
  async deleteAttachments(e4, t3) {
    const { parent: r2 } = this;
    if (!r2)
      throw Y("deleteAttachments");
    if (e4.getAttribute(r2.subtypeField) !== this.subtypeCode)
      throw new s2("subtype-sublayer:deleteAttachments", "The feature provided does not belong to this SubtypeSublayer");
    return r2.deleteAttachments(e4, t3);
  }
  async applyEdits(e4, t3) {
    if (!this.parent)
      throw Y("applyEdits");
    return this.parent.applyEdits(e4, t3);
  }
  createPopupTemplate(e4) {
    let t3 = this;
    const { parent: r2, fields: i4, title: o4 } = this;
    if (r2) {
      const { displayField: e5, editFieldsInfo: n3, objectIdField: s5 } = r2;
      t3 = { displayField: e5, editFieldsInfo: n3, fields: i4, objectIdField: s5, title: o4 };
    }
    return p4(t3, e4);
  }
  createQuery() {
    if (!this.parent)
      throw Y("createQuery");
    const e4 = x(this.parent), t3 = `${this.parent.subtypeField}=${this.subtypeCode}`;
    return e4.where = n2(t3, this.parent.definitionExpression), e4;
  }
  getField(e4) {
    return this.fieldsIndex.get(e4);
  }
  getFieldDomain(e4) {
    return this._getLayerDomain(e4);
  }
  hasUserOverrides() {
    return G.some((e4) => this.originIdOf(e4) === e2.USER);
  }
  async queryAttachments(e4, t3) {
    const r2 = await this.load();
    if (!r2.parent)
      throw Y("queryAttachments");
    const i4 = e4.clone();
    return i4.where = X(i4.where, r2.parent.subtypeField, r2.subtypeCode), r2.parent.queryAttachments(e4, t3);
  }
  async queryFeatures(e4, t3) {
    const r2 = await this.load();
    if (!r2.parent)
      throw Y("queryFeatures");
    const i4 = b.from(e4) ?? r2.createQuery();
    return null != e4 && (i4.where = X(i4.where, r2.parent.subtypeField, r2.subtypeCode)), r2.parent.queryFeatures(i4, t3);
  }
  _getLayerDomain(e4) {
    const t3 = this.fieldsIndex.get(e4);
    return t3 ? t3.domain : null;
  }
};
e([y({ readOnly: true, json: { read: false } })], W.prototype, "capabilities", null), e([y({ readOnly: true, json: { read: false } })], W.prototype, "effectiveCapabilities", null), e([y({ json: { write: { ignoreOrigin: true } } })], W.prototype, "charts", void 0), e([y({ type: Boolean, nonNullable: true, json: { name: "enableEditing", write: { ignoreOrigin: true } } })], W.prototype, "editingEnabled", void 0), e([y({ type: Boolean, readOnly: true })], W.prototype, "effectiveEditingEnabled", null), e([y({ readOnly: true, json: { read: false } })], W.prototype, "elevationInfo", null), e([y({ json: { name: "layerDefinition.fieldOverrides", origins: { service: { read: false } }, write: { ignoreOrigin: true, allowNull: true } } })], W.prototype, "fieldOverrides", void 0), e([r("fieldOverrides")], W.prototype, "writeFieldOverrides", null), e([y({ ...$.fields, readOnly: true, json: { read: false } })], W.prototype, "fields", null), e([y($.fieldsIndex)], W.prototype, "fieldsIndex", void 0), e([y({ readOnly: true, json: { read: false } })], W.prototype, "floorInfo", null), e([y({ type: y2, json: { name: "formInfo", write: { ignoreOrigin: true } } })], W.prototype, "formTemplate", void 0), e([y({ type: String, clonable: false, readOnly: true, json: { origins: { service: { read: false } }, write: { ignoreOrigin: true } } })], W.prototype, "id", void 0), e([y({ readOnly: true, json: { read: false } })], W.prototype, "geometryType", null), e([y({ readOnly: true, json: { read: false } })], W.prototype, "type", void 0), e([y(_(a(m4)))], W.prototype, "labelsVisible", void 0), e([y({ type: [C2], json: { name: "layerDefinition.drawingInfo.labelingInfo", origins: { service: { read: false } }, read: { reader: i3 }, write: { ignoreOrigin: true } } })], W.prototype, "labelingInfo", void 0), e([y({ type: ["ArcGISFeatureLayer"], readOnly: true, json: { read: false, write: { ignoreOrigin: true } } })], W.prototype, "layerType", void 0), e([y(_(a(c3)))], W.prototype, "legendEnabled", void 0), e([y({ type: ["show", "hide"] })], W.prototype, "listMode", void 0), e([y((() => {
  const e4 = a(T2);
  return e4.json.origins.service.read = false, _(e4);
})())], W.prototype, "minScale", void 0), e([y((() => {
  const e4 = a(S3);
  return e4.json.origins.service.read = false, _(e4);
})())], W.prototype, "maxScale", void 0), e([y({ readOnly: true })], W.prototype, "effectiveScaleRange", null), e([y({ readOnly: true, json: { read: false } })], W.prototype, "objectIdField", null), e([y({ type: Number, range: { min: 0, max: 1 }, nonNullable: true, json: { write: { ignoreOrigin: true } } })], W.prototype, "opacity", void 0), e([y({ clonable: false })], W.prototype, "parent", void 0), e([y(_(a(y3)))], W.prototype, "popupEnabled", void 0), e([y({ type: k2, json: { name: "popupInfo", write: { ignoreOrigin: true } } })], W.prototype, "popupTemplate", void 0), e([y({ readOnly: true })], W.prototype, "defaultPopupTemplate", null), e([y({ types: N, json: { write: { target: "layerDefinition.drawingInfo.renderer", ignoreOrigin: true } } })], W.prototype, "renderer", null), e([o2("service", "renderer", ["drawingInfo.renderer", "subtypeField", "type"])], W.prototype, "readRendererFromService", null), e([o2("renderer", ["layerDefinition.drawingInfo.renderer"])], W.prototype, "readRenderer", null), e([y({ readOnly: true, json: { read: false } })], W.prototype, "spatialReference", null), e([y({ type: Number, json: { origins: { service: { read: false } }, write: { ignoreOrigin: true } } })], W.prototype, "subtypeCode", void 0), e([y({ type: [p3], json: { name: "layerDefinition.templates", write: { ignoreOrigin: true } } })], W.prototype, "templates", void 0), e([o2("service", "templates", ["geometryType", "subtypeField", "subtypes", "type"])], W.prototype, "readTemplatesFromService", null), e([y({ type: String, json: { write: { ignoreOrigin: true } } })], W.prototype, "title", void 0), e([o2("service", "title", ["subtypes"])], W.prototype, "readTitleFromService", null), e([y({ readOnly: true, json: { read: false } })], W.prototype, "url", null), e([y({ readOnly: true })], W.prototype, "userHasUpdateItemPrivileges", null), e([y({ type: Boolean, nonNullable: true, json: { name: "visibility", write: { ignoreOrigin: true } } })], W.prototype, "visible", void 0), W = e([c(K)], W);
var X = (e4, t3, r2) => {
  const i4 = new RegExp(`${t3}\\s*=\\s*\\d+`), o4 = `${t3}=${r2}`, n3 = e4 ?? "";
  return i4.test(n3) ? n3.replace(i4, o4) : n2(o4, n3);
};
var Y = (e4) => new s2(`This sublayer must have a parent SubtypeGroupLayer in order to use ${e4}`);
var Z = W;

// node_modules/@arcgis/core/layers/SubtypeGroupLayer.js
var re = "SubtypeGroupLayer";
var te = "esri.layers.SubtypeGroupLayer";
function se(e4, r2) {
  return new s2("layer:unsupported", `Layer (${e4.title}, ${e4.id}) of type '${e4.declaredClass}' ${r2}`, { layer: e4 });
}
var ie = s4();
var oe = class extends D(F(a3(a4(t2(f(l(u3(j2(m2(o3(i2(i(b3))))))))))))) {
  constructor(...e4) {
    super(...e4), this._sublayersCollectionChanged = false, this._sublayerLookup = /* @__PURE__ */ new Map(), this.fields = null, this.fieldsIndex = null, this.outFields = null, this.sublayers = new (V2.ofType(Z))(), this.timeInfo = null, this.title = "Layer", this.type = "subtype-group", this._debouncedSaveOperations = k(async (e5, r2, t3) => {
      const { save: s5, saveAs: i4 } = await import("./featureLayerUtils-FGB3K6FS.js");
      switch (e5) {
        case A3.SAVE:
          return s5(this, r2);
        case A3.SAVE_AS:
          return i4(this, t3, r2);
      }
    }), this.addHandles(d(() => this.sublayers, (e5, r2) => this._handleSublayersChange(e5, r2), C));
  }
  destroy() {
    var _a;
    (_a = this.source) == null ? void 0 : _a.destroy();
  }
  normalizeCtorArgs(e4, r2) {
    return "string" == typeof e4 ? { url: e4, ...r2 } : e4;
  }
  load(e4) {
    const r2 = null != e4 ? e4.signal : null, t3 = this.loadFromPortal({ supportedTypes: ["Feature Service"] }, e4).catch(a2).then(async () => {
      if (!this.url)
        throw new s2("subtype-grouplayer:missing-url-or-source", "SubtypeGroupLayer must be created with either a url or a portal item");
      if (null == this.layerId)
        throw new s2("subtype-grouplayer:missing-layerid", "layerId is required for a SubtypeGroupLayer created with url");
      return this._initLayerProperties(await this.createGraphicsSource(r2));
    }).then(() => Q(this, "load", e4));
    return this.addResolvingPromise(t3), Promise.resolve(this);
  }
  get createQueryVersion() {
    return this.commitProperty("definitionExpression"), this.commitProperty("timeExtent"), this.commitProperty("timeOffset"), this.commitProperty("geometryType"), this.commitProperty("gdbVersion"), this.commitProperty("historicMoment"), this.commitProperty("returnZ"), this.commitProperty("capabilities"), this.commitProperty("returnM"), (this._get("createQueryVersion") ?? 0) + 1;
  }
  get editingEnabled() {
    return this.loaded && null != this.capabilities && this.capabilities.operations.supportsEditing && this.userHasEditingPrivileges;
  }
  get effectiveEditingEnabled() {
    return T(this);
  }
  get parsedUrl() {
    const e4 = I(this.url);
    return null != e4 && null != this.layerId && (e4.path = V(e4.path, this.layerId.toString())), e4;
  }
  set source(e4) {
    this._get("source") !== e4 && this._set("source", e4);
  }
  readTitleFromService(e4, { name: r2 }) {
    return this.url ? h2(this.url, r2) : r2;
  }
  async addAttachment(e4, r2) {
    return m3(this, e4, r2, re);
  }
  async updateAttachment(e4, r2, t3) {
    return w2(this, e4, r2, t3, re);
  }
  async applyEdits(e4, r2) {
    return b2(this, e4, r2);
  }
  on(e4, r2) {
    return super.on(e4, r2);
  }
  async createGraphicsSource(e4) {
    const { default: r2 } = await h(import("./FeatureLayerSource-CN7XZXJO.js"), e4);
    return new r2({ layer: this }).load({ signal: e4 });
  }
  createQuery() {
    const e4 = x(this), r2 = this.sublayers.map((e5) => e5.subtypeCode);
    return e4.where = n2(`${this.subtypeField} IN (${r2.join(",")})`, this.definitionExpression), e4;
  }
  async deleteAttachments(e4, r2) {
    return j(this, e4, r2, re);
  }
  async fetchRecomputedExtents(e4) {
    return I2(this, e4, re);
  }
  findSublayerForFeature(e4) {
    const r2 = this.fieldsIndex.get(this.subtypeField), t3 = e4.attributes[r2.name];
    return this.findSublayerForSubtypeCode(t3);
  }
  findSublayerForSubtypeCode(e4) {
    return this._sublayerLookup.get(e4);
  }
  getFieldDomain(e4, r2) {
    return this._getLayerDomain(e4);
  }
  getField(e4) {
    return this.fieldsIndex.get(e4);
  }
  loadAll() {
    return t(this, (e4) => {
      e4(this.sublayers);
    });
  }
  async queryAttachments(e4, r2) {
    return q(this, e4, r2, re);
  }
  async queryFeatures(e4, r2) {
    const t3 = await this.load(), s5 = b.from(e4) ?? t3.createQuery(), i4 = s5.outFields ?? [];
    i4.includes(this.subtypeField) || (i4.push(this.subtypeField), s5.outFields = i4);
    const o4 = await t3.source.queryFeatures(s5, r2);
    if (o4 == null ? void 0 : o4.features)
      for (const a5 of o4.features)
        a5.layer = a5.sourceLayer = this.findSublayerForFeature(a5);
    return o4;
  }
  async queryObjectIds(e4, r2) {
    return F2(this, e4, r2, re);
  }
  async queryFeatureCount(e4, r2) {
    return A2(this, e4, r2, re);
  }
  async queryExtent(e4, r2) {
    return O(this, e4, r2, re);
  }
  async queryRelatedFeatures(e4, r2) {
    return P(this, e4, r2, re);
  }
  async queryRelatedFeaturesCount(e4, r2) {
    return E(this, e4, r2, re);
  }
  async save(e4) {
    return this._debouncedSaveOperations(A3.SAVE, e4);
  }
  async saveAs(e4, r2) {
    return this._debouncedSaveOperations(A3.SAVE_AS, r2, e4);
  }
  write(e4, r2) {
    var _a;
    const { origin: t3, layerContainerType: i4, messages: o4 } = r2;
    if (this.isTable) {
      if ("web-scene" === t3 || "web-map" === t3 && "tables" !== i4)
        return o4 == null ? void 0 : o4.push(se(this, "using a table source cannot be written to web scenes and web maps")), null;
    } else if (this.loaded && "web-map" === t3 && "tables" === i4)
      return o4 == null ? void 0 : o4.push(se(this, "using a non-table source cannot be written to tables in web maps")), null;
    return ((_a = this.sublayers) == null ? void 0 : _a.length) ? super.write(e4, r2) : (o4 == null ? void 0 : o4.push(new s2("web-document-write:invalid-property", `Layer (${this.title}, ${this.id}) of type '${this.declaredClass}' has invalid value for 'sublayers' property. 'sublayers' collection should contain at least one sublayer`, { layer: this })), null);
  }
  serviceSupportsSpatialReference(e4) {
    return !!this.loaded && e3(this, e4);
  }
  _getLayerDomain(e4) {
    const r2 = this.fieldsIndex.get(e4);
    return r2 ? r2.domain : null;
  }
  async _initLayerProperties(e4) {
    var _a;
    this._set("source", e4);
    const { sourceJSON: r2 } = e4;
    if (r2 && (this.sourceJSON = r2, this.read(r2, { origin: "service", url: this.parsedUrl })), this.isTable)
      throw new s2("subtype-grouplayer:unsupported-source", "SubtypeGroupLayer cannot be created using a layer with table source");
    if (!((_a = this.subtypes) == null ? void 0 : _a.length))
      throw new s2("subtype-grouplayer:missing-subtypes", "SubtypeGroupLayer must be created using a layer with subtypes");
    this._verifyFields(), g(this.timeInfo, this.fieldsIndex);
  }
  async hasDataChanged() {
    return S(this);
  }
  _verifyFields() {
    var _a, _b;
    const e4 = ((_a = this.parsedUrl) == null ? void 0 : _a.path) ?? "undefined";
    this.objectIdField || console.log("SubtypeGroupLayer: 'objectIdField' property is not defined (url: " + e4 + ")"), this.isTable || -1 !== e4.search(/\/FeatureServer\//i) || ((_b = this.fields) == null ? void 0 : _b.some((e5) => "geometry" === e5.type)) || console.log("SubtypeGroupLayer: unable to find field of type 'geometry' in the layer 'fields' list. If you are using a map service layer, features will not have geometry (url: " + e4 + ")");
  }
  _handleSublayersChange(e4, r2) {
    r2 && (r2.forEach((e5) => {
      e5.parent = null;
    }), this.removeHandles("sublayers-owner"), this._sublayerLookup.clear()), e4 && (e4.forEach((e5) => {
      e5.parent = this, this._sublayerLookup.set(e5.subtypeCode, e5);
    }), this._sublayersCollectionChanged = false, this.addHandles([e4.on("after-add", ({ item: e5 }) => {
      e5.parent = this, this._sublayerLookup.set(e5.subtypeCode, e5);
    }), e4.on("after-remove", ({ item: e5 }) => {
      e5.parent = null, this._sublayerLookup.delete(e5.subtypeCode);
    }), e4.on("after-changes", () => {
      this._sublayersCollectionChanged = true;
    })], "sublayers-owner"));
  }
};
e([y({ readOnly: true })], oe.prototype, "createQueryVersion", null), e([y({ readOnly: true })], oe.prototype, "editingEnabled", null), e([y({ readOnly: true })], oe.prototype, "effectiveEditingEnabled", null), e([y({ ...ie.fields, readOnly: true, json: { origins: { service: { read: true } }, read: false } })], oe.prototype, "fields", void 0), e([y(ie.fieldsIndex)], oe.prototype, "fieldsIndex", void 0), e([y(I3)], oe.prototype, "id", void 0), e([y({ type: ["show", "hide", "hide-children"], json: { origins: { "portal-item": { read: false, write: false } } } })], oe.prototype, "listMode", void 0), e([y({ value: "SubtypeGroupLayer", type: ["SubtypeGroupLayer"], json: { origins: { "portal-item": { name: "layerType", write: { enabled: true, ignoreOrigin: true } } } } })], oe.prototype, "operationalLayerType", void 0), e([y(ie.outFields)], oe.prototype, "outFields", void 0), e([y({ readOnly: true })], oe.prototype, "parsedUrl", null), e([y({ clonable: false })], oe.prototype, "source", null), e([y({ type: V2.ofType(Z), json: { origins: { service: { read: { source: "subtypes", reader: (e4, r2, s5) => {
  const i4 = e4.map(({ code: e5 }) => {
    const t3 = new Z({ subtypeCode: e5 });
    return t3.read(r2, s5), t3;
  });
  return new (V2.ofType(Z))(i4);
} } } }, name: "layers", write: { overridePolicy(e4, r2, t3) {
  const s5 = this.originOf("sublayers"), i4 = e2.PORTAL_ITEM;
  let o4 = true;
  if (n(s5) === i4 && n(t3.origin) > i4) {
    const r3 = e4.some((e5) => e5.hasUserOverrides());
    o4 = this._sublayersCollectionChanged || r3;
  }
  return { enabled: o4, ignoreOrigin: true };
} } } })], oe.prototype, "sublayers", void 0), e([y({ type: d2 })], oe.prototype, "timeInfo", void 0), e([y({ json: { origins: { "portal-item": { write: { enabled: true, ignoreOrigin: true, writerEnsuresNonNull: true } } } } })], oe.prototype, "title", void 0), e([o2("service", "title", ["name"])], oe.prototype, "readTitleFromService", null), e([y({ json: { read: false } })], oe.prototype, "type", void 0), oe = e([c(te)], oe);
var ae = oe;

export {
  ae
};
//# sourceMappingURL=chunk-KMLN2BZX.js.map
