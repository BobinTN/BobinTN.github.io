import {
  ie,
  s as s7
} from "./chunk-VQEOBITG.js";
import {
  n as n3,
  p as p2
} from "./chunk-JTZOXJGU.js";
import "./chunk-VSTWO7FV.js";
import {
  l as l4,
  m as m3,
  s as s8,
  u as u3
} from "./chunk-XG6EA6F3.js";
import {
  E,
  P,
  r
} from "./chunk-WJQF5YT2.js";
import {
  E as E2,
  p as p3,
  x as x2
} from "./chunk-WICI4OJR.js";
import "./chunk-T73MCNAU.js";
import "./chunk-ZKKM4KJT.js";
import "./chunk-A5EZPHEN.js";
import "./chunk-NQ7SK7XM.js";
import "./chunk-IGVJ7QLR.js";
import "./chunk-TJ5AKOA7.js";
import "./chunk-LXYMQMWX.js";
import "./chunk-XJLKESB7.js";
import "./chunk-QLCCKKQG.js";
import "./chunk-GLBAW5CR.js";
import "./chunk-SD4PEUIA.js";
import "./chunk-4OLZTDWK.js";
import "./chunk-JYYKU27J.js";
import "./chunk-SKLWU2B3.js";
import "./chunk-2RN2AAP7.js";
import "./chunk-ED5W63C6.js";
import "./chunk-673OQ2U7.js";
import {
  l
} from "./chunk-XUTOEHFJ.js";
import "./chunk-DXAIPMHS.js";
import "./chunk-CMGHBCKF.js";
import "./chunk-YVNEJWNQ.js";
import {
  Ze
} from "./chunk-BPPKPMEP.js";
import "./chunk-ADNT35Y3.js";
import "./chunk-3F7Z2GZ4.js";
import "./chunk-BVTDQR4O.js";
import "./chunk-JDVR6MOC.js";
import "./chunk-DYYHVSPV.js";
import "./chunk-UIN5EOGE.js";
import "./chunk-ZRKSP45X.js";
import "./chunk-DT2VHQBL.js";
import "./chunk-FYSZRVYZ.js";
import "./chunk-6C2TVJRX.js";
import "./chunk-Z6LZMG5A.js";
import "./chunk-323PT7GB.js";
import {
  i
} from "./chunk-TKJNJ6KH.js";
import {
  l as l3
} from "./chunk-36R5EC6A.js";
import {
  s as s6
} from "./chunk-KLPBCYCG.js";
import "./chunk-3HOLDCR2.js";
import "./chunk-DCL3YBJN.js";
import "./chunk-3ZWLSDVT.js";
import "./chunk-5DLICG33.js";
import "./chunk-ZILXWPAR.js";
import {
  p
} from "./chunk-HPFRYEGX.js";
import {
  u
} from "./chunk-F64GI7MS.js";
import "./chunk-4LDWKTSM.js";
import "./chunk-U4ONWLTG.js";
import {
  j as j2
} from "./chunk-POSLR7O2.js";
import "./chunk-VOYU5TTK.js";
import "./chunk-P5VIVFJT.js";
import "./chunk-SA3C7GIT.js";
import "./chunk-P3R45ANF.js";
import {
  t as t3
} from "./chunk-PIEUUBJ5.js";
import {
  u as u2
} from "./chunk-YIAYIZOZ.js";
import {
  S,
  m as m2
} from "./chunk-P5GW5DPX.js";
import {
  c as c3,
  f as f3,
  v,
  w,
  y as y2
} from "./chunk-VIOPOI6P.js";
import "./chunk-DMLVD5AS.js";
import "./chunk-DOALI2C2.js";
import "./chunk-E3I4MGUC.js";
import "./chunk-UHNBENSV.js";
import "./chunk-GDKL26HH.js";
import "./chunk-2CL4LRYG.js";
import "./chunk-64EQFPYJ.js";
import "./chunk-HKYMYCLL.js";
import "./chunk-ICVVQFO6.js";
import "./chunk-BYK6DXRK.js";
import "./chunk-IYJG2X3Y.js";
import "./chunk-UTCX6DGX.js";
import "./chunk-HBL2432S.js";
import "./chunk-T2S5L26W.js";
import "./chunk-7VNZ6V2N.js";
import "./chunk-VKTTTBW2.js";
import "./chunk-TTZWDXX5.js";
import "./chunk-OCLKX5SY.js";
import "./chunk-SEKLTVY5.js";
import "./chunk-HX5GOVNX.js";
import "./chunk-2Q2Q2Z4U.js";
import "./chunk-S6MJEC4A.js";
import {
  h
} from "./chunk-HU7QYAVQ.js";
import {
  b
} from "./chunk-45OAWGCA.js";
import "./chunk-R4LYFMZX.js";
import "./chunk-X2TA76Q5.js";
import "./chunk-T3Y5GTKO.js";
import "./chunk-XN6LAULS.js";
import {
  Z
} from "./chunk-M7OEQQRX.js";
import "./chunk-CSWPLQ7Q.js";
import "./chunk-KWSMYM7P.js";
import "./chunk-RP5SAUAF.js";
import "./chunk-6BFXMZEZ.js";
import "./chunk-AMSVADDY.js";
import "./chunk-6B7VJB6C.js";
import "./chunk-GAJBN4TM.js";
import {
  l as l2
} from "./chunk-2AXTYAMY.js";
import "./chunk-BADPOP5P.js";
import {
  b as b2
} from "./chunk-YXRSJYLG.js";
import "./chunk-KBKTS574.js";
import "./chunk-6ABSX3YY.js";
import "./chunk-24NOAXOQ.js";
import {
  c as c2
} from "./chunk-FWR4JURK.js";
import {
  k
} from "./chunk-BELGAUAK.js";
import {
  s as s5
} from "./chunk-JHJVOI7Q.js";
import "./chunk-TWNBDJHC.js";
import {
  t as t2
} from "./chunk-HITXLR5N.js";
import "./chunk-WYZCKLOR.js";
import "./chunk-S6NERLXF.js";
import "./chunk-4TSAC52K.js";
import "./chunk-H4ZZ5S37.js";
import "./chunk-G557TGXY.js";
import "./chunk-2AXFVQBN.js";
import "./chunk-WOGT6UK2.js";
import "./chunk-IRNKV32L.js";
import {
  a as a3,
  t
} from "./chunk-OFRZSMZB.js";
import "./chunk-IATM3RCE.js";
import "./chunk-BEALJUHO.js";
import "./chunk-GRHSIT57.js";
import "./chunk-PJQIAD5D.js";
import {
  x
} from "./chunk-Z6KIMOUA.js";
import "./chunk-SZAJDZCO.js";
import "./chunk-M7R7REMB.js";
import "./chunk-ZZYUEH57.js";
import "./chunk-VTWXDFFD.js";
import "./chunk-IPCIO3PX.js";
import "./chunk-EIY2DYTV.js";
import "./chunk-WJ4LS3YG.js";
import "./chunk-F6MD5VOH.js";
import {
  o as o2
} from "./chunk-V2RPSCV3.js";
import "./chunk-AOJ6OCPK.js";
import "./chunk-LMT5JII2.js";
import "./chunk-A43TI6AT.js";
import "./chunk-BHJVWW2P.js";
import "./chunk-4HKQSEUR.js";
import "./chunk-V3U4F2NL.js";
import "./chunk-ZB6PGKG5.js";
import "./chunk-OIIDE5GZ.js";
import "./chunk-3XSRVKBX.js";
import "./chunk-WYBZLWIA.js";
import "./chunk-MKW4ORPJ.js";
import "./chunk-YTH6VA7N.js";
import "./chunk-GINTRQSD.js";
import {
  n as n2
} from "./chunk-APYNYYQC.js";
import "./chunk-TBSVVR6M.js";
import "./chunk-6TJWLWLO.js";
import "./chunk-H7BKONNV.js";
import "./chunk-K6C6RVSV.js";
import "./chunk-KBJ5Z4R2.js";
import {
  V as V2
} from "./chunk-JUZJCTW2.js";
import "./chunk-423VNHLR.js";
import "./chunk-FN47E7YK.js";
import "./chunk-XZS3Q5K4.js";
import "./chunk-XXFXRXFH.js";
import {
  m
} from "./chunk-CCXEAKIM.js";
import {
  M
} from "./chunk-Y5D433JZ.js";
import "./chunk-QNOCEWCR.js";
import {
  o
} from "./chunk-WURET5CW.js";
import {
  f as f2
} from "./chunk-QWPLZ3QH.js";
import "./chunk-HLGIRLYQ.js";
import {
  n
} from "./chunk-N2K4VRZH.js";
import "./chunk-WL4VPODY.js";
import "./chunk-OMPEZIP5.js";
import {
  s as s4
} from "./chunk-EUTNDAIV.js";
import "./chunk-SJZIFARA.js";
import {
  V,
  j
} from "./chunk-R5DM4YAB.js";
import {
  f
} from "./chunk-NSRXJNTS.js";
import {
  y2 as y
} from "./chunk-LXXF7K7W.js";
import {
  T,
  c,
  s3
} from "./chunk-SBW6NNVI.js";
import {
  e
} from "./chunk-62CXLI6S.js";
import {
  a as a2
} from "./chunk-RFPH3ZTZ.js";
import "./chunk-WGO3VFQP.js";
import "./chunk-CQS47VN5.js";
import {
  a,
  s2 as s,
  s3 as s2
} from "./chunk-WJ3HJKNC.js";
import "./chunk-4V6374PV.js";
import "./chunk-A34O4XB5.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/layers/buildingSublayers/BuildingSublayer.js
var a4 = class extends s5(S) {
  constructor(e3) {
    super(e3), this.title = "", this.id = -1, this.modelName = null, this.isEmpty = null, this.legendEnabled = true, this.visible = true, this.opacity = 1;
  }
  readTitle(e3, o3) {
    return "string" == typeof o3.alias ? o3.alias : "string" == typeof o3.name ? o3.name : "";
  }
  readIdOnlyOnce(e3) {
    return -1 !== this.id ? this.id : "number" == typeof e3 ? e3 : -1;
  }
};
e([y({ type: String, json: { origins: { "web-scene": { write: true }, "portal-item": { write: true } } } })], a4.prototype, "title", void 0), e([o("service", "title", ["alias", "name"])], a4.prototype, "readTitle", null), e([y()], a4.prototype, "layer", void 0), e([y({ type: T, readOnly: true, json: { read: false, write: { ignoreOrigin: true } } })], a4.prototype, "id", void 0), e([o("service", "id")], a4.prototype, "readIdOnlyOnce", null), e([y(w(String))], a4.prototype, "modelName", void 0), e([y(w(Boolean))], a4.prototype, "isEmpty", void 0), e([y({ type: Boolean, nonNullable: true })], a4.prototype, "legendEnabled", void 0), e([y({ type: Boolean, json: { name: "visibility", write: true } })], a4.prototype, "visible", void 0), e([y({ type: Number, json: { write: true } })], a4.prototype, "opacity", void 0), a4 = e([c("esri.layers.buildingSublayers.BuildingSublayer")], a4);
var n4 = a4;

// node_modules/@arcgis/core/layers/buildingSublayers/BuildingComponentSublayer.js
var Q = "esri.layers.buildingSublayers.BuildingComponentSublayer";
var E3 = s.getLogger(Q);
var A = s6();
var _ = class extends m.LoadableMixin(n(n4)) {
  constructor(e3) {
    super(e3), this.type = "building-component", this.nodePages = null, this.materialDefinitions = [], this.textureSetDefinitions = [], this.geometryDefinitions = [], this.indexInfo = null, this.serviceUpdateTimeStamp = null, this.store = null, this.attributeStorageInfo = [], this.fields = [], this.associatedLayer = null, this.outFields = null, this.listMode = "show", this.renderer = null, this.definitionExpression = null, this.popupEnabled = true, this.popupTemplate = null, this.layerType = "3d-object";
  }
  get parsedUrl() {
    var _a2, _b;
    return this.layer ? { path: `${(_a2 = this.layer.parsedUrl) == null ? void 0 : _a2.path}/sublayers/${this.id}`, query: (_b = this.layer.parsedUrl) == null ? void 0 : _b.query } : { path: "" };
  }
  get fieldsIndex() {
    return new Z(this.fields);
  }
  readAssociatedLayer(e3, r2) {
    const t7 = this.layer.associatedFeatureServiceItem, o3 = r2.associatedLayerID;
    return null != t7 && "number" == typeof o3 ? new Ze({ portalItem: t7, layerId: o3 }) : null;
  }
  get objectIdField() {
    if (null != this.fields) {
      for (const e3 of this.fields)
        if ("oid" === e3.type)
          return e3.name;
    }
    return null;
  }
  get displayField() {
    return null != this.associatedLayer ? this.associatedLayer.displayField : void 0;
  }
  get apiKey() {
    return this.layer.apiKey;
  }
  get fullExtent() {
    return this.layer.fullExtent;
  }
  get spatialReference() {
    return this.layer.spatialReference;
  }
  get version() {
    return this.layer.version;
  }
  get elevationInfo() {
    return this.layer.elevationInfo;
  }
  get minScale() {
    return this.layer.minScale;
  }
  get maxScale() {
    return this.layer.maxScale;
  }
  get effectiveScaleRange() {
    return this.layer.effectiveScaleRange;
  }
  get defaultPopupTemplate() {
    return this.createPopupTemplate();
  }
  load(e3) {
    const r2 = null != e3 ? e3.signal : null, t7 = this._fetchService(r2).then(() => {
      this.indexInfo = r(this.parsedUrl.path, this.rootNode, this.nodePages, this.apiKey, E3, r2);
    });
    return this.addResolvingPromise(t7), Promise.resolve(this);
  }
  createPopupTemplate(e3) {
    return p(this, e3);
  }
  async _fetchService(e3) {
    const r2 = (await j(this.parsedUrl.path, { query: { f: "json", token: this.apiKey }, responseType: "json", signal: e3 })).data;
    this.read(r2, { origin: "service", url: this.parsedUrl });
  }
  getField(e3) {
    return this.fieldsIndex.get(e3);
  }
  getFieldDomain(e3, r2) {
    var _a2, _b, _c;
    const t7 = (_b = (_a2 = this.getFeatureType(r2 == null ? void 0 : r2.feature)) == null ? void 0 : _a2.domains) == null ? void 0 : _b[e3];
    return t7 && "inherited" !== t7.type ? t7 : ((_c = this.getField(e3)) == null ? void 0 : _c.domain) ?? null;
  }
  getFeatureType(e3) {
    return e3 && null != this.associatedLayer ? this.associatedLayer.getFeatureType(e3) : null;
  }
  get types() {
    return null != this.associatedLayer ? this.associatedLayer.types ?? [] : [];
  }
  get typeIdField() {
    return null != this.associatedLayer ? this.associatedLayer.typeIdField : null;
  }
  get geometryType() {
    return "3d-object" === this.layerType ? "mesh" : "point";
  }
  get profile() {
    return "3d-object" === this.layerType ? "mesh-pyramids" : "points";
  }
  get capabilities() {
    const e3 = null != this.associatedLayer && this.associatedLayer.capabilities ? this.associatedLayer.capabilities : s7, { query: r2, data: { supportsZ: t7, supportsM: o3, isVersioned: s9 } } = e3;
    return { query: r2, data: { supportsZ: t7, supportsM: o3, isVersioned: s9 } };
  }
  createQuery() {
    const e3 = new b();
    return "mesh" !== this.geometryType && (e3.returnGeometry = true, e3.returnZ = true), e3.where = this.definitionExpression || "1=1", e3.sqlFormat = "standard", e3;
  }
  queryExtent(e3, r2) {
    return this._getAssociatedLayerForQuery().then((t7) => t7.queryExtent(e3 || this.createQuery(), r2));
  }
  queryFeatureCount(e3, r2) {
    return this._getAssociatedLayerForQuery().then((t7) => t7.queryFeatureCount(e3 || this.createQuery(), r2));
  }
  queryFeatures(e3, r2) {
    return this._getAssociatedLayerForQuery().then((t7) => t7.queryFeatures(e3 || this.createQuery(), r2)).then((e4) => {
      if (e4 == null ? void 0 : e4.features)
        for (const r3 of e4.features)
          r3.layer = this.layer, r3.sourceLayer = this;
      return e4;
    });
  }
  queryObjectIds(e3, r2) {
    return this._getAssociatedLayerForQuery().then((t7) => t7.queryObjectIds(e3 || this.createQuery(), r2));
  }
  async queryCachedAttributes(e3, r2) {
    const t7 = x(this.fieldsIndex, await n3(this, p2(this)));
    return ie(this.parsedUrl.path, this.attributeStorageInfo, e3, r2, t7);
  }
  async queryCachedFeature(e3, t7) {
    const o3 = await this.queryCachedAttributes(e3, [t7]);
    if (!o3 || 0 === o3.length)
      throw new s2("scenelayer:feature-not-in-cached-data", "Feature not found in cached data");
    const s9 = new c2();
    return s9.attributes = o3[0], s9.layer = this, s9.sourceLayer = this, s9;
  }
  getFieldUsageInfo(e3) {
    return this.fieldsIndex.has(e3) ? { supportsLabelingInfo: false, supportsRenderer: false, supportsPopupTemplate: false, supportsLayerQuery: false } : { supportsLabelingInfo: false, supportsRenderer: true, supportsPopupTemplate: true, supportsLayerQuery: null != this.associatedLayer };
  }
  _getAssociatedLayerForQuery() {
    const e3 = this.associatedLayer;
    return null != e3 && e3.loaded ? Promise.resolve(e3) : this._loadAssociatedLayerForQuery();
  }
  async _loadAssociatedLayerForQuery() {
    if (await this.load(), null == this.associatedLayer)
      throw new s2("buildingscenelayer:query-not-available", "BuildingSceneLayer component layer queries are not available without an associated feature layer", { layer: this });
    try {
      await this.associatedLayer.load();
    } catch (e3) {
      throw new s2("buildingscenelayer:query-not-available", "BuildingSceneLayer associated feature layer could not be loaded", { layer: this, error: e3 });
    }
    return this.associatedLayer;
  }
};
e([y({ readOnly: true })], _.prototype, "parsedUrl", null), e([y({ type: s8, readOnly: true })], _.prototype, "nodePages", void 0), e([y({ type: [l4], readOnly: true })], _.prototype, "materialDefinitions", void 0), e([y({ type: [u3], readOnly: true })], _.prototype, "textureSetDefinitions", void 0), e([y({ type: [m3], readOnly: true })], _.prototype, "geometryDefinitions", void 0), e([y({ readOnly: true })], _.prototype, "serviceUpdateTimeStamp", void 0), e([y({ readOnly: true })], _.prototype, "store", void 0), e([y({ type: String, readOnly: true, json: { read: { source: "store.rootNode" } } })], _.prototype, "rootNode", void 0), e([y({ readOnly: true })], _.prototype, "attributeStorageInfo", void 0), e([y(A.fields)], _.prototype, "fields", void 0), e([y({ readOnly: true })], _.prototype, "fieldsIndex", null), e([y({ readOnly: true, type: Ze })], _.prototype, "associatedLayer", void 0), e([o("service", "associatedLayer", ["associatedLayerID"])], _.prototype, "readAssociatedLayer", null), e([y(A.outFields)], _.prototype, "outFields", void 0), e([y({ type: String, readOnly: true })], _.prototype, "objectIdField", null), e([y({ readOnly: true, type: String, json: { read: false } })], _.prototype, "displayField", null), e([y({ readOnly: true, type: String })], _.prototype, "apiKey", null), e([y({ readOnly: true, type: M })], _.prototype, "fullExtent", null), e([y({ readOnly: true, type: f2 })], _.prototype, "spatialReference", null), e([y({ readOnly: true })], _.prototype, "version", null), e([y({ readOnly: true, type: h })], _.prototype, "elevationInfo", null), e([y({ readOnly: true, type: Number })], _.prototype, "minScale", null), e([y({ readOnly: true, type: Number })], _.prototype, "maxScale", null), e([y({ readOnly: true, type: Number })], _.prototype, "effectiveScaleRange", null), e([y({ type: ["hide", "show"], json: { write: true } })], _.prototype, "listMode", void 0), e([y({ types: u, json: { origins: { service: { read: { source: "drawingInfo.renderer" } } }, name: "layerDefinition.drawingInfo.renderer", write: true }, value: null })], _.prototype, "renderer", void 0), e([y({ type: String, json: { origins: { service: { read: false, write: false } }, name: "layerDefinition.definitionExpression", write: { enabled: true, allowNull: true } } })], _.prototype, "definitionExpression", void 0), e([y(y2)], _.prototype, "popupEnabled", void 0), e([y({ type: k, json: { read: { source: "popupInfo" }, write: { target: "popupInfo" } } })], _.prototype, "popupTemplate", void 0), e([y({ readOnly: true, type: String, json: { origins: { service: { read: { source: "store.normalReferenceFrame" } } }, read: false } })], _.prototype, "normalReferenceFrame", void 0), e([y({ readOnly: true, json: { read: false } })], _.prototype, "defaultPopupTemplate", null), e([y()], _.prototype, "types", null), e([y()], _.prototype, "typeIdField", null), e([y({ json: { write: false } }), o2(new s4({ "3DObject": "3d-object", Point: "point" }))], _.prototype, "layerType", void 0), e([y()], _.prototype, "geometryType", null), e([y()], _.prototype, "profile", null), e([y({ readOnly: true, json: { read: false } })], _.prototype, "capabilities", null), _ = e([c(Q)], _);
var C = _;

// node_modules/@arcgis/core/layers/buildingSublayers/BuildingGroupSublayer.js
var a5;
var l5 = { type: V2, readOnly: true, json: { origins: { service: { read: { source: "sublayers", reader: p4 } } }, read: false } };
function p4(r2, o3, t7) {
  if (r2 && Array.isArray(r2))
    return new V2(r2.map((r3) => {
      const e3 = y3(r3);
      if (e3) {
        const o4 = new e3();
        return o4.read(r3, t7), o4;
      }
      return (t7 == null ? void 0 : t7.messages) && r3 && t7.messages.push(new s3("building-scene-layer:unsupported-sublayer-type", "Building scene sublayer of type '" + (r3.type || "unknown") + "' are not supported", { definition: r3, context: t7 })), null;
    }));
}
var c4 = a5 = class extends n4 {
  constructor(r2) {
    super(r2), this.type = "building-group", this.listMode = "show", this.sublayers = null;
  }
  loadAll() {
    return a3(this, (r2) => a5.forEachSublayer(this.sublayers, (e3) => {
      "building-group" !== e3.type && r2(e3);
    }));
  }
};
function y3(r2) {
  return "group" === r2.layerType ? c4 : C;
}
e([y({ type: ["hide", "show", "hide-children"], json: { write: true } })], c4.prototype, "listMode", void 0), e([y(l5)], c4.prototype, "sublayers", void 0), c4 = a5 = e([c("esri.layers.buildingSublayers.BuildingGroupSublayer")], c4), function(r2) {
  function e3(r3, o3) {
    r3.forEach((r4) => {
      o3(r4), "building-group" === r4.type && e3(r4.sublayers, o3);
    });
  }
  r2.sublayersProperty = l5, r2.readSublayers = p4, r2.forEachSublayer = e3;
}(c4 || (c4 = {}));
var d = c4;

// node_modules/@arcgis/core/layers/support/BuildingFilterAuthoringInfo.js
var e2 = class extends f {
  constructor() {
    super(...arguments), this.type = null;
  }
};
e([y({ type: String, readOnly: true, json: { write: true } })], e2.prototype, "type", void 0), e2 = e([c("esri.layers.support.BuildingFilterAuthoringInfo")], e2);
var p5 = e2;

// node_modules/@arcgis/core/layers/support/BuildingFilterAuthoringInfoType.js
var p6;
var i2 = p6 = class extends f {
  constructor() {
    super(...arguments), this.filterType = null, this.filterValues = null;
  }
  clone() {
    return new p6({ filterType: this.filterType, filterValues: a(this.filterValues) });
  }
};
e([y({ type: String, json: { write: true } })], i2.prototype, "filterType", void 0), e([y({ type: [String], json: { write: true } })], i2.prototype, "filterValues", void 0), i2 = p6 = e([c("esri.layers.support.BuildingFilterAuthoringInfoType")], i2);
var l6 = i2;

// node_modules/@arcgis/core/layers/support/BuildingFilterAuthoringInfoBlock.js
var c5;
var l7 = V2.ofType(l6);
var n5 = c5 = class extends f {
  clone() {
    return new c5({ filterTypes: a(this.filterTypes) });
  }
};
e([y({ type: l7, json: { write: true } })], n5.prototype, "filterTypes", void 0), n5 = c5 = e([c("esri.layers.support.BuildingFilterAuthoringInfoBlock")], n5);
var m4 = n5;

// node_modules/@arcgis/core/layers/support/BuildingFilterAuthoringInfoCheckbox.js
var p7;
var l8 = V2.ofType(m4);
var n6 = p7 = class extends p5 {
  constructor() {
    super(...arguments), this.type = "checkbox";
  }
  clone() {
    return new p7({ filterBlocks: a(this.filterBlocks) });
  }
};
e([y({ type: ["checkbox"] })], n6.prototype, "type", void 0), e([y({ type: l8, json: { write: true } })], n6.prototype, "filterBlocks", void 0), n6 = p7 = e([c("esri.layers.support.BuildingFilterAuthoringInfoCheckbox")], n6);
var u4 = n6;

// node_modules/@arcgis/core/layers/support/BuildingFilterMode.js
var t4 = class extends f {
};
e([y({ readOnly: true, json: { read: false } })], t4.prototype, "type", void 0), t4 = e([c("esri.layers.support.BuildingFilterMode")], t4);
var p8 = t4;

// node_modules/@arcgis/core/layers/support/BuildingFilterModeSolid.js
var t5;
var p9 = t5 = class extends p8 {
  constructor() {
    super(...arguments), this.type = "solid";
  }
  clone() {
    return new t5();
  }
};
e([y({ type: ["solid"], readOnly: true, json: { write: true } })], p9.prototype, "type", void 0), p9 = t5 = e([c("esri.layers.support.BuildingFilterModeSolid")], p9);
var i3 = p9;

// node_modules/@arcgis/core/layers/support/BuildingFilterModeWireFrame.js
var c6;
var m5 = c6 = class extends p8 {
  constructor() {
    super(...arguments), this.type = "wire-frame", this.edges = null;
  }
  clone() {
    return new c6({ edges: a(this.edges) });
  }
};
e([o2({ wireFrame: "wire-frame" })], m5.prototype, "type", void 0), e([y(t2)], m5.prototype, "edges", void 0), m5 = c6 = e([c("esri.layers.support.BuildingFilterModeWireFrame")], m5);
var a6 = m5;

// node_modules/@arcgis/core/layers/support/BuildingFilterModeXRay.js
var t6;
var p10 = t6 = class extends p8 {
  constructor() {
    super(...arguments), this.type = "x-ray";
  }
  clone() {
    return new t6();
  }
};
e([y({ type: ["x-ray"], readOnly: true, json: { write: true } })], p10.prototype, "type", void 0), p10 = t6 = e([c("esri.layers.support.BuildingFilterModeXRay")], p10);
var c7 = p10;

// node_modules/@arcgis/core/layers/support/BuildingFilterBlock.js
var d2;
var a7 = { nonNullable: true, types: { key: "type", base: p8, typeMap: { solid: i3, "wire-frame": a6, "x-ray": c7 } }, json: { read: (e3) => {
  switch (e3 == null ? void 0 : e3.type) {
    case "solid":
      return i3.fromJSON(e3);
    case "wireFrame":
      return a6.fromJSON(e3);
    case "x-ray":
      return c7.fromJSON(e3);
    default:
      return;
  }
}, write: { enabled: true, isRequired: true } } };
var u5 = d2 = class extends f {
  constructor() {
    super(...arguments), this.filterExpression = null, this.filterMode = new i3(), this.title = "";
  }
  clone() {
    return new d2({ filterExpression: this.filterExpression, filterMode: a(this.filterMode), title: this.title });
  }
};
e([y({ type: String, json: { write: { enabled: true, isRequired: true } } })], u5.prototype, "filterExpression", void 0), e([y(a7)], u5.prototype, "filterMode", void 0), e([y({ type: String, json: { write: { enabled: true, isRequired: true } } })], u5.prototype, "title", void 0), u5 = d2 = e([c("esri.layers.support.BuildingFilterBlock")], u5);
var c8 = u5;

// node_modules/@arcgis/core/layers/support/BuildingFilter.js
var u6;
var d3 = V2.ofType(c8);
var m6 = u6 = class extends f {
  constructor() {
    super(...arguments), this.description = null, this.filterBlocks = null, this.id = n2(), this.name = null;
  }
  clone() {
    return new u6({ description: this.description, filterBlocks: a(this.filterBlocks), id: this.id, name: this.name, filterAuthoringInfo: a(this.filterAuthoringInfo) });
  }
};
e([y({ type: String, json: { write: true } })], m6.prototype, "description", void 0), e([y({ type: d3, json: { write: { enabled: true, isRequired: true } } })], m6.prototype, "filterBlocks", void 0), e([y({ types: { key: "type", base: p5, typeMap: { checkbox: u4 } }, json: { read: (o3) => "checkbox" === (o3 == null ? void 0 : o3.type) ? u4.fromJSON(o3) : null, write: true } })], m6.prototype, "filterAuthoringInfo", void 0), e([y({ type: String, constructOnly: true, json: { write: { enabled: true, isRequired: true } } })], m6.prototype, "id", void 0), e([y({ type: String, json: { write: { enabled: true, isRequired: true } } })], m6.prototype, "name", void 0), m6 = u6 = e([c("esri.layers.support.BuildingFilter")], m6);
var f4 = m6;

// node_modules/@arcgis/core/layers/support/BuildingSummaryStatistics.js
var p11 = class extends f {
  constructor() {
    super(...arguments), this.fieldName = null, this.modelName = null, this.label = null, this.min = null, this.max = null, this.mostFrequentValues = null, this.subLayerIds = null;
  }
};
e([y({ type: String })], p11.prototype, "fieldName", void 0), e([y({ type: String })], p11.prototype, "modelName", void 0), e([y({ type: String })], p11.prototype, "label", void 0), e([y({ type: Number })], p11.prototype, "min", void 0), e([y({ type: Number })], p11.prototype, "max", void 0), e([y({ json: { read: (e3) => Array.isArray(e3) && (e3.every((e4) => "string" == typeof e4) || e3.every((e4) => "number" == typeof e4)) ? e3.slice() : null } })], p11.prototype, "mostFrequentValues", void 0), e([y({ type: [Number] })], p11.prototype, "subLayerIds", void 0), p11 = e([c("esri.layers.support.BuildingFieldStatistics")], p11);
var n7 = class extends m.LoadableMixin(n(f)) {
  constructor() {
    super(...arguments), this.url = null;
  }
  get fields() {
    return this.loaded || "loading" === this.loadStatus ? this._get("fields") : (s.getLogger(this).error("building summary statistics are not loaded"), null);
  }
  load(e3) {
    const r2 = null != e3 ? e3.signal : null;
    return this.addResolvingPromise(this._fetchService(r2)), Promise.resolve(this);
  }
  async _fetchService(e3) {
    const t7 = (await j(this.url, { query: { f: "json" }, responseType: "json", signal: e3 })).data;
    this.read(t7, { origin: "service" });
  }
};
e([y({ constructOnly: true, type: String })], n7.prototype, "url", void 0), e([y({ readOnly: true, type: [p11], json: { read: { source: "summary" } } })], n7.prototype, "fields", null), n7 = e([c("esri.layers.support.BuildingSummaryStatistics")], n7);
var u7 = n7;

// node_modules/@arcgis/core/layers/BuildingSceneLayer.js
var K = V2.ofType(f4);
var R = a(d.sublayersProperty);
var _a;
var U = (_a = R.json) == null ? void 0 : _a.origins;
U && (U["web-scene"] = { type: [C], write: { enabled: true, overridePolicy: () => ({ enabled: false }) } }, U["portal-item"] = { type: [C], write: { enabled: true, overridePolicy: () => ({ enabled: false }) } });
var C2 = class extends E(l3(u2(j2(t3(m2(i(b2))))))) {
  constructor(e3) {
    super(e3), this.operationalLayerType = "BuildingSceneLayer", this.allSublayers = new l2({ getCollections: () => [this.sublayers], getChildrenFunction: (e4) => "building-group" === e4.type ? e4.sublayers : null }), this.sublayers = null, this._sublayerOverrides = null, this.filters = new K(), this.activeFilterId = null, this.summaryStatistics = null, this.outFields = null, this.legendEnabled = true, this.type = "building-scene";
  }
  normalizeCtorArgs(e3) {
    return "string" == typeof e3 ? { url: e3 } : e3 ?? {};
  }
  destroy() {
    this.allSublayers.destroy();
  }
  readSublayers(e3, r2, t7) {
    const s9 = d.readSublayers(e3, r2, t7);
    return d.forEachSublayer(s9, (e4) => e4.layer = this), this._sublayerOverrides && (this.applySublayerOverrides(s9, this._sublayerOverrides), this._sublayerOverrides = null), s9;
  }
  applySublayerOverrides(e3, { overrides: r2, context: t7 }) {
    d.forEachSublayer(e3, (e4) => e4.read(r2.get(e4.id), t7));
  }
  readSublayerOverrides(e3, r2) {
    var _a2;
    const t7 = /* @__PURE__ */ new Map();
    for (const i4 of e3)
      null != i4 && "object" == typeof i4 && "number" == typeof i4.id ? t7.set(i4.id, i4) : (_a2 = r2.messages) == null ? void 0 : _a2.push(new s2("building-scene-layer:invalid-sublayer-override", "Invalid value for sublayer override. Not an object or no id specified.", { value: i4 }));
    return { overrides: t7, context: r2 };
  }
  writeSublayerOverrides(e3, r2, t7) {
    const s9 = [];
    d.forEachSublayer(this.sublayers, (e4) => {
      const r3 = e4.write({}, t7);
      Object.keys(r3).length > 1 && s9.push(r3);
    }), s9.length > 0 && (r2.sublayers = s9);
  }
  writeUnappliedOverrides(e3, r2) {
    r2.sublayers = [], e3.overrides.forEach((e4) => {
      r2.sublayers.push(a(e4));
    });
  }
  write(e3, r2) {
    return e3 = super.write(e3, r2), !r2 || "web-scene" !== r2.origin && "portal-item" !== r2.origin || (this.sublayers ? this.writeSublayerOverrides(this.sublayers, e3, r2) : this._sublayerOverrides && this.writeUnappliedOverrides(this._sublayerOverrides, e3)), e3;
  }
  read(e3, r2) {
    if (super.read(e3, r2), r2 && ("web-scene" === r2.origin || "portal-item" === r2.origin) && null != e3 && Array.isArray(e3.sublayers)) {
      const t7 = this.readSublayerOverrides(e3.sublayers, r2);
      this.sublayers ? this.applySublayerOverrides(this.sublayers, t7) : this._sublayerOverrides = t7;
    }
  }
  readSummaryStatistics(e3, r2) {
    var _a2;
    if ("string" == typeof r2.statisticsHRef) {
      const e4 = V((_a2 = this.parsedUrl) == null ? void 0 : _a2.path, r2.statisticsHRef);
      return new u7({ url: e4 });
    }
    return null;
  }
  set elevationInfo(e3) {
    this._set("elevationInfo", e3), this._validateElevationInfo();
  }
  load(e3) {
    const r2 = null != e3 ? e3.signal : null, t7 = this.loadFromPortal({ supportedTypes: ["Scene Service"] }, e3).catch(a2).then(() => this._fetchService(r2)).then(() => this._fetchAssociatedFeatureService(r2));
    return this.addResolvingPromise(t7), Promise.resolve(this);
  }
  loadAll() {
    return t(this, (e3) => {
      d.forEachSublayer(this.sublayers, (r2) => {
        "building-group" !== r2.type && e3(r2);
      }), this.summaryStatistics && e3(this.summaryStatistics);
    });
  }
  async saveAs(e3, r2) {
    return this._debouncedSaveOperations(P.SAVE_AS, { ...r2, getTypeKeywords: () => this._getTypeKeywords(), portalItemLayerType: "building-scene" }, e3);
  }
  async save() {
    const e3 = { getTypeKeywords: () => this._getTypeKeywords(), portalItemLayerType: "building-scene" };
    return this._debouncedSaveOperations(P.SAVE, e3);
  }
  validateLayer(e3) {
    if (!e3.layerType || "Building" !== e3.layerType)
      throw new s2("buildingscenelayer:layer-type-not-supported", "BuildingSceneLayer does not support this layer type", { layerType: e3.layerType });
  }
  _getTypeKeywords() {
    return ["Building"];
  }
  async _fetchAssociatedFeatureService(e3) {
    try {
      const { portalItem: r2 } = await l(`${this.url}/layers/${this.layerId}`, { sceneLayerItem: this.portalItem, apiKey: this.apiKey, signal: e3 });
      this.associatedFeatureServiceItem = r2;
    } catch (r2) {
      s.getLogger(this).warn("Associated feature service item could not be loaded", r2);
    }
  }
  _validateElevationInfo() {
    const e3 = this.elevationInfo, r2 = "Building scene layers";
    x2(s.getLogger(this), p3(r2, "absolute-height", e3)), x2(s.getLogger(this), E2(r2, e3));
  }
};
e([y({ type: ["BuildingSceneLayer"] })], C2.prototype, "operationalLayerType", void 0), e([y({ readOnly: true })], C2.prototype, "allSublayers", void 0), e([y(R)], C2.prototype, "sublayers", void 0), e([o("service", "sublayers")], C2.prototype, "readSublayers", null), e([y({ type: K, nonNullable: true, json: { write: true } })], C2.prototype, "filters", void 0), e([y({ type: String, json: { write: true } })], C2.prototype, "activeFilterId", void 0), e([y({ readOnly: true, type: u7 })], C2.prototype, "summaryStatistics", void 0), e([o("summaryStatistics", ["statisticsHRef"])], C2.prototype, "readSummaryStatistics", null), e([y({ type: [String], json: { read: false } })], C2.prototype, "outFields", void 0), e([y(v)], C2.prototype, "fullExtent", void 0), e([y(c3)], C2.prototype, "legendEnabled", void 0), e([y({ type: ["show", "hide", "hide-children"] })], C2.prototype, "listMode", void 0), e([y(w(f2))], C2.prototype, "spatialReference", void 0), e([y(f3)], C2.prototype, "elevationInfo", null), e([y({ json: { read: false }, readOnly: true })], C2.prototype, "type", void 0), e([y()], C2.prototype, "associatedFeatureServiceItem", void 0), C2 = e([c("esri.layers.BuildingSceneLayer")], C2);
var M2 = C2;
export {
  M2 as default
};
//# sourceMappingURL=BuildingSceneLayer-CKXZWSP4.js.map
