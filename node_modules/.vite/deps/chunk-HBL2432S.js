import {
  o as o2
} from "./chunk-APYNYYQC.js";
import {
  o
} from "./chunk-423VNHLR.js";
import {
  c
} from "./chunk-SBW6NNVI.js";
import {
  e
} from "./chunk-62CXLI6S.js";
import {
  C
} from "./chunk-RFPH3ZTZ.js";
import {
  a
} from "./chunk-WJ3HJKNC.js";

// node_modules/@arcgis/core/versionManagement/support/versionManagementUtils.js
var r = o2();
var t = /* @__PURE__ */ new Map();
var n = /* @__PURE__ */ new Map();
async function s(e2, t2, o4 = false) {
  var _a, _b;
  if (!e2 || !t2)
    return true;
  const s2 = e2.replace(/\/FeatureServer/i, "/VersionManagementServer").replace(/\/\d*$/, ""), a4 = (_a = n.get(s2)) == null ? void 0 : _a.entries();
  if (a4) {
    for (const [n2, i] of a4)
      if (i.name === t2) {
        const e3 = !((_b = i.stack) == null ? void 0 : _b.hasForwardEdits());
        if (!e3 && o4) {
          const [{ deleteForwardEdits: e4 }, { default: t3 }] = await Promise.all([import("./deleteForwardEdits-SDIHMXRU.js"), import("./DeleteForwardEditsParameters-55SDKCTS.js")]);
          return e4(s2, n2, new t3({ sessionId: r, moment: i.moment }));
        }
        return e3;
      }
  }
  return true;
}
function a2(e2, r2) {
  var _a;
  if (!e2)
    return false;
  const t2 = e2.replace(/\/FeatureServer/i, "/VersionManagementServer").replace(/\/\d*$/, ""), o4 = (_a = n.get(t2)) == null ? void 0 : _a.entries();
  if (o4) {
    for (const [n2, s2] of o4)
      if (s2.name === r2) {
        return "edit" === s2.lockType;
      }
  }
  return false;
}

// node_modules/@arcgis/core/layers/mixins/EditBusLayer.js
var o3 = new o.EventEmitter();
function l(e2) {
  return o3.on("apply-edits", new WeakRef(e2));
}
function a3(e2) {
  return o3.on("update-moment", new WeakRef(e2));
}
function c2(e2, t2, s2 = null, r2 = false) {
  const d = C();
  return r2 = null == t2 || r2, o3.emit("apply-edits", { serviceUrl: e2, layerId: t2, gdbVersion: s2, mayReceiveServiceEdits: r2, result: d.promise }), d;
}
var u = "esri.layers.mixins.EditBusLayer";
var m = Symbol(u);
function p(e2) {
  return null != e2 && "object" == typeof e2 && m in e2;
}
function b(e2) {
  return null != e2 && "object" == typeof e2 && "gdbVersion" in e2;
}
function g(e2, t2, s2) {
  const i = new URL(e2).host, r2 = t.get(i), n2 = (e3) => !e3 || e3 === r2;
  return n2(t2) && n2(s2) || t2 === s2;
}
var F = (t2) => {
  var i;
  let d = class extends t2 {
    constructor(...e2) {
      super(...e2), this[i] = true, this._applyEditsHandler = (e3) => {
        const { serviceUrl: t3, layerId: i2, gdbVersion: r2, mayReceiveServiceEdits: d2, result: o4 } = e3, l2 = t3 === this.url, a4 = null != i2 && null != this.layerId && i2 === this.layerId, c3 = b(this), h = b(this) && g(t3, r2, this.gdbVersion);
        if (!l2 || c3 && !h || !a4 && !d2)
          return;
        const u2 = o4.then((e4) => {
          var _a;
          if (a4 && (e4.addedFeatures.length || e4.updatedFeatures.length || e4.deletedFeatures.length || e4.addedAttachments.length || e4.updatedAttachments.length || e4.deletedAttachments.length))
            return this.emit("edits", a(e4)), e4;
          const t4 = (_a = e4.editedFeatures) == null ? void 0 : _a.find(({ layerId: e5 }) => e5 === this.layerId);
          if (t4) {
            const { adds: i3, updates: r3, deletes: d3 } = t4.editedFeatures, n2 = { edits: null, addedAttachments: [], deletedAttachments: [], updatedAttachments: [], addedFeatures: i3 ? i3.map(({ attributes: e5 }) => ({ objectId: this.objectIdField && e5[this.objectIdField], globalId: this.globalIdField && e5[this.globalIdField] })) : [], deletedFeatures: d3 ? d3.map(({ attributes: e5 }) => ({ objectId: this.objectIdField && e5[this.objectIdField], globalId: this.globalIdField && e5[this.globalIdField] })) : [], updatedFeatures: r3 ? r3.map(({ current: { attributes: e5 } }) => ({ objectId: this.objectIdField && e5[this.objectIdField], globalId: this.globalIdField && e5[this.globalIdField] })) : [], editedFeatures: a(e4.editedFeatures), exceededTransferLimit: false, historicMoment: a(e4.historicMoment) };
            return this.emit("edits", n2), n2;
          }
          return { edits: null, addedAttachments: [], deletedAttachments: [], updatedAttachments: [], addedFeatures: [], deletedFeatures: [], updatedFeatures: [], editedFeatures: a(e4.editedFeatures), exceededTransferLimit: false, historicMoment: a(e4.historicMoment) };
        }).then((e4) => ("historicMoment" in this && this.historicMoment !== e4.historicMoment && a2(t3, r2) && (this.historicMoment = e4.historicMoment), e4));
        this.emit("apply-edits", { result: u2 });
      }, this._updateMomentHandler = (e3) => {
        const { serviceUrl: t3, gdbVersion: s2, moment: i2 } = e3, r2 = t3 === this.url, d2 = b(this), n2 = b(this) && g(t3, s2, this.gdbVersion), o4 = b(this) && !g(t3, this.gdbVersion, null);
        r2 && d2 && n2 && o4 && "historicMoment" in this && this.historicMoment !== i2 && (this.historicMoment = i2);
      }, this.when().then(() => {
        this.addHandles(l(this._applyEditsHandler)), "historicMoment" in this && this.addHandles(a3(this._updateMomentHandler));
      }, () => {
      });
    }
  };
  return i = m, d = e([c(u)], d), d;
};

export {
  r,
  s,
  a2 as a,
  l,
  a3 as a2,
  c2 as c,
  p,
  g,
  F
};
//# sourceMappingURL=chunk-HBL2432S.js.map
