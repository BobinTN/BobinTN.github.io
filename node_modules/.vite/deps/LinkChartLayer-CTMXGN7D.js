import {
  p as p4
} from "./chunk-IIRYA6V3.js";
import {
  l,
  o as o2
} from "./chunk-UIBKJIZ5.js";
import {
  m as m2
} from "./chunk-A427XTHR.js";
import "./chunk-QAQNFI3S.js";
import {
  W
} from "./chunk-7KUR2TMU.js";
import "./chunk-3ON6HO7Q.js";
import "./chunk-KMTPMPRR.js";
import "./chunk-K4NVR6KM.js";
import "./chunk-57KRYRCY.js";
import {
  rt
} from "./chunk-747B2TEO.js";
import "./chunk-4NEWABLH.js";
import {
  t as t2
} from "./chunk-FW2Y26A2.js";
import {
  t as t3
} from "./chunk-5WG7GACT.js";
import "./chunk-AZHRWST4.js";
import "./chunk-PFFV4MXI.js";
import "./chunk-NYTJIWNN.js";
import "./chunk-7Y57Y6IH.js";
import "./chunk-WND35VNG.js";
import "./chunk-PUYNEESA.js";
import "./chunk-GXVWD6F2.js";
import "./chunk-W4QVNWBV.js";
import "./chunk-LOGPPZUD.js";
import "./chunk-HYU6N3H3.js";
import "./chunk-EC5POYCL.js";
import "./chunk-X5VYGREB.js";
import {
  c as c2
} from "./chunk-JDVR6MOC.js";
import "./chunk-DYYHVSPV.js";
import "./chunk-UIN5EOGE.js";
import "./chunk-DT2VHQBL.js";
import {
  s as s4
} from "./chunk-KLPBCYCG.js";
import "./chunk-3ZWLSDVT.js";
import {
  p as p3
} from "./chunk-HPFRYEGX.js";
import {
  m as m3,
  t as t4
} from "./chunk-F64GI7MS.js";
import "./chunk-4LDWKTSM.js";
import {
  f as f3
} from "./chunk-VOYU5TTK.js";
import {
  a as a2
} from "./chunk-P5VIVFJT.js";
import "./chunk-SA3C7GIT.js";
import "./chunk-P3R45ANF.js";
import {
  t as t5
} from "./chunk-PIEUUBJ5.js";
import "./chunk-VIOPOI6P.js";
import "./chunk-DOALI2C2.js";
import "./chunk-E3I4MGUC.js";
import "./chunk-UHNBENSV.js";
import "./chunk-GDKL26HH.js";
import "./chunk-2CL4LRYG.js";
import "./chunk-64EQFPYJ.js";
import "./chunk-HKYMYCLL.js";
import "./chunk-ICVVQFO6.js";
import {
  d
} from "./chunk-BYK6DXRK.js";
import "./chunk-UTCX6DGX.js";
import "./chunk-7VNZ6V2N.js";
import "./chunk-VKTTTBW2.js";
import "./chunk-TTZWDXX5.js";
import "./chunk-OCLKX5SY.js";
import "./chunk-SEKLTVY5.js";
import "./chunk-HX5GOVNX.js";
import "./chunk-2Q2Q2Z4U.js";
import "./chunk-S6MJEC4A.js";
import "./chunk-HU7QYAVQ.js";
import {
  b as b2
} from "./chunk-45OAWGCA.js";
import "./chunk-X2TA76Q5.js";
import "./chunk-T3Y5GTKO.js";
import {
  y as y2
} from "./chunk-XN6LAULS.js";
import "./chunk-M7OEQQRX.js";
import "./chunk-CSWPLQ7Q.js";
import "./chunk-KWSMYM7P.js";
import "./chunk-RP5SAUAF.js";
import "./chunk-6BFXMZEZ.js";
import "./chunk-AMSVADDY.js";
import "./chunk-GAJBN4TM.js";
import {
  b as b3
} from "./chunk-YXRSJYLG.js";
import "./chunk-KBKTS574.js";
import {
  w
} from "./chunk-6ABSX3YY.js";
import "./chunk-24NOAXOQ.js";
import "./chunk-FWR4JURK.js";
import {
  k
} from "./chunk-BELGAUAK.js";
import "./chunk-JHJVOI7Q.js";
import "./chunk-TWNBDJHC.js";
import "./chunk-HITXLR5N.js";
import "./chunk-WYZCKLOR.js";
import "./chunk-S6NERLXF.js";
import "./chunk-4TSAC52K.js";
import "./chunk-H4ZZ5S37.js";
import "./chunk-G557TGXY.js";
import "./chunk-2AXFVQBN.js";
import "./chunk-WOGT6UK2.js";
import "./chunk-RHT6WWRD.js";
import "./chunk-EUGXS5RE.js";
import "./chunk-IRNKV32L.js";
import "./chunk-HLM2UN42.js";
import "./chunk-5WWPLX36.js";
import "./chunk-UNONG753.js";
import "./chunk-OFRZSMZB.js";
import "./chunk-IATM3RCE.js";
import "./chunk-BEALJUHO.js";
import "./chunk-GRHSIT57.js";
import "./chunk-PJQIAD5D.js";
import {
  p as p5
} from "./chunk-Z6KIMOUA.js";
import {
  e as e2
} from "./chunk-SZAJDZCO.js";
import "./chunk-M7R7REMB.js";
import "./chunk-ZZYUEH57.js";
import {
  o
} from "./chunk-VTWXDFFD.js";
import {
  p as p2
} from "./chunk-IPCIO3PX.js";
import "./chunk-EIY2DYTV.js";
import "./chunk-WJ4LS3YG.js";
import "./chunk-F6MD5VOH.js";
import "./chunk-V2RPSCV3.js";
import "./chunk-LMT5JII2.js";
import "./chunk-A43TI6AT.js";
import "./chunk-BHJVWW2P.js";
import {
  F,
  b
} from "./chunk-4HKQSEUR.js";
import "./chunk-V3U4F2NL.js";
import "./chunk-ZB6PGKG5.js";
import {
  j as j2,
  m3 as m,
  u
} from "./chunk-OIIDE5GZ.js";
import "./chunk-3XSRVKBX.js";
import "./chunk-WYBZLWIA.js";
import "./chunk-MKW4ORPJ.js";
import "./chunk-YTH6VA7N.js";
import "./chunk-GINTRQSD.js";
import "./chunk-TBSVVR6M.js";
import "./chunk-6TJWLWLO.js";
import "./chunk-H7BKONNV.js";
import "./chunk-K6C6RVSV.js";
import "./chunk-KBJ5Z4R2.js";
import {
  V
} from "./chunk-JUZJCTW2.js";
import "./chunk-423VNHLR.js";
import "./chunk-FN47E7YK.js";
import "./chunk-XZS3Q5K4.js";
import "./chunk-XXFXRXFH.js";
import "./chunk-CCXEAKIM.js";
import {
  M
} from "./chunk-Y5D433JZ.js";
import {
  p,
  x2 as x
} from "./chunk-QNOCEWCR.js";
import "./chunk-WURET5CW.js";
import {
  f as f2
} from "./chunk-QWPLZ3QH.js";
import {
  N
} from "./chunk-HLGIRLYQ.js";
import "./chunk-N2K4VRZH.js";
import "./chunk-WL4VPODY.js";
import "./chunk-OMPEZIP5.js";
import "./chunk-EUTNDAIV.js";
import {
  a
} from "./chunk-SJZIFARA.js";
import {
  j,
  t3 as t
} from "./chunk-R5DM4YAB.js";
import {
  f
} from "./chunk-NSRXJNTS.js";
import {
  g,
  y2 as y
} from "./chunk-LXXF7K7W.js";
import {
  c,
  r2 as r
} from "./chunk-SBW6NNVI.js";
import {
  e
} from "./chunk-62CXLI6S.js";
import {
  s as s3
} from "./chunk-RFPH3ZTZ.js";
import "./chunk-WGO3VFQP.js";
import "./chunk-CQS47VN5.js";
import {
  s2 as s,
  s3 as s2
} from "./chunk-WJ3HJKNC.js";
import {
  has
} from "./chunk-4V6374PV.js";
import "./chunk-A34O4XB5.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/layers/knowledgeGraph/SessionMemoryStorage.js
var i = "ESRI__DESTINATION_ID";
var s5 = "ESRI__ORIGIN_ID";
var o3 = class _o {
  constructor() {
    this._featureLookup = /* @__PURE__ */ new Map();
  }
  static getInstance() {
    return _o.instance || (_o.instance = new _o()), _o.instance;
  }
  static resetInstance() {
    _o.instance && (_o.instance = null);
  }
  deleteFromStore(e10) {
    e10.forEach((e11) => {
      this._featureLookup.delete(e11);
    });
  }
  readFromStoreByList(e10) {
    const t17 = [];
    return e10.forEach((e11) => {
      const r6 = this.readFromStoreById(e11);
      r6 && t17.push(r6);
    }), t17;
  }
  readFromStoreById(e10) {
    return this._featureLookup.get(e10) ?? null;
  }
  writeToStore(o7, n4, p18) {
    const a8 = [];
    return o7.forEach((o8) => {
      if (!(o8 == null ? void 0 : o8.id))
        return;
      o8.properties || (o8.properties = []);
      let u4, c12 = null;
      if (p18 && o8.properties[p18] && (c12 = rt(o8.properties[p18])), "originId" in o8 && "destinationId" in o8 && (o8.properties[s5] = o8.originId, o8.properties[i] = o8.destinationId), o8.properties[n4] = o8.id, o8.id && this._featureLookup.has(o8.id) && this._featureLookup.get(o8.id).attributes) {
        const e10 = this._featureLookup.get(o8.id), i10 = JSON.parse(JSON.stringify(Object.assign(e10.attributes, o8.properties)));
        p18 && o8.properties[p18] && (i10[p18] = p2(o8.properties[p18])), u4 = new t2(c12 ? JSON.parse(JSON.stringify(c12)) : (e10 == null ? void 0 : e10.geometry) ? JSON.parse(JSON.stringify(e10.geometry)) : null, i10, null, o8.properties[n4]);
      } else
        u4 = new t2(c12 ? JSON.parse(JSON.stringify(c12)) : null, o8.properties, null, o8.properties[n4]);
      this._featureLookup.set(o8.id, u4), a8.push(u4);
    }), a8;
  }
};

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphQueryResult.js
var t6 = class extends g {
  constructor(r6) {
    super(r6), this.resultRows = [];
  }
};
e([y()], t6.prototype, "resultRows", void 0), t6 = e([c("esri.rest.knowledgeGraph.GraphQueryResult")], t6);
var c3 = t6;

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphQueryStreamingResult.js
var t7 = class extends g {
  constructor(r6) {
    super(r6), this.resultRowsStream = new ReadableStream();
  }
};
e([y()], t7.prototype, "resultRowsStream", void 0), t7 = e([c("esri.rest.knowledgeGraph.GraphQueryResult")], t7);
var c4 = t7;

// node_modules/@arcgis/core/rest/knowledgeGraph/FieldIndex.js
var s6 = class extends f {
  constructor(o7) {
    super(o7), this.name = null, this.unique = null, this.ascending = null, this.description = null, this.fieldNames = null;
  }
};
e([y({ type: String, json: { write: true } })], s6.prototype, "name", void 0), e([y({ type: Boolean, json: { write: true } })], s6.prototype, "unique", void 0), e([y({ type: Boolean, json: { write: true } })], s6.prototype, "ascending", void 0), e([y({ type: String, json: { write: true } })], s6.prototype, "description", void 0), e([y({ type: [String], json: { write: true } })], s6.prototype, "fieldNames", void 0), s6 = e([c("esri.rest.knowledgeGraph.FieldIndex")], s6);
var i2 = s6;

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphProperty.js
var i3 = class extends f {
  constructor(t17) {
    super(t17), this.name = null, this.alias = null, this.fieldType = null, this.geometryType = null, this.hasM = null, this.hasZ = null, this.nullable = null, this.editable = null, this.required = null, this.defaultVisibility = null, this.systemMaintained = null, this.role = null, this.defaultValue = null;
  }
};
e([y({ type: String, json: { write: true } })], i3.prototype, "name", void 0), e([y({ type: String, json: { write: true } })], i3.prototype, "alias", void 0), e([y({ type: String, json: { write: true } })], i3.prototype, "fieldType", void 0), e([y({ type: String, json: { write: true } })], i3.prototype, "geometryType", void 0), e([y({ type: Boolean, json: { write: true } })], i3.prototype, "hasM", void 0), e([y({ type: Boolean, json: { write: true } })], i3.prototype, "hasZ", void 0), e([y({ type: Boolean, json: { write: true } })], i3.prototype, "nullable", void 0), e([y({ type: Boolean, json: { write: true } })], i3.prototype, "editable", void 0), e([y({ type: Boolean, json: { write: true } })], i3.prototype, "required", void 0), e([y({ type: Boolean, json: { write: true } })], i3.prototype, "defaultVisibility", void 0), e([y({ type: Boolean, json: { write: true } })], i3.prototype, "systemMaintained", void 0), e([y()], i3.prototype, "role", void 0), e([y({ type: Object, json: { type: String, write: { writer: (t17, e10) => {
  e10.defaultValue = null != t17 ? t17.toString() : null;
} } } })], i3.prototype, "defaultValue", void 0), i3 = e([c("esri.rest.knowledgeGraph.GraphProperty")], i3);
var s7 = i3;

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphObjectType.js
var i4 = class extends f {
  constructor(r6) {
    super(r6), this.name = null, this.alias = null, this.role = null, this.strict = null, this.properties = null, this.fieldIndexes = null;
  }
};
e([y({ type: String, json: { write: true } })], i4.prototype, "name", void 0), e([y({ type: String, json: { write: true } })], i4.prototype, "alias", void 0), e([y({ type: String, json: { write: true } })], i4.prototype, "role", void 0), e([y({ type: Boolean, json: { write: true } })], i4.prototype, "strict", void 0), e([y({ type: [s7], json: { write: true } })], i4.prototype, "properties", void 0), e([y({ type: [i2], json: { write: true } })], i4.prototype, "fieldIndexes", void 0), i4 = e([c("esri.rest.knowledgeGraph.GraphObjectType")], i4);
var l2 = i4;

// node_modules/@arcgis/core/rest/knowledgeGraph/EntityType.js
var e3 = class extends l2 {
  constructor(r6) {
    super(r6);
  }
};
e3 = e([c("esri.rest.knowledgeGraph.EntityType")], e3);
var t8 = e3;

// node_modules/@arcgis/core/rest/knowledgeGraph/RelationshipType.js
var t9 = class extends l2 {
  constructor(r6) {
    super(r6), this.endPoints = [];
  }
};
e([y()], t9.prototype, "endPoints", void 0), t9 = e([c("esri.rest.knowledgeGraph.RelationshipType")], t9);
var p6 = t9;

// node_modules/@arcgis/core/rest/knowledgeGraph/DataModel.js
var l3 = class extends f {
  constructor(t17) {
    super(t17), this.timestamp = null, this.spatialReference = null, this.strict = null, this.objectIdField = null, this.globalIdField = null, this.arcgisManaged = null, this.identifierInfo = null, this.searchIndexes = null, this.entityTypes = null, this.relationshipTypes = null;
  }
};
e([y({ type: Date, json: { type: Number, write: { writer: (t17, e10) => {
  e10.timestamp = t17 == null ? void 0 : t17.getTime();
} } } })], l3.prototype, "timestamp", void 0), e([y({ type: f2, json: { write: true } })], l3.prototype, "spatialReference", void 0), e([y({ type: Boolean, json: { write: true } })], l3.prototype, "strict", void 0), e([y({ type: String, json: { write: true } })], l3.prototype, "objectIdField", void 0), e([y({ type: String, json: { write: true } })], l3.prototype, "globalIdField", void 0), e([y()], l3.prototype, "arcgisManaged", void 0), e([y()], l3.prototype, "identifierInfo", void 0), e([y()], l3.prototype, "searchIndexes", void 0), e([y({ type: [t8], json: { write: true } })], l3.prototype, "entityTypes", void 0), e([y({ type: [p6], json: { write: true } })], l3.prototype, "relationshipTypes", void 0), l3 = e([c("esri.rest.knowledgeGraph.DataModel")], l3);
var n = l3;

// node_modules/@arcgis/core/rest/knowledgeGraph/ServiceDefinition.js
var i5 = class extends f {
  constructor(t17) {
    super(t17), this.capabilities = [], this.supportsSearch = false, this.supportedQueryFormats = [], this.allowGeometryUpdates = false, this.searchMaxRecordCount = null, this.serviceCapabilities = null, this.maxRecordCount = null, this.description = "", this.copyrightText = "", this.units = "", this.spatialReference = null, this.currentVersion = null, this.dateFieldsTimeReference = null, this.serviceItemId = "", this.supportsDocuments = false, this.dataEditingNotSupported = false, this.schemaEditingNotSupported = false;
  }
};
e([y({ type: [String], json: { write: true } })], i5.prototype, "capabilities", void 0), e([y({ type: Boolean, json: { write: true } })], i5.prototype, "supportsSearch", void 0), e([y({ type: [String], json: { write: true } })], i5.prototype, "supportedQueryFormats", void 0), e([y({ type: Boolean, json: { write: true } })], i5.prototype, "allowGeometryUpdates", void 0), e([y({ type: Number, json: { write: true } })], i5.prototype, "searchMaxRecordCount", void 0), e([y({ type: Object, json: { write: true } })], i5.prototype, "serviceCapabilities", void 0), e([y({ type: Number, json: { write: true } })], i5.prototype, "maxRecordCount", void 0), e([y({ type: String, json: { write: true } })], i5.prototype, "description", void 0), e([y({ type: String, json: { write: true } })], i5.prototype, "copyrightText", void 0), e([y({ type: String, json: { write: true } })], i5.prototype, "units", void 0), e([y({ type: Object, json: { write: true } })], i5.prototype, "spatialReference", void 0), e([y({ type: Number, json: { write: true } })], i5.prototype, "currentVersion", void 0), e([y({ type: Object, json: { write: true } })], i5.prototype, "dateFieldsTimeReference", void 0), e([y({ type: String, json: { write: true } })], i5.prototype, "serviceItemId", void 0), e([y({ type: Boolean, json: { write: true } })], i5.prototype, "supportsDocuments", void 0), e([y({ type: Boolean, json: { write: true } })], i5.prototype, "dataEditingNotSupported", void 0), e([y({ type: Boolean, json: { write: true } })], i5.prototype, "schemaEditingNotSupported", void 0), i5 = e([c("esri.rest.knowledgeGraph.ServiceDefinition")], i5);
var s8 = i5;

// node_modules/@arcgis/core/rest/knowledgeGraph/KnowledgeGraph.js
var p7 = class extends f {
  constructor(o7) {
    super(o7), this.dataModel = null, this.serviceDefinition = null;
  }
};
e([y({ type: String, json: { write: true } })], p7.prototype, "url", void 0), e([y({ type: n, json: { write: true } })], p7.prototype, "dataModel", void 0), e([y({ type: s8, json: { write: true } })], p7.prototype, "serviceDefinition", void 0), p7 = e([c("esri.rest.knowledgeGraph.KnowledgeGraph")], p7);
var c5 = p7;

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/knowledgeWasmAccess.js
var t10 = "esri/rest/knowledgeGraph/wasmInterface/";
var s9;
var n2 = null;
async function r2() {
  const e10 = n2 ?? s9;
  if (e10)
    return e10;
  const t17 = has("wasm-simd");
  return s9 = o4(t17), s9;
}
async function o4(s16) {
  if (s16) {
    const { default: s17 } = await import("./arcgis-knowledge-client-core-simd-QVM2KRLL.js").then((e10) => e10.a);
    return s17({ locateFile: (s18) => a(t10 + s18) });
  }
  const { default: n4 } = await import("./arcgis-knowledge-client-core-GQNA7NJL.js").then((e10) => e10.a);
  return n4({ locateFile: (s17) => a(t10 + s17) });
}

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/queryToWasmEncodedFactories.js
function a3(e10, t17) {
  const n4 = new t17.ArrayValue();
  return n4.deleteLater(), e10.forEach((e11) => {
    n4.add_value(m4(e11, t17));
  }), n4;
}
function l4(e10, t17) {
  const n4 = new t17.ObjectValue();
  n4.deleteLater();
  for (const [o7, r6] of Object.entries(e10))
    n4.set_key_value(o7, m4(r6, t17));
  return n4;
}
function s10(i10, a8) {
  if (i10 instanceof u)
    return f4(i10, a8);
  if (i10 instanceof x)
    return g2(i10, a8);
  if (i10 instanceof m || i10 instanceof j2)
    return c6(i10, a8);
  throw new s2("knowledge-graph:unsupported-geometry", "Only Point, Multipoint, Polyline, and Polygon geometry are supported by ArcGIS Knowledge", { geometry: i10 });
}
function u2(e10, t17) {
  t17.input_quantization_parameters = { xy_resolution: e10.xyResolution, x_false_origin: e10.xFalseOrigin, y_false_origin: e10.yFalseOrigin, z_resolution: e10.zResolution, z_false_origin: e10.zFalseOrigin, m_resolution: e10.mResolution, m_false_origin: e10.mFalseOrigin };
}
function y3(t17, n4, o7) {
  if (!t17.extent)
    throw new s2("knowledge-graph:illegal-output-quantization", "The Output quantization provided to the encoder had an illegal value as part of its extent", t17.extent);
  if (!t17.quantizeMode)
    throw new s2("knowledge-graph:illegal-output-quantization", "The Output quantization contained an illegal mode setting", t17.quantizeMode);
  if (!t17.tolerance)
    throw new s2("knowledge-graph:illegal-output-quantization", "The Output quantization contained an illegal tolerance setting", t17.quantizeMode);
  n4.output_quantization_parameters = { extent: { xmax: t17.extent.xmax, ymax: t17.extent.ymax, xmin: t17.extent.xmin, ymin: t17.extent.ymin }, quantize_mode: o7.esriQuantizeMode[t17.quantizeMode], tolerance: t17.tolerance };
}
function m4(e10, t17) {
  if (null == e10)
    return "";
  if ("object" != typeof e10)
    return e10;
  if (e10 instanceof Date)
    return e10;
  if (e10 instanceof p)
    return s10(e10, t17);
  if (Array.isArray(e10)) {
    const n4 = new t17.ArrayValue();
    return n4.deleteLater(), e10.forEach((e11) => {
      n4.add_value(m4(e11, t17));
    }), n4;
  }
  return l4(e10, t17);
}
function c6(e10, t17) {
  const n4 = new t17.GeometryValue();
  n4.deleteLater(), n4.has_z = e10.hasZ, n4.has_m = e10.hasM;
  const i10 = [], a8 = [];
  let l7 = [];
  e10 instanceof m ? (n4.geometry_type = t17.esriGeometryType.esriGeometryPolyline, l7 = e10.paths) : e10 instanceof j2 && (n4.geometry_type = t17.esriGeometryType.esriGeometryPolygon, l7 = e10.rings);
  let s16 = 0, u4 = 0;
  return l7.forEach((e11) => {
    let t18 = 0;
    e11.forEach((e12) => {
      t18++, e12.forEach((e13) => {
        i10[u4] = e13, u4++;
      });
    }), a8[s16] = t18, s16++;
  }), n4.coords = new Float64Array(i10), n4.lengths = new Uint32Array(a8), n4;
}
function f4(e10, t17) {
  const n4 = new t17.GeometryValue();
  n4.deleteLater(), n4.geometry_type = n4.geometry_type = t17.esriGeometryType.esriGeometryMultipoint, n4.has_z = e10.hasZ, n4.has_m = e10.hasM;
  const o7 = [], r6 = [];
  r6[0] = e10.points.length;
  let i10 = 0;
  return e10.points.forEach((e11) => {
    e11.forEach((e12) => {
      o7[i10] = e12, i10++;
    });
  }), n4.coords = new Float64Array(o7), n4.lengths = new Uint32Array(r6), n4;
}
function g2(e10, t17) {
  const n4 = new t17.GeometryValue();
  n4.deleteLater(), n4.geometry_type = t17.esriGeometryType.esriGeometryPoint, n4.has_z = e10.hasZ, n4.has_m = e10.hasM;
  const o7 = [], r6 = [];
  r6[0] = 1, o7[0] = e10.x, o7[1] = e10.y;
  let i10 = 2;
  return e10.hasZ && (o7[i10] = e10.z, i10++), e10.hasM && (o7[i10] = e10.m, i10++), n4.coords = new Float64Array(o7), n4.lengths = new Uint32Array(r6), n4;
}

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphObject.js
var t11 = class extends f {
  constructor(r6) {
    super(r6), this.properties = null;
  }
};
e([y({ json: { write: true } })], t11.prototype, "properties", void 0), t11 = e([c("esri.rest.knowledgeGraph.GraphObject")], t11);
var p8 = t11;

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphNamedObject.js
var s11 = class extends p8 {
  constructor(r6) {
    super(r6), this.typeName = null, this.id = null;
  }
};
e([y({ type: String, json: { write: true } })], s11.prototype, "typeName", void 0), e([y({ type: String, json: { write: true } })], s11.prototype, "id", void 0), s11 = e([c("esri.rest.knowledgeGraph.GraphNamedObject")], s11);
var p9 = s11;

// node_modules/@arcgis/core/rest/knowledgeGraph/Entity.js
var p10 = class extends p9 {
  constructor(r6) {
    super(r6), this.layoutGeometry = null;
  }
};
e([y({ type: x, json: { write: true } })], p10.prototype, "layoutGeometry", void 0), p10 = e([c("esri.rest.knowledgeGraph.Entity")], p10);
var c7 = p10;

// node_modules/@arcgis/core/rest/knowledgeGraph/Relationship.js
var i6 = class extends p9 {
  constructor(o7) {
    super(o7), this.originId = null, this.destinationId = null, this.layoutGeometry = null;
  }
};
e([y({ type: String, json: { write: true } })], i6.prototype, "originId", void 0), e([y({ type: String, json: { write: true } })], i6.prototype, "destinationId", void 0), e([y({ type: m, json: { write: true } })], i6.prototype, "layoutGeometry", void 0), i6 = e([c("esri.rest.Relationship.Relationship")], i6);
var p11 = i6;

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/updateToWasmEncodedFactories.js
function r3(i10, n4) {
  if (!i10.typeName)
    throw new s2("knowledge-graph:no-type-name", "You must indicate the entity/relationship named object type to apply edits");
  if (i10 instanceof c7) {
    const e10 = new n4.EntityValue();
    e10.deleteLater(), e10.type_name = i10.typeName;
    for (const [t17, o7] of Object.entries(i10.properties))
      e10.set_key_value(t17, a4(o7, n4));
    return i10.id && e10.set_id(i10.id), e10;
  }
  if (i10 instanceof p11) {
    const e10 = new n4.RelationshipValue();
    e10.deleteLater(), e10.type_name = i10.typeName;
    for (const [t17, o7] of Object.entries(i10.properties))
      e10.set_key_value(t17, a4(o7, n4));
    return i10.id && e10.set_id(i10.id), i10.originId && i10.destinationId && e10.set_related_entity_ids(i10.originId, i10.destinationId), e10;
  }
  throw new s2("knowledge-graph:applyEdits-encoding-failure", "Could not determine the type of a named graph object passed to the encoder");
}
function s12(e10) {
  return { xy_resolution: e10.xyResolution, x_false_origin: e10.xFalseOrigin, y_false_origin: e10.yFalseOrigin, z_resolution: e10.zResolution, z_false_origin: e10.zFalseOrigin, m_resolution: e10.mResolution, m_false_origin: e10.mFalseOrigin };
}
function a4(e10, t17) {
  return null == e10 ? "" : "object" != typeof e10 || e10 instanceof Date ? e10 : e10 instanceof p ? s10(e10, t17) : "";
}

// node_modules/@arcgis/core/rest/knowledgeGraph/SearchIndex.js
var t12 = class extends g {
  constructor(r6) {
    super(r6), this.name = null, this.supportedCategory = null, this.analyzers = [], this.searchProperties = /* @__PURE__ */ new Map();
  }
};
e([y()], t12.prototype, "name", void 0), e([y()], t12.prototype, "supportedCategory", void 0), e([y()], t12.prototype, "analyzers", void 0), e([y()], t12.prototype, "searchProperties", void 0), t12 = e([c("esri.rest.knowledgeGraph.SearchIndex")], t12);
var p12 = t12;

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/WasmDataModelWrapperInterfaces.js
var e4;
var r4;
var i7;
var t13;
var o5;
var s13;
var y4;
!function(e10) {
  e10[e10.Regular = 0] = "Regular", e10[e10.Provenance = 1] = "Provenance", e10[e10.Document = 2] = "Document";
}(e4 || (e4 = {})), function(e10) {
  e10[e10.esriFieldTypeSmallInteger = 0] = "esriFieldTypeSmallInteger", e10[e10.esriFieldTypeInteger = 1] = "esriFieldTypeInteger", e10[e10.esriFieldTypeSingle = 2] = "esriFieldTypeSingle", e10[e10.esriFieldTypeDouble = 3] = "esriFieldTypeDouble", e10[e10.esriFieldTypeString = 4] = "esriFieldTypeString", e10[e10.esriFieldTypeDate = 5] = "esriFieldTypeDate", e10[e10.esriFieldTypeOID = 6] = "esriFieldTypeOID", e10[e10.esriFieldTypeGeometry = 7] = "esriFieldTypeGeometry", e10[e10.esriFieldTypeBlob = 8] = "esriFieldTypeBlob", e10[e10.esriFieldTypeRaster = 9] = "esriFieldTypeRaster", e10[e10.esriFieldTypeGUID = 10] = "esriFieldTypeGUID", e10[e10.esriFieldTypeGlobalID = 11] = "esriFieldTypeGlobalID", e10[e10.esriFieldTypeXML = 12] = "esriFieldTypeXML", e10[e10.esriFieldTypeBigInteger = 13] = "esriFieldTypeBigInteger", e10[e10.esriFieldTypeDateOnly = 14] = "esriFieldTypeDateOnly", e10[e10.esriFieldTypeTimeOnly = 15] = "esriFieldTypeTimeOnly", e10[e10.esriFieldTypeTimestampOffset = 16] = "esriFieldTypeTimestampOffset";
}(r4 || (r4 = {})), function(e10) {
  e10[e10.esriGeometryNull = 0] = "esriGeometryNull", e10[e10.esriGeometryPoint = 1] = "esriGeometryPoint", e10[e10.esriGeometryMultipoint = 2] = "esriGeometryMultipoint", e10[e10.esriGeometryPolyline = 3] = "esriGeometryPolyline", e10[e10.esriGeometryPolygon = 4] = "esriGeometryPolygon", e10[e10.esriGeometryEnvelope = 5] = "esriGeometryEnvelope", e10[e10.esriGeometryAny = 6] = "esriGeometryAny", e10[e10.esriGeometryMultiPatch = 7] = "esriGeometryMultiPatch";
}(i7 || (i7 = {})), function(e10) {
  e10[e10.esriMethodHintUNSPECIFIED = 0] = "esriMethodHintUNSPECIFIED", e10[e10.esriUUIDESRI = 1] = "esriUUIDESRI", e10[e10.esriUUIDRFC4122 = 2] = "esriUUIDRFC4122";
}(t13 || (t13 = {})), function(e10) {
  e10[e10.esriTypeUNSPECIFIED = 0] = "esriTypeUNSPECIFIED", e10[e10.esriTypeEntity = 1] = "esriTypeEntity", e10[e10.esriTypeRelationship = 2] = "esriTypeRelationship", e10[e10.esriTypeBoth = 4] = "esriTypeBoth";
}(o5 || (o5 = {})), function(e10) {
  e10[e10.esriGraphPropertyUNSPECIFIED = 0] = "esriGraphPropertyUNSPECIFIED", e10[e10.esriGraphPropertyRegular = 1] = "esriGraphPropertyRegular", e10[e10.esriGraphPropertyDocumentName = 2] = "esriGraphPropertyDocumentName", e10[e10.esriGraphPropertyDocumentTitle = 3] = "esriGraphPropertyDocumentTitle", e10[e10.esriGraphPropertyDocumentUrl = 4] = "esriGraphPropertyDocumentUrl", e10[e10.esriGraphPropertyDocumentText = 5] = "esriGraphPropertyDocumentText", e10[e10.esriGraphPropertyDocumentKeywords = 6] = "esriGraphPropertyDocumentKeywords", e10[e10.esriGraphPropertyDocumentContentType = 7] = "esriGraphPropertyDocumentContentType", e10[e10.esriGraphPropertyDocumentMetadata = 8] = "esriGraphPropertyDocumentMetadata", e10[e10.esriGraphPropertyDocumentFileExtension = 9] = "esriGraphPropertyDocumentFileExtension";
}(s13 || (s13 = {})), function(e10) {
  e10[e10.esriIdentifierInfoTypeUNSPECIFIED = 0] = "esriIdentifierInfoTypeUNSPECIFIED", e10[e10.esriIdentifierInfoTypeDatabaseNative = 1] = "esriIdentifierInfoTypeDatabaseNative", e10[e10.esriIdentifierInfoTypeUniformProperty = 2] = "esriIdentifierInfoTypeUniformProperty";
}(y4 || (y4 = {}));

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/wasmToDataModelFactories.js
function _(i10) {
  var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k;
  return i10.deleteLater(), new n({ timestamp: i10.timestamp, spatialReference: new f2(i10.spatial_reference), strict: i10.strict, objectIdField: i10.objectid_property, globalIdField: i10.globalid_property, arcgisManaged: i10.arcgis_managed, identifierInfo: { identifierMappingInfo: { identifierInfoType: y4[(_c = (_b = (_a = i10.identifier_info) == null ? void 0 : _a.identifier_mapping_info) == null ? void 0 : _b.identifier_info_type) == null ? void 0 : _c.value], databaseNativeIdentifier: (_e = (_d = i10.identifier_info) == null ? void 0 : _d.identifier_mapping_info) == null ? void 0 : _e.database_native_identifier, uniformPropertyIdentifier: { identifierPropertyName: (_h = (_g = (_f = i10.identifier_info) == null ? void 0 : _f.identifier_mapping_info) == null ? void 0 : _g.uniform_property_identifier) == null ? void 0 : _h.identifier_property_name } }, identifierGenerationInfo: { uuidMethodHint: t13[(_k = (_j = (_i = i10.identifier_info) == null ? void 0 : _i.identifier_generation_info) == null ? void 0 : _j.uuid_method_hint) == null ? void 0 : _k.value] } }, searchIndexes: M2(i10.search_indexes), entityTypes: j3(i10.entity_types), relationshipTypes: x2(i10.relationship_types) });
}
function c8(e10) {
  return e10.deleteLater(), new t8(b4(e10));
}
function g3(e10) {
  return e10.deleteLater(), new i2({ name: e10.name, unique: e10.unique, ascending: e10.ascending, description: e10.description, fieldNames: I(e10.fields) });
}
function b4(e10) {
  return { name: e10.name, alias: e10.alias, role: e4[e10.role.value] ? e4[e10.role.value] : null, strict: e10.strict, properties: T(e10.properties), fieldIndexes: w2(e10.field_indexes) };
}
function v(e10) {
  return e10.deleteLater(), new s7({ alias: e10.alias, name: e10.name, fieldType: r4[e10.field_type.value] ? r4[e10.field_type.value] : null, geometryType: i7[e10.geometry_type.value] ? i7[e10.geometry_type.value] : null, hasM: e10.has_m, hasZ: e10.has_z, nullable: e10.nullable, editable: e10.editable, required: e10.required, defaultVisibility: e10.default_visibility, systemMaintained: e10.system_maintained, role: s13[e10.role.value], defaultValue: e10.default_value });
}
function z(e10) {
  e10.deleteLater();
  const t17 = b4(e10), i10 = [];
  for (let n4 = 0; n4 < e10.end_points.size(); n4++) {
    const t18 = e10.end_points.get(n4);
    i10.push({ originEntityType: t18.origin_entity_type, destinationEntityType: t18.dest_entity_type });
  }
  return new p6(Object.assign({ endPoints: i10 }, t17));
}
function j3(e10) {
  const t17 = [];
  for (let i10 = 0; i10 < e10.size(); i10++)
    t17.push(c8(e10.get(i10)));
  return t17;
}
function I(e10) {
  const t17 = [];
  for (let i10 = 0; i10 < e10.size(); i10++)
    t17.push(e10.get(i10));
  return t17;
}
function T(e10) {
  const t17 = [];
  for (let i10 = 0; i10 < e10.size(); i10++)
    t17.push(v(e10.get(i10)));
  return t17;
}
function w2(e10) {
  const t17 = [];
  for (let i10 = 0; i10 < e10.size(); i10++)
    t17.push(g3(e10.get(i10)));
  return t17;
}
function x2(e10) {
  const t17 = [];
  for (let i10 = 0; i10 < e10.size(); i10++)
    t17.push(z(e10.get(i10)));
  return t17;
}
function M2(e10) {
  const t17 = [];
  for (let i10 = 0; i10 < e10.size(); i10++) {
    const i11 = new p12(), n4 = e10.get(0);
    i11.name = n4.name, i11.supportedCategory = o5[n4.supported_category.value];
    const r6 = n4.analyzers.size();
    for (let e11 = 0; e11 < r6; e11++)
      i11.analyzers.push({ name: n4.analyzers.get(e11).name });
    for (let e11 = 0; e11 < n4.search_properties.keys().size(); e11++) {
      const t18 = n4.search_properties.keys().get(e11), r7 = n4.search_properties.get(t18), a8 = [];
      for (let e12 = 0; e12 < r7.property_names.size(); e12++)
        a8.push(r7.property_names.get(e12));
      i11.searchProperties.set(t18, { propertyNames: a8 });
    }
    t17.push(i11);
  }
  return t17;
}

// node_modules/@arcgis/core/rest/knowledgeGraph/ObjectValue.js
var e5 = class extends p8 {
  constructor(r6) {
    super(r6);
  }
};
e5 = e([c("esri.rest.knowledgeGraph.ObjectValue")], e5);
var t14 = e5;

// node_modules/@arcgis/core/rest/knowledgeGraph/Path.js
var p13 = class extends f {
  constructor(r6) {
    super(r6), this.path = null;
  }
};
e([y({ type: [p8], json: { write: true } })], p13.prototype, "path", void 0), p13 = e([c("esri.rest.knowledgeGraph.Path")], p13);
var c9 = p13;

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/KnowledgeWasmInterface.js
var E;
!function(E5) {
  E5[E5.ESRI_GEOMETRY_NULL = 0] = "ESRI_GEOMETRY_NULL", E5[E5.ESRI_GEOMETRY_POINT = 1] = "ESRI_GEOMETRY_POINT", E5[E5.ESRI_GEOMETRY_MULTIPOINT = 2] = "ESRI_GEOMETRY_MULTIPOINT", E5[E5.ESRI_GEOMETRY_POLYLINE = 3] = "ESRI_GEOMETRY_POLYLINE", E5[E5.ESRI_GEOMETRY_POLYGON = 4] = "ESRI_GEOMETRY_POLYGON", E5[E5.ESRI_GEOMETRY_ENVELOPE = 5] = "ESRI_GEOMETRY_ENVELOPE", E5[E5.ESRI_GEOMETRY_ANY = 6] = "ESRI_GEOMETRY_ANY", E5[E5.ESRI_GEOMETRY_MULTI_PATCH = 7] = "ESRI_GEOMETRY_MULTI_PATCH";
}(E || (E = {}));

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/WasmQueryWrapperInterfaces.js
var T2;
var A;
!function(T5) {
  T5[T5.OBJECT = 0] = "OBJECT", T5[T5.ENTITY = 1] = "ENTITY", T5[T5.RELATIONSHIP = 2] = "RELATIONSHIP", T5[T5.PATH = 3] = "PATH", T5[T5.ARRAY = 4] = "ARRAY";
}(T2 || (T2 = {})), function(T5) {
  T5[T5.view = 0] = "view", T5[T5.edit = 1] = "edit";
}(A || (A = {}));

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/wasmToGeometryFactories.js
function l5(o7) {
  const e10 = {}, r6 = c10(o7, e10), n4 = o7.lengths, s16 = o7.coords, l7 = n4[0];
  e10.points = [];
  let m7 = 0;
  for (let t17 = 0; t17 < l7; t17++) {
    const o8 = [];
    for (let t18 = 0; t18 < r6; t18++)
      o8[t18] = s16[m7], m7++;
    e10.points.push(o8);
  }
  return new u(e10);
}
function m5(o7) {
  const t17 = {};
  let r6 = 2;
  c10(o7, t17);
  const n4 = o7.coords;
  return t17.x = n4[0], t17.y = n4[1], o7.has_z && (t17.z = n4[r6], r6++), o7.has_m && (t17.m = n4[r6]), new x(t17);
}
function i8(o7) {
  return new m(a5(o7));
}
function f5(o7) {
  return new j2(a5(o7));
}
function a5(t17) {
  const e10 = {}, r6 = c10(t17, e10), n4 = t17.lengths, l7 = t17.coords;
  let m7 = "";
  if (t17.geometry_type.value === E.ESRI_GEOMETRY_POLYGON)
    m7 = "rings";
  else {
    if (t17.geometry_type.value !== E.ESRI_GEOMETRY_POLYLINE)
      throw new s2("KnowledgeGraph:illegal-geometry-type", "Illegal Geometry type for multipath conversion");
    m7 = "paths";
  }
  e10[m7] = [];
  let i10 = 0;
  return n4.forEach((o7) => {
    const t18 = [];
    for (let e11 = 0; e11 < o7; e11++) {
      const o8 = [];
      for (let t19 = 0; t19 < r6; t19++)
        o8[t19] = l7[i10], i10++;
      t18.push(o8);
    }
    e10[m7].push(t18);
  }), e10;
}
function c10(o7, t17) {
  let e10 = 2;
  return o7.has_z ? (t17.hasZ = o7.has_z, e10++) : t17.hasZ = false, o7.has_m ? (t17.hasM = o7.has_m, e10++) : t17.hasM = false, e10;
}

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/wasmToQueryResponseObjFactories.js
var _2 = s.getLogger("esri.rest.knowledgeGraph.WasmToQueryResponseObjConstructors");
var d2 = { decodedWasmObjToQueryResponseObj: (e10, t17) => {
  if (null == e10)
    return null;
  if ("object" != typeof e10)
    return e10;
  if ("getDate" in e10)
    return e10;
  if ("geometry_type" in e10)
    switch (e10.geometry_type.value) {
      case null:
        return null;
      case E.ESRI_GEOMETRY_POINT:
        return m5(e10);
      case E.ESRI_GEOMETRY_MULTIPOINT:
        return l5(e10);
      case E.ESRI_GEOMETRY_POLYLINE:
        return i8(e10);
      case E.ESRI_GEOMETRY_POLYGON:
        return f5(e10);
      case E.ESRI_GEOMETRY_ENVELOPE:
      case E.ESRI_GEOMETRY_MULTI_PATCH:
        return _2.warnOnce("Envelope and Multipatch are not supported on knowledge entities, but one of those geometry types was detected. Result interpreted as null"), null;
      case E.ESRI_GEOMETRY_NULL:
      case E.ESRI_GEOMETRY_ANY:
      default:
        return _2.warnOnce("Unknown or blank geometry type returned - Result interpreted as null"), null;
    }
  else {
    if (!("object_value_type" in e10))
      return _2.warnOnce("A decoded value came back of a type that is not supported. Result interpreted as null"), null;
    switch (e10.object_value_type.value) {
      case T2.OBJECT:
        return g4(e10, t17);
      case T2.ENTITY:
        return f6(e10, t17);
      case T2.RELATIONSHIP:
        return j4(e10, t17);
      case T2.PATH:
        return R(e10, t17);
      case T2.ARRAY:
        return m6(e10, t17);
      default:
        return _2.warnOnce("Unknown graph object type detected!  Result interpreted as null"), null;
    }
  }
} };
function m6(e10, t17) {
  const n4 = [], r6 = e10.count();
  for (let o7 = 0; o7 < r6; o7++) {
    const r7 = e10.get_value_at(o7);
    n4.push(E2(r7, t17));
  }
  return n4;
}
function E2(e10, t17) {
  return d2.decodedWasmObjToQueryResponseObj(e10, t17);
}
function f6(e10, n4) {
  const r6 = e10.type_name, o7 = O(e10, n4), s16 = e10.get_id();
  return new c7(Object.assign({ typeName: r6, id: s16 }, o7));
}
function O(e10, t17) {
  const n4 = {}, r6 = e10.key_count();
  for (let o7 = 0; o7 < r6; o7++)
    n4[e10.get_key_at(o7)] = E2(e10.get_value_at(o7), t17);
  return { properties: n4 };
}
function g4(e10, t17) {
  return new t14(O(e10, t17));
}
function R(e10, t17) {
  const n4 = e10.entity_count(), r6 = e10.relationship_count(), s16 = [];
  for (let o7 = 0; o7 < n4; o7++)
    s16.push(f6(e10.get_entity_at(o7), t17)), o7 < r6 && s16.push(j4(e10.get_relationship_at(o7), t17));
  return new c9({ path: s16 });
}
function j4(e10, t17) {
  const n4 = e10.type_name, r6 = O(e10, t17);
  return new p11(Object.assign({ typeName: n4, id: e10.get_id(), originId: e10.get_origin_entity_id(), destinationId: e10.get_destination_entity_id() }, r6));
}

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphApplyEditsResult.js
var e6 = class extends g {
  constructor(r6) {
    super(r6), this.hasError = null, this.error = null, this.editResults = [];
  }
};
e([y()], e6.prototype, "hasError", void 0), e([y()], e6.prototype, "error", void 0), e([y()], e6.prototype, "editResults", void 0), e6 = e([c("esri.rest.knowledgeGraph.GraphApplyEdits")], e6);
var p14 = e6;

// node_modules/@arcgis/core/rest/knowledgeGraph/wasmInterface/wasmToUpdateResponseFactories.js
function e7(e10) {
  const o7 = new p14();
  o7.hasError = e10.has_error(), o7.hasError && (o7.error = { errorCode: e10.error.error_code, errorMessage: e10.error.error_message });
  const t17 = e10.get_edit_results_count();
  for (let r6 = 0; r6 < t17; r6++) {
    const t18 = e10.get_edit_results_at(r6), s16 = e10.get_edit_results_type_name_at(r6), _4 = [], d3 = [], a8 = [], u4 = t18.get_add_results_count(), l7 = t18.get_update_results_count(), g5 = t18.get_delete_results_count();
    for (let r7 = 0; r7 < u4; r7++) {
      const e11 = t18.get_add_result_at(r7);
      _4.push({ id: e11.id, error: { errorCode: e11.error.error_code, errorMessage: e11.error.error_message } });
    }
    for (let r7 = 0; r7 < l7; r7++) {
      const e11 = t18.get_update_result_at(r7);
      d3.push({ id: e11.id, error: { errorCode: e11.error.error_code, errorMessage: e11.error.error_message } });
    }
    for (let r7 = 0; r7 < g5; r7++) {
      const e11 = t18.get_delete_result_at(r7);
      a8.push({ id: e11.id, error: { errorCode: e11.error.error_code, errorMessage: e11.error.error_message } });
    }
    o7.editResults.push({ typeName: s16, adds: _4, updates: d3, deletes: a8 });
  }
  return o7;
}

// node_modules/@arcgis/core/rest/knowledgeGraphService.js
var k2 = { fetchKnowledgeGraph: async (e10) => {
  const t17 = new c5({ url: e10 }), r6 = [];
  return r6.push(S(t17)), r6.push(q(t17)), await Promise.all(r6), t17;
}, refreshDataModel: async (e10) => {
  e10.dataModel = await W2(e10);
}, refreshServiceDefinition: async (e10) => {
  var _a, _b;
  const r6 = (await j(e10.url, { query: { f: "json" } })).data;
  return r6.capabilities = (_a = r6 == null ? void 0 : r6.capabilities) == null ? void 0 : _a.split(","), r6.supportedQueryFormats = (_b = r6 == null ? void 0 : r6.supportedQueryFormats) == null ? void 0 : _b.split(","), e10.serviceDefinition = new s8(r6), e10.serviceDefinition;
}, executeQueryStreaming: async (e10, t17, a8) => {
  const n4 = `${e10.url}/graph/query`;
  await A2(e10);
  const i10 = await R2(n4, a8);
  i10.data.body = await C(t17, e10);
  const d3 = await Q(i10.data.url, i10.data);
  if (e10.dataModel)
    return new c4({ resultRowsStream: await I2(d3, e10.dataModel) });
  throw new s2("knowledge-graph:undefined-data-model", "The KnowledgeGraph supplied did not have a data model");
}, executeApplyEdits: async (e10, t17, a8) => {
  var _a;
  if ((_a = e10.serviceDefinition) == null ? void 0 : _a.dataEditingNotSupported)
    throw new s2("knowledge-graph:data-editing-not-supported", "The Knowledge Graph Service definition indicated that data editing is not supported");
  const n4 = `${e10.url}/graph/applyEdits`;
  await A2(e10);
  const o7 = await R2(n4, a8);
  o7.data.body = await D(t17, e10);
  return P(await Q(o7.data.url, o7.data));
}, executeQuery: async (e10, a8, o7) => {
  var _a;
  const i10 = `${e10.url}/graph/query`, d3 = await j(i10, { responseType: "array-buffer", query: { f: "pbf", openCypherQuery: a8.openCypherQuery, ...o7 == null ? void 0 : o7.query }, signal: o7 == null ? void 0 : o7.signal, timeout: o7 == null ? void 0 : o7.timeout }), p18 = (_a = d3.getHeader) == null ? void 0 : _a.call(d3, "content-type"), c12 = d3.data;
  if (p18 == null ? void 0 : p18.includes("application/x-protobuf")) {
    const t17 = new (await r2()).GraphQueryDecoder();
    if (t17.deleteLater(), e10.dataModel)
      return new c3({ resultRows: L(t17, c12, e10.dataModel) });
    throw new s2("knowledge-graph:undefined-data-model", "The KnowledgeGraph supplied did not have a data model");
  }
  throw new s2("knowledge-graph:unexpected-server-response", "server returned an unexpected response", { responseType: p18, data: d3.data });
}, executeSearch: async (e10, a8, o7) => {
  var _a;
  const i10 = a8.typeCategoryFilter, d3 = `${e10.url}/graph/search`, p18 = await j(d3, { responseType: "array-buffer", query: { f: "pbf", searchQuery: `"${a8.searchQuery}"`, typeCategoryFilter: i10, ...o7 == null ? void 0 : o7.query }, signal: o7 == null ? void 0 : o7.signal, timeout: o7 == null ? void 0 : o7.timeout }), c12 = (_a = p18.getHeader) == null ? void 0 : _a.call(p18, "content-type"), l7 = p18.data;
  if (c12 == null ? void 0 : c12.includes("application/x-protobuf")) {
    const t17 = new (await r2()).GraphQueryDecoder();
    if (t17.deleteLater(), e10.dataModel)
      return new c3({ resultRows: L(t17, l7, e10.dataModel) });
    throw new s2("knowledge-graph:undefined-data-model", "The KnowledgeGraph supplied did not have a data model");
  }
  throw new s2("knowledge-graph:unexpected-server-response", "server returned an unexpected response", { responseType: c12, data: p18.data });
}, executeSearchStreaming: async (e10, t17, a8) => {
  const n4 = `${e10.url}/graph/search`;
  await A2(e10);
  const i10 = await R2(n4, a8);
  i10.data.body = await F2(t17);
  const d3 = await Q(i10.data.url, i10.data);
  if (e10.dataModel)
    return new c4({ resultRowsStream: await I2(d3, e10.dataModel) });
  throw new s2("knowledge-graph:undefined-data-model", "The KnowledgeGraph supplied did not have a data model");
}, _fetchWrapper: async (e10, t17) => fetch(e10, t17) };
async function x3(e10, t17, r6) {
  return k2.executeQueryStreaming(e10, t17, r6);
}
async function T3(e10) {
  return k2.fetchKnowledgeGraph(e10);
}
async function S(e10) {
  return k2.refreshDataModel(e10);
}
async function q(e10) {
  return k2.refreshServiceDefinition(e10);
}
async function Q(e10, t17) {
  return k2._fetchWrapper(e10, t17);
}
async function A2(t17) {
  var _a;
  const r6 = (_a = t) == null ? void 0 : _a.findCredential(t17.url);
  r6 || (t17.dataModel ? await W2(t17) : await S(t17));
}
function M3(e10, t17, a8) {
  if (0 !== e10.error_code)
    throw new s2(t17, a8, { errorCode: e10.error_code, errorMessage: e10.error_message });
}
function j5(e10, t17, r6, a8) {
  null == t17 ? r6.set_param_key_value(e10, "") : "object" != typeof t17 || t17 instanceof Date ? r6.set_param_key_value(e10, t17) : t17 instanceof p ? r6.set_param_key_value(e10, s10(t17, a8)) : t17 instanceof Array ? r6.set_param_key_value(e10, a3(t17, a8)) : r6.set_param_key_value(e10, l4(t17, a8));
}
async function D(e10, t17) {
  var _a, _b, _c, _d, _e, _f, _g, _h, _i;
  if (t17.dataModel || await S(t17), !t17.dataModel)
    throw new s2("knowledge-graph:data-model-undefined", "Encoding could not proceed because a data model was not provided and it could not be determined from the service");
  const a8 = await r2(), n4 = !!((_a = e10.options) == null ? void 0 : _a.cascadeDelete), o7 = new a8.GraphApplyEditsEncoder(a8.SpatialReferenceUtil.WGS84(), ((_b = e10.options) == null ? void 0 : _b.inputQuantizationParameters) ? s12((_c = e10.options) == null ? void 0 : _c.inputQuantizationParameters) : a8.InputQuantizationUtil.WGS84_lossless());
  o7.deleteLater(), o7.cascade_delete = n4;
  try {
    let t18;
    (_d = e10.entityAdds) == null ? void 0 : _d.forEach((e11) => {
      t18 = o7.add_entity(r3(e11, a8)), M3(t18, "knowledge-graph:applyEdits-encoding-failed", "Attempting to encode the applyEdits - an entity failed to be added to the encoder");
    }), (_e = e10.relationshipAdds) == null ? void 0 : _e.forEach((e11) => {
      if (!e11.originId || !e11.destinationId)
        throw new s2("knowledge-graph:relationship-origin-destination-missing", "When adding a new relationship, you must provide both an origin and destination id on the appropriate class property");
      t18 = o7.add_relationship(r3(e11, a8)), M3(t18, "knowledge-graph:applyEdits-encoding-failed", "Attempting to encode the applyEdits - a relationship failed to be added to the encoder");
    }), (_f = e10.entityUpdates) == null ? void 0 : _f.forEach((e11) => {
      if (!e11.id)
        throw new s2("knowledge-graph:entity-id-missing", "When updating an entity or relationship, you must specify the id on the class level property");
      t18 = o7.update_entity(r3(e11, a8)), M3(t18, "knowledge-graph:applyEdits-encoding-failed", "Attempting to encode the applyEdits - an entity failed to be added to the encoder");
    }), (_g = e10.relationshipUpdates) == null ? void 0 : _g.forEach((e11) => {
      if (!e11.id)
        throw new s2("knowledge-graph:relationship-id-missing", "When updating an entity or relationship, you must specify the id on the class level property");
      t18 = o7.update_relationship(r3(e11, a8)), M3(t18, "knowledge-graph:applyEdits-encoding-failed", "Attempting to encode the applyEdits - a relationship failed to be added to the encoder");
    }), (_h = e10.entityDeletes) == null ? void 0 : _h.forEach((e11) => {
      var _a2;
      if (!e11.typeName)
        throw new s2("knowledge-graph:no-type-name", "You must indicate the entity/relationship named object type to apply edits - delete");
      const t19 = o7.make_delete_helper(e11.typeName, true);
      t19.deleteLater(), (_a2 = e11.ids) == null ? void 0 : _a2.forEach((e12) => {
        t19.delete_by_id(e12);
      });
    }), (_i = e10.relationshipDeletes) == null ? void 0 : _i.forEach((e11) => {
      var _a2;
      if (!e11.typeName)
        throw new s2("knowledge-graph:no-type-name", "You must indicate the entity/relationship named object type to apply edits - delete");
      const t19 = o7.make_delete_helper(e11.typeName, false);
      (_a2 = e11.ids) == null ? void 0 : _a2.forEach((e12) => {
        t19.delete_by_id(e12);
      });
    }), o7.encode();
  } catch (d3) {
    throw new s2("knowledge-graph:applyEdits-encoding-failed", "Attempting to encode the applyEdits failed", { error: d3 });
  }
  const i10 = o7.get_encoding_result();
  return M3(i10.error, "knowledge-graph:applyEdits-encoding-failed", "Attempting to encode the applyEdits failed"), i10.get_byte_buffer();
}
async function C(e10, t17) {
  var _a, _b;
  const a8 = await r2(), n4 = new a8.GraphQueryRequestEncoder();
  if (n4.deleteLater(), n4.output_spatial_reference = a8.SpatialReferenceUtil.WGS84(), n4.open_cypher_query = e10.openCypherQuery, e10.bindParameters)
    for (const [r6, d3] of Object.entries(e10.bindParameters))
      j5(r6, d3, n4, a8);
  if (e10.bindGeometryQuantizationParameters)
    u2(e10.bindGeometryQuantizationParameters, n4);
  else {
    if (t17.dataModel || await S(t17), 4326 !== ((_b = (_a = t17.dataModel) == null ? void 0 : _a.spatialReference) == null ? void 0 : _b.wkid))
      throw new s2("knowledge-graph:SR-quantization-mismatch", "If the DataModel indicates a coordinate system other than WGS84, inputQuantizationParameters must be provided to the query encoder");
    n4.input_quantization_parameters = a8.InputQuantizationUtil.WGS84_lossless();
  }
  e10.outputQuantizationParameters && y3(e10.outputQuantizationParameters, n4, a8);
  try {
    n4.encode();
  } catch (i10) {
    throw new s2("knowledge-graph:query-encoding-failed", "Attempting to encode the query failed", { error: i10 });
  }
  const o7 = n4.get_encoding_result();
  if (0 !== o7.error.error_code)
    throw new s2("knowledge-graph:query-encoding-failed", "Attempting to encode the query failed", { errorCode: o7.error.error_code, errorMessage: o7.error.error_message });
  return o7.get_byte_buffer();
}
async function F2(e10) {
  var _a;
  const t17 = await r2(), a8 = new t17.GraphSearchRequestEncoder();
  if (a8.deleteLater(), a8.search_query = e10.searchQuery, a8.type_category_filter = t17.esriNamedTypeCategory[e10.typeCategoryFilter], true === e10.returnSearchContext && (a8.return_search_context = e10.returnSearchContext), null != e10.start && e10.start > 0 && (a8.start_index = e10.start), null != e10.num && (a8.max_num_results = e10.num), null != e10.idsFilter && Array.isArray(e10.idsFilter) && e10.idsFilter.length > 0)
    try {
      a8.set_ids_filter(a3(e10.idsFilter, t17));
    } catch (o7) {
      throw new s2("knowledge-graph:ids-format-error", "Attempting to set ids filter failed.  This is usually caused by an incorrectly formatted UUID string", { error: o7 });
    }
  (_a = e10.namedTypesFilter) == null ? void 0 : _a.forEach((e11) => {
    a8.add_named_type_filter(e11);
  });
  try {
    a8.encode();
  } catch (o7) {
    throw new s2("knowledge-graph:search-encoding-failed", "Attempting to encode the search failed", { error: o7 });
  }
  const n4 = a8.get_encoding_result();
  if (0 !== n4.error.error_code)
    throw new s2("knowledge-graph:search-encoding-failed", "Attempting to get encoding result from the query failed", { errorCode: n4.error.error_code, errorMessage: n4.error.error_message });
  return n4.get_byte_buffer();
}
async function R2(e10, r6) {
  return j(e10, { responseType: "native-request-init", method: "post", query: { f: "pbf", ...r6 == null ? void 0 : r6.query }, body: "x", headers: { "Content-Type": "application/octet-stream" }, signal: r6 == null ? void 0 : r6.signal, timeout: r6 == null ? void 0 : r6.timeout });
}
async function P(e10) {
  const t17 = e10.headers.get("content-type");
  if (t17 == null ? void 0 : t17.includes("application/x-protobuf")) {
    const t18 = await e10.arrayBuffer(), r6 = new (await r2()).GraphApplyEditsDecoder();
    return r6.deleteLater(), r6.decode(new Uint8Array(t18)), e7(r6);
  }
  throw new s2("knowledge-graph:unexpected-server-response", "server returned an unexpected response", { responseType: t17, data: e10.text() });
}
function L(e10, t17, a8) {
  e10.push_buffer(new Uint8Array(t17));
  const n4 = [];
  let o7 = 0;
  for (; e10.next_row(); ) {
    o7 || (o7 = e10.get_header_keys().size());
    const t18 = new Array(o7);
    for (let r6 = 0; r6 < o7; r6++) {
      const n5 = e10.get_value(r6);
      t18[r6] = E2(n5, a8);
    }
    n4.push(t18);
  }
  if (e10.has_error())
    throw new s2("knowledge-graph:stream-decoding-error", "One or more result rows were not successfully decoded", { errorCode: e10.error.error_code, errorMessage: e10.error.error_message });
  return n4;
}
async function I2(e10, t17) {
  var _a;
  const n4 = e10.headers.get("content-type");
  if (e10.headers.get("content-length") && s.getLogger("esri.rest.knowledgeGraph.knowledgeGraphService").warnOnce("Found `Content-Length` header when expecting a streaming HTTP response! Please investigate whether all intermediate HTTP proxies and/or load balancers are configured such that they don't forcefully buffer the entire response before returning it to the client. A valid HTTP streaming response should use Chunked Transfer Encoding and not have a Content Length defined."), n4 == null ? void 0 : n4.includes("application/x-protobuf")) {
    const a8 = (_a = e10.body) == null ? void 0 : _a.getReader(), n5 = new (await r2()).GraphQueryDecoder();
    return n5.deleteLater(), new ReadableStream({ async start(e11) {
      try {
        return o7();
      } catch (i10) {
        a8 == null ? void 0 : a8.releaseLock(), e11.error(new s2("knowledge-graph:stream-decoding-error", "The server returned a valid response, but there was an error decoding the response stream", { error: i10 })), e11.close();
      }
      function o7() {
        return a8 == null ? void 0 : a8.read().then(({ done: i10, value: d3 }) => {
          if (i10) {
            let t18;
            if (n5.has_error() && (t18 = new s2("knowledge-graph:stream-decoding-error", "One or more result rows were not successfully decoded", { errorCode: n5.error.error_code, errorMessage: n5.error.error_message })), a8.releaseLock(), t18)
              throw e11.error(t18), t18;
            return void e11.close();
          }
          const s16 = L(n5, d3, t17);
          return s16.length > 0 && e11.enqueue(s16), o7();
        });
      }
    } });
  }
  throw new s2("knowledge-graph:unexpected-server-response", "server returned an unexpected response", { responseType: n4, data: e10.text() });
}
async function W2(e10) {
  var _a;
  const a8 = `${e10.url}/dataModel/queryDataModel`, n4 = await j(a8, { responseType: "array-buffer", query: { f: "pbf" } }), o7 = (_a = n4.getHeader) == null ? void 0 : _a.call(n4, "content-type"), i10 = n4.data;
  if (o7 == null ? void 0 : o7.includes("application/x-protobuf")) {
    const e11 = (await r2()).decode_data_model_from_protocol_buffer(new Uint8Array(i10));
    if (!e11)
      throw new s2("knowledge-graph:data-model-decode-failure", "The server responded to the data model query, but the response failed to be decoded.  This typically occurs when the Knowledge JS API (4.26 or later) is used with an unsupported backend (11.0 or earlier)");
    return _(e11);
  }
  throw new s2("knowledge-graph:unexpected-server-response", "server returned an unexpected response", { responseType: o7, data: n4.data });
}

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphQuery.js
var p15 = class extends g {
  constructor(r6) {
    super(r6), this.openCypherQuery = "";
  }
};
e([y()], p15.prototype, "openCypherQuery", void 0), p15 = e([c("esri.rest.knowledgeGraph.GraphQuery")], p15);
var t15 = p15;

// node_modules/@arcgis/core/rest/knowledgeGraph/GraphQueryStreaming.js
var s14 = class extends t15 {
  constructor(r6) {
    super(r6), this.bindParameters = null, this.bindGeometryQuantizationParameters = null, this.outputQuantizationParameters = null;
  }
};
e([y()], s14.prototype, "bindParameters", void 0), e([y()], s14.prototype, "bindGeometryQuantizationParameters", void 0), e([y()], s14.prototype, "outputQuantizationParameters", void 0), s14 = e([c("esri.rest.knowledgeGraph.GraphQueryStreaming")], s14);
var a6 = s14;

// node_modules/@arcgis/core/layers/knowledgeGraph/supportUtils.js
function e8(n4) {
  if (!n4.spatialReference.isWGS84)
    throw new s2("knowledge-graph:layer-support-utils", "The extentToInBoundsRings function only supports WGS84 spatial references.");
  let i10;
  return i10 = n4.xmax > 180 && n4.xmin < 180 ? [[[n4.xmin, n4.ymin], [n4.xmin, n4.ymax], [180, n4.ymax], [180, n4.ymin], [n4.xmin, n4.ymin]], [[-180, n4.ymin], [-180, n4.ymax], [n4.xmax - 360, n4.ymax], [n4.xmax - 360, n4.ymin], [-180, n4.ymin]]] : n4.xmax > 180 && n4.xmin > 180 ? [[[n4.xmin - 360, n4.ymin], [n4.xmin - 360, n4.ymax], [n4.xmax - 360, n4.ymax], [n4.xmax - 360, n4.ymin], [n4.xmin - 360, n4.ymin]]] : n4.xmax > -180 && n4.xmin < -180 ? [[[n4.xmin + 360, n4.ymin], [n4.xmin + 360, n4.ymax], [180, n4.ymax], [180, n4.ymin], [n4.xmin + 360, n4.ymin]], [[-180, n4.ymin], [-180, n4.ymax], [n4.xmax, n4.ymax], [n4.xmax, n4.ymin], [-180, n4.ymin]]] : n4.xmax < -180 && n4.xmin < -180 ? [[[n4.xmin + 360, n4.ymin], [n4.xmin + 360, n4.ymax], [n4.xmax + 360, n4.ymax], [n4.xmax + 360, n4.ymin], [n4.xmin + 360, n4.ymin]]] : [[[n4.xmin, n4.ymin], [n4.xmin, n4.ymax], [n4.xmax, n4.ymax], [n4.xmax, n4.ymin], [n4.xmin, n4.ymin]]], i10;
}
async function a7(m7, e10) {
  var _a, _b;
  const a8 = [], x4 = /* @__PURE__ */ new Map(), r6 = [];
  if ((_a = e10.dataModel) == null ? void 0 : _a.relationshipTypes)
    for (const n4 of e10.dataModel.relationshipTypes)
      n4.name && x4.set(n4.name, []);
  for (const n4 of m7)
    x4.has(n4.typeName) && ((_b = x4.get(n4.typeName)) == null ? void 0 : _b.push(n4.id));
  for (const [t17, y6] of x4) {
    if (y6.length < 1)
      continue;
    const m8 = new a6({ openCypherQuery: `MATCH (n)-[r:${t17}]->(m) WHERE id(r) in $ids RETURN id(n), labels(n)[0], id(m), labels(m)[0]`, bindParameters: { ids: y6 } });
    r6.push(x3(e10, m8).then(async (m9) => {
      const n4 = m9.resultRowsStream.getReader();
      for (; ; ) {
        const { done: m10, value: i10 } = await n4.read();
        if (m10)
          break;
        for (const n5 of i10)
          a8.push({ id: n5[0], typeName: n5[1] }), a8.push({ id: n5[2], typeName: n5[3] });
      }
    }));
  }
  return await Promise.all(r6), a8;
}

// node_modules/@arcgis/core/layers/knowledgeGraph/KnowledgeGraphLayerDataManager.js
var b5 = "ESRI__ID";
var T4 = "ESRI__ORIGIN_ID";
var D2 = "ESRI__DESTINATION_ID";
var M4 = "ESRI__LAYOUT_GEOMETRY";
var I3 = 12;
var k3 = s.getLogger("esri.rest.knowledgeGraph.knowledgeGraphLayer.KnowledgeGraphLayerDataManager");
var E3 = class extends g {
  constructor(e10) {
    var _a, _b, _c;
    super(e10), this.inclusionModeDefinition = { generateAllSublayers: true, namedTypeDefinitions: /* @__PURE__ */ new Map() }, this.entityTypeNames = /* @__PURE__ */ new Set(), this.relationshipTypeNames = /* @__PURE__ */ new Set(), this.geographicLookup = /* @__PURE__ */ new Map(), this.sublayerCaches = /* @__PURE__ */ new Map(), this.nodeConnectionsLookup = /* @__PURE__ */ new Map(), this.memberIdTypeLookup = /* @__PURE__ */ new Map(), this._processingCacheUpdatesLookup = /* @__PURE__ */ new Map();
    const t17 = /* @__PURE__ */ new Map();
    (_a = e10.knowledgeGraph.dataModel.entityTypes) == null ? void 0 : _a.forEach((i10) => {
      var _a2, _b2;
      i10.name && (t17.set(i10.name, "entity"), this._processingCacheUpdatesLookup.set(i10.name, []), e10.inclusionModeDefinition && !((_a2 = e10.inclusionModeDefinition) == null ? void 0 : _a2.generateAllSublayers) || this.entityTypeNames.add(i10.name), (_b2 = i10.properties) == null ? void 0 : _b2.forEach((e11) => {
        e11.geometryType && "esriGeometryNull" !== e11.geometryType && this.geographicLookup.set(i10.name, { name: e11.name ?? "", geometryType: e11.geometryType });
      }));
    }), (_b = e10.knowledgeGraph.dataModel.relationshipTypes) == null ? void 0 : _b.forEach((i10) => {
      var _a2, _b2;
      i10.name && (t17.set(i10.name, "relationship"), this._processingCacheUpdatesLookup.set(i10.name, []), e10.inclusionModeDefinition && !((_a2 = e10.inclusionModeDefinition) == null ? void 0 : _a2.generateAllSublayers) || this.relationshipTypeNames.add(i10.name), (_b2 = i10.properties) == null ? void 0 : _b2.forEach((e11) => {
        e11.geometryType && "esriGeometryNull" !== e11.geometryType && this.geographicLookup.set(i10.name, { name: e11.name ?? "", geometryType: e11.geometryType });
      }));
    }), (_c = e10.inclusionModeDefinition) == null ? void 0 : _c.namedTypeDefinitions.forEach((i10, n4) => {
      var _a2, _b2;
      if ("entity" === t17.get(n4))
        this.entityTypeNames.add(n4);
      else {
        if ("relationship" !== t17.get(n4))
          return k3.warn(`A named type, ${n4}, was in the inclusion list that wasn't in the data model and will be removed`), void ((_a2 = e10.inclusionModeDefinition) == null ? void 0 : _a2.namedTypeDefinitions.delete(n4));
        this.relationshipTypeNames.add(n4);
      }
      const o7 = /* @__PURE__ */ new Map();
      (_b2 = i10.members) == null ? void 0 : _b2.forEach((e11) => {
        this.memberIdTypeLookup.set(e11.id, n4);
        const t18 = this.getById(e11.id);
        t18 && o7.set(e11.id, t18);
      }), this.sublayerCaches.set(n4, o7);
    });
  }
  addToLayer(e10) {
    e10.forEach(({ typeName: e11, id: t17 }) => {
      if (!this.inclusionModeDefinition)
        throw new s2("knowledge-graph:layer-data-manager", "You cannot add to a layer's exclusion list if it was not created with an exclusion list originally");
      if (this.inclusionModeDefinition.namedTypeDefinitions.has(e11)) {
        if (this.inclusionModeDefinition.namedTypeDefinitions.has(e11)) {
          const i10 = this.inclusionModeDefinition.namedTypeDefinitions.get(e11);
          i10.members || (i10.members = /* @__PURE__ */ new Map()), i10.members.set(t17, { id: t17 }), this.memberIdTypeLookup.set(t17, e11);
        }
      } else {
        const i10 = /* @__PURE__ */ new Map();
        i10.set(t17, { id: t17 }), this.inclusionModeDefinition.namedTypeDefinitions.set(e11, { useAllData: false, members: i10 }), this.memberIdTypeLookup.set(t17, e11);
      }
    });
  }
  getById(e10) {
    return o3.getInstance().readFromStoreById(e10);
  }
  async getData(e10, t17, i10) {
    var _a, _b;
    if (t17.objectType.name && ((_a = this.inclusionModeDefinition) == null ? void 0 : _a.namedTypeDefinitions) && this.inclusionModeDefinition.namedTypeDefinitions.size > 0 && !this.inclusionModeDefinition.namedTypeDefinitions.has(t17.objectType.name))
      return [];
    let n4;
    if (n4 = e10 || new b2({ where: "1=1", outFields: ["*"] }), "link-chart" === t17.parentCompositeLayer.type) {
      const e11 = t17.parentCompositeLayer, i11 = this._processingCacheUpdatesLookup.get(t17.objectType.name ?? ""), o7 = n4.outFields, s16 = n4.geometry;
      let a8 = "", r6 = "";
      s16 && s16.extent && (a8 = p4(s16.extent.ymin, s16.extent.xmin, I3), r6 = p4(s16.extent.ymax, s16.extent.xmax, I3)), o7 && 1 === o7.length && o7[0] === b5 && "1=1" === n4.where || await Promise.all(i11 ?? []);
      const d3 = this.sublayerCaches.has(t17.objectType.name ?? "") ? Array.from((_b = this.sublayerCaches.get(t17.objectType.name)) == null ? void 0 : _b.values()) : [], m7 = [];
      return d3.forEach((i12) => {
        if (i12.geometry = e11.linkChartDiagramLookup.get(i12.attributes[t17.objectIdField]), i12.attributes[M4] = i12.geometry, a8 && r6) {
          const n5 = e11.linkChartGeohashLookup.get(i12.attributes[t17.objectIdField]);
          n5 ? n5 >= a8 && n5 <= r6 && m7.push(i12) : m7.push(i12);
        } else
          m7.push(i12);
      }), m7;
    }
    return this.retrieveDataFromService(n4, t17, i10);
  }
  async getConnectedRecordIds(e10) {
    const t17 = [], i10 = [], n4 = /* @__PURE__ */ new Map();
    return e10.forEach((e11) => {
      var _a;
      if (this.memberIdTypeLookup.has(e11)) {
        const t18 = this.memberIdTypeLookup.get(e11);
        if (!this.entityTypeNames.has(t18))
          return;
        n4.has(t18) ? (_a = n4.get(t18)) == null ? void 0 : _a.push(e11) : n4.set(t18, [e11]);
      }
    }), n4.forEach((e11, n5) => {
      const o7 = `MATCH (n:${n5})-[r]-(m) WHERE id(n) IN $ids RETURN id(r), type(r), id(m), labels(m)[0]`, s16 = new Promise((i11) => {
        (async () => {
          const i12 = (await x3(this.knowledgeGraph, new a6({ openCypherQuery: o7, bindParameters: { ids: e11 } }))).resultRowsStream.getReader();
          try {
            for (; ; ) {
              const { done: e12, value: n6 } = await i12.read();
              if (e12)
                break;
              for (let i13 = 0; i13 < n6.length; i13++) {
                const e13 = n6[i13];
                t17.push({ id: e13[0], typeName: e13[1] }), t17.push({ id: e13[2], typeName: e13[3] });
              }
            }
          } catch (n6) {
            if ("AbortError" !== n6.name)
              throw n6;
            k3.info("Request aborted as expected");
          }
        })().then(() => {
          i11();
        });
      });
      i10.push(s16);
    }), await Promise.all(i10), t17;
  }
  async refreshCacheContent(e10, t17, n4, s16 = true) {
    var _a, _b, _c, _d, _e, _f, _g;
    const a8 = o3.getInstance(), r6 = [], p18 = /* @__PURE__ */ new Map(), d3 = /* @__PURE__ */ new Map();
    (_a = this.knowledgeGraph.dataModel.entityTypes) == null ? void 0 : _a.forEach((e11) => {
      e11.name && d3.set(e11.name, e11);
    }), (_b = this.knowledgeGraph.dataModel.relationshipTypes) == null ? void 0 : _b.forEach((e11) => {
      e11.name && d3.set(e11.name, e11);
    }), e10 || this.inclusionModeDefinition ? e10 ? e10.forEach((e11) => {
      var _a2;
      if (this.memberIdTypeLookup.has(e11)) {
        const t18 = this.memberIdTypeLookup.get(e11);
        p18.has(t18) ? (_a2 = p18.get(t18)) == null ? void 0 : _a2.push(e11) : p18.set(t18, [e11]);
      }
    }) : (_d = (_c = this.inclusionModeDefinition) == null ? void 0 : _c.namedTypeDefinitions) == null ? void 0 : _d.forEach((e11, t18) => {
      e11.useAllData ? p18.set(t18, null) : e11.members && e11.members.forEach((e12) => {
        var _a2;
        p18.has(t18) && null !== p18.get(t18) ? (_a2 = p18.get(t18)) == null ? void 0 : _a2.push(e12.id) : p18.set(t18, [e12.id]);
      });
    }) : ((_e = this.knowledgeGraph.dataModel.entityTypes) == null ? void 0 : _e.forEach((e11) => {
      e11.name && p18.set(e11.name, null);
    }), (_f = this.knowledgeGraph.dataModel.entityTypes) == null ? void 0 : _f.forEach((e11) => {
      e11.name && p18.set(e11.name, null);
    }));
    for (const [m7, l7] of p18) {
      const e11 = new Promise((e12) => {
        const r7 = async () => {
          var _a2, _b2, _c2, _d2, _e2, _f2, _g2;
          const e13 = /* @__PURE__ */ new Set(), r8 = [];
          let p19, h = "", c12 = false;
          if (t17 || ((_b2 = (_a2 = d3.get(m7)) == null ? void 0 : _a2.properties) == null ? void 0 : _b2.forEach((t18) => {
            t18.name && e13.add(t18.name);
          })), n4 && this.geographicLookup.has(m7)) {
            const t18 = (_c2 = this.geographicLookup.get(m7)) == null ? void 0 : _c2.name;
            t18 && e13.add(t18);
          }
          if (this.entityTypeNames.has(m7))
            h = `MATCH (n:${m7}) ${l7 ? "WHERE id(n) IN $ids " : ""}return ID(n)`, e13.forEach((e14) => {
              h += `, n.${e14}`, r8.push(e14);
            });
          else {
            if (!this.relationshipTypeNames.has(m7))
              throw new s2("knowledge-graph:layer-data-manager", `The graph type of ${m7} could not be determined. Was this type set in the KG data model and inclusion definition?`);
            c12 = true, h = `MATCH ()-[n:${m7}]->() ${l7 ? "WHERE id(n) IN $ids " : ""}return ID(n), id(startNode(n)), id(endNode(n))`, e13.forEach((e14) => {
              h += `, n.${e14}`, r8.push(e14);
            });
          }
          p19 = new a6(l7 ? { openCypherQuery: h, bindParameters: { ids: l7 } } : { openCypherQuery: h });
          const y6 = (await x3(this.knowledgeGraph, p19)).resultRowsStream.getReader();
          for (; ; ) {
            const { done: e14, value: t18 } = await y6.read();
            if (e14)
              break;
            const i10 = [];
            for (let s17 = 0; s17 < t18.length; s17++) {
              const e15 = t18[s17];
              let n6 = 0, a9 = 0;
              const p21 = { properties: {} };
              for (p21.id = e15[n6], n6++, a9++, c12 && (p21.originId = e15[n6], n6++, a9++, p21.destinationId = e15[n6], n6++, a9++, r(this.nodeConnectionsLookup, p21.originId, () => /* @__PURE__ */ new Set()).add(p21.id), r(this.nodeConnectionsLookup, p21.destinationId, () => /* @__PURE__ */ new Set()).add(p21.id)); n6 < e15.length; n6++)
                p21.properties[r8[n6 - a9]] = e15[n6];
              i10.push(p21);
            }
            const n5 = a8.writeToStore(i10, b5, (_d2 = this.geographicLookup.get(m7)) == null ? void 0 : _d2.name);
            this.sublayerCaches.has(m7) || this.sublayerCaches.set(m7, /* @__PURE__ */ new Map()), s16 && !((_e2 = this.inclusionModeDefinition) == null ? void 0 : _e2.namedTypeDefinitions.has(m7)) && ((_f2 = this.inclusionModeDefinition) == null ? void 0 : _f2.namedTypeDefinitions.set(m7, { useAllData: false, members: /* @__PURE__ */ new Map() })), s16 && !((_g2 = this.inclusionModeDefinition) == null ? void 0 : _g2.namedTypeDefinitions.get(m7).members) && (this.inclusionModeDefinition.namedTypeDefinitions.get(m7).members = /* @__PURE__ */ new Map());
            const p20 = this.sublayerCaches.get(m7);
            n5.forEach((e15) => {
              var _a3, _b3;
              p20 == null ? void 0 : p20.set(e15.attributes[b5], e15), s16 && !((_a3 = this.inclusionModeDefinition) == null ? void 0 : _a3.namedTypeDefinitions.get(m7).members.has(e15.attributes[b5])) && ((_b3 = this.inclusionModeDefinition) == null ? void 0 : _b3.namedTypeDefinitions.get(m7).members.set(e15.attributes[b5], { id: e15.attributes[b5] }), this.memberIdTypeLookup.set(e15.attributes[b5], m7));
            });
          }
        };
        r7().then(() => {
          e12(null);
        });
      });
      r6.push(e11), (_g = this._processingCacheUpdatesLookup.get(m7)) == null ? void 0 : _g.push(e11);
    }
    await Promise.all(r6);
  }
  removeFromLayer(e10) {
    var _a;
    const t17 = /* @__PURE__ */ new Set(), i10 = new Set(e10.map((e11) => e11.id));
    for (const n4 of e10)
      t17.add(n4.typeName), this.memberIdTypeLookup.delete(n4.id), (_a = this.inclusionModeDefinition) == null ? void 0 : _a.namedTypeDefinitions.forEach((e11) => {
        var _a2;
        ((_a2 = e11.members) == null ? void 0 : _a2.has(n4.id)) && e11.members.delete(n4.id);
      });
    t17.forEach((e11) => {
      var _a2;
      (_a2 = this.sublayerCaches.get(e11)) == null ? void 0 : _a2.forEach((t18, n4) => {
        var _a3;
        i10.has(n4) && ((_a3 = this.sublayerCaches.get(e11)) == null ? void 0 : _a3.delete(n4));
      });
    });
  }
  async retrieveDataFromService(e10, t17, n4) {
    var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n, _o, _p, _q;
    const o7 = o3.getInstance(), a8 = /* @__PURE__ */ new Set(), r6 = [];
    let p18, g5 = "", T5 = [];
    const D3 = "relationship" === t17.graphType, M6 = (_c = (_b = (_a = this.inclusionModeDefinition) == null ? void 0 : _a.namedTypeDefinitions) == null ? void 0 : _b.get(t17.objectType.name)) == null ? void 0 : _c.useAllData, I4 = t17.parentCompositeLayer.sublayerIdsCache.get(t17.objectType.name);
    let k4 = !M6 && I4 ? Array.from(I4).sort() : null;
    if ((_f = (_e = (_d = this.inclusionModeDefinition) == null ? void 0 : _d.namedTypeDefinitions) == null ? void 0 : _e.get(t17.objectType.name)) == null ? void 0 : _f.useAllData)
      ((_i = (_h = (_g = this.inclusionModeDefinition) == null ? void 0 : _g.namedTypeDefinitions) == null ? void 0 : _h.get(t17.objectType.name)) == null ? void 0 : _i.useAllData) && null != e10.objectIds && (k4 = e10.objectIds);
    else if (null != e10.objectIds && k4 && k4.length > 0) {
      const t18 = e10.objectIds;
      e10.objectIds = k4.filter((e11) => t18.includes(e11));
    } else if (null != e10.objectIds)
      k4 = e10.objectIds;
    else {
      if (((_j = this.inclusionModeDefinition) == null ? void 0 : _j.namedTypeDefinitions.has(t17.objectType.name)) && (!((_k = this.inclusionModeDefinition.namedTypeDefinitions.get(t17.objectType.name)) == null ? void 0 : _k.members) || ((_m = (_l = this.inclusionModeDefinition.namedTypeDefinitions.get(t17.objectType.name)) == null ? void 0 : _l.members) == null ? void 0 : _m.size) < 1))
        return e10.objectIds = [], [];
      e10.objectIds = k4;
    }
    if (null != e10.outFields) {
      const i10 = e10.outFields;
      i10.includes("*") ? t17.fields.forEach((e11) => {
        a8.add(e11.name);
      }) : i10.forEach((e11) => {
        e11 !== b5 && e11 !== t17.geometryFieldName && a8.add(e11);
      });
    }
    if (null != e10.geometry) {
      const n5 = e10.geometry;
      let o8;
      const c12 = t17.parentCompositeLayer.dataManager.knowledgeGraph.serviceDefinition, u4 = c12 == null ? void 0 : c12.spatialReference, b7 = (_n = c12 == null ? void 0 : c12.serviceCapabilities) == null ? void 0 : _n.geometryCapabilities;
      let T6 = b7 == null ? void 0 : b7.geometryMaxBoundingRectangleSizeX, M7 = b7 == null ? void 0 : b7.geometryMaxBoundingRectangleSizeY;
      if (((_o = n5 == null ? void 0 : n5.extent) == null ? void 0 : _o.spatialReference) && !((_p = n5.spatialReference) == null ? void 0 : _p.isWGS84) ? (await F(n5.extent.spatialReference, N), o8 = b(n5.extent, N)) : o8 = n5.extent, T6 && M7 && u4) {
        if (4326 !== u4.wkid) {
          const e11 = new M({ spatialReference: u4, xmax: T6, ymax: M7 }), t18 = b(e11, N);
          T6 = t18.xmax, M7 = t18.ymax;
        }
        if (o8.xmax - o8.xmin > T6)
          throw new s2("knowledge-graph:layer-data-manager", `Extent x bounds should be within ${T6}° latitude, limit exceeded`);
        if (o8.ymax - o8.ymin > M7)
          throw new s2("knowledge-graph:layer-data-manager", `Extent y bounds should be within ${M7}° longitude, limit exceeded`);
      }
      if (null != e10.where && "1=1" !== e10.where) {
        const i10 = await e2(e10.where.toUpperCase(), t17.fieldsIndex);
        t17.fields.forEach((e11) => {
          i10.fieldNames.includes(e11.name) && a8.add(e11.name);
        });
      }
      g5 = D3 ? `Match ()-[n:${t17.objectType.name}]->() WHERE esri.graph.ST_Intersects($param_filter_geom, n.${t17.geometryFieldName}) return ID(n), id(startNode(r)), id(endNode(r))` : `Match (n:${t17.objectType.name}) WHERE esri.graph.ST_Intersects($param_filter_geom, n.${t17.geometryFieldName}) return ID(n)`, t17.geometryFieldName && a8.add(t17.geometryFieldName), a8.forEach((e11) => {
        g5 += `, n.${e11}`, r6.push(e11);
      }), p18 = new a6({ openCypherQuery: g5, bindParameters: { param_filter_geom: new j2({ rings: e8(o8) }) } });
    } else {
      let i10 = "";
      if (null != e10.where && "1=1" !== e10.where) {
        const n6 = await e2(e10.where, t17.fieldsIndex);
        t17.fields.forEach((e11) => {
          n6.fieldNames.includes(e11.name) && a8.add(e11.name);
        });
        const o9 = /* @__PURE__ */ new Set(["column-reference", "string", "number", "binary-expression"]), r7 = /* @__PURE__ */ new Set(["=", "<", "<=", "<>", ">", ">=", "AND", "OR", "LIKE"]);
        let p19 = false;
        const d3 = (e11) => {
          if ("column-reference" === e11.type)
            return `n.${e11.column}`;
          if ("string" === e11.type)
            return `'${e11.value}'`;
          if ("number" === e11.type)
            return `${e11.value}`;
          if ("binary-expression" === e11.type && o9.has(e11.left.type) && o9.has(e11.right.type) && r7.has(e11.operator))
            return `${d3(e11.left)} ${e11.operator} ${d3(e11.right)}`;
          if ("binary-expression" === e11.type && "LIKE" === e11.operator) {
            let t18 = "";
            if ("function" === e11.left.type && "column-reference" === e11.left.args.value[0].type)
              t18 += `lower(n.${e11.left.args.value[0].column})`;
            else {
              if ("column-reference" !== e11.left.type)
                return p19 = true, "";
              t18 += `lower(n.${e11.left.column})`;
            }
            if (t18 += " CONTAINS (", "string" !== e11.right.type)
              return p19 = true, "";
            {
              let i11 = e11.right.value;
              "%" === i11.charAt(0) && (i11 = i11.slice(1)), "%" === i11.charAt(i11.length - 1) && (i11 = i11.slice(0, -1)), t18 += `'${i11.toLowerCase()}')`;
            }
            return t18;
          }
          return p19 = true, "";
        };
        i10 = d3(n6.parseTree), p19 && (i10 = "");
      }
      let n5 = "";
      n5 = D3 ? `Match ()-[n:${t17.objectType.name}]->()` : `Match (n:${t17.objectType.name})`;
      let o8 = false;
      k4 && (o8 = true, n5 += " WHERE ID(n) IN $ids"), i10 && (n5 += o8 ? " AND" : " WHERE", n5 += ` ${i10}`), n5 += " return ID(n)", D3 && (n5 += ", id(startNode(n)), id(endNode(n))"), e10.returnGeometry && t17.geometryFieldName && a8.add(t17.geometryFieldName), a8.forEach((e11) => {
        n5 += `, n.${e11}`, r6.push(e11);
      }), p18 = new a6(k4 ? { openCypherQuery: n5, bindParameters: { ids: k4 } } : { openCypherQuery: n5 });
    }
    const E5 = (await x3(t17.parentCompositeLayer.dataManager.knowledgeGraph, p18, n4)).resultRowsStream.getReader();
    for (; ; ) {
      const { done: e11, value: i10 } = await E5.read();
      if (e11)
        break;
      const n5 = [];
      for (let t18 = 0; t18 < i10.length; t18++) {
        const e12 = i10[t18];
        let o8 = 0, s16 = 0;
        const a9 = { properties: {} };
        for (a9.id = e12[o8], o8++, s16++, D3 && (a9.originId = e12[o8], o8++, s16++, a9.destinationId = e12[o8], o8++, s16++); o8 < e12.length; o8++)
          a9.properties[r6[o8 - s16]] = e12[o8];
        n5.push(a9);
      }
      T5 = T5.concat(o7.writeToStore(n5, b5, (_q = t17.parentCompositeLayer.dataManager.geographicLookup.get(t17.objectType.name)) == null ? void 0 : _q.name));
    }
    return T5;
  }
};
e([y()], E3.prototype, "knowledgeGraph", void 0), e([y()], E3.prototype, "inclusionModeDefinition", void 0), e([y()], E3.prototype, "entityTypeNames", void 0), e([y()], E3.prototype, "relationshipTypeNames", void 0), e([y()], E3.prototype, "geographicLookup", void 0), e([y()], E3.prototype, "sublayerCaches", void 0), e([y()], E3.prototype, "nodeConnectionsLookup", void 0), e([y()], E3.prototype, "memberIdTypeLookup", void 0), E3 = e([c("esri.rest.knowledgeGraph.knowledgeGraphLayer.KnowledgeGraphLayerDataManager")], E3);

// node_modules/@arcgis/core/layers/knowledgeGraph/KnowledgeGraphSublayerBase.js
var t16 = s4();
var p16 = (o7) => {
  let p18 = class extends o7 {
    constructor() {
      super(...arguments), this.fields = [], this.fieldsIndex = null;
    }
  };
  return e([y(t16.fields)], p18.prototype, "fields", void 0), e([y(t16.fieldsIndex)], p18.prototype, "fieldsIndex", void 0), p18 = e([c("esri.layers.knowledgeGraphLayer.KnowledgeGraphSublayerBase")], p18), p18;
};

// node_modules/@arcgis/core/layers/knowledgeGraph/KnowledgeGraphSublayer.js
var M5 = class extends c2(p16(a2(t5(f3(b3))))) {
  constructor(e10) {
    var _a, _b, _c, _d, _e;
    if (super(e10), this.capabilities = l(false, false), this.definitionExpression = "", this.displayField = "", this.elevationInfo = null, this.geometryType = null, this.geometryFieldName = null, this.graphType = null, this.hasM = false, this.hasZ = false, this.labelsVisible = null, this.labelingInfo = null, this.objectIdField = b5, this.objectType = null, this.parentCompositeLayer = null, this.popupTemplate = null, this.source = { openPorts: () => this.load().then(() => {
      const e11 = new MessageChannel();
      return new w(e11.port1, { channel: e11, client: { queryFeatures: (e12, t17 = {}) => {
        const r6 = b2.fromJSON(e12);
        return this.queryFeaturesJSON(r6, t17);
      } } }), [e11.port2];
    }) }, this.type = "knowledge-graph-sublayer", "link-chart" === e10.parentCompositeLayer.type)
      "relationship" === e10.graphType ? this.geometryType = "polyline" : this.geometryType = "point", this.geometryFieldName = M4;
    else if (((_a = e10.parentCompositeLayer.dataManager.geographicLookup.get(e10.objectType.name)) == null ? void 0 : _a.geometryType) && "esriGeometryNull" !== ((_b = e10.parentCompositeLayer.dataManager.geographicLookup.get(e10.objectType.name)) == null ? void 0 : _b.geometryType)) {
      const t17 = e10.parentCompositeLayer.dataManager.geographicLookup.get(e10.objectType.name);
      this.geometryFieldName = (t17 == null ? void 0 : t17.name) ?? null, this.geometryType = (t17 == null ? void 0 : t17.geometryType) ? o.fromJSON(t17.geometryType) : null;
      const r6 = t17 == null ? void 0 : t17.name, o7 = r6 ? (_c = e10.objectType.properties) == null ? void 0 : _c[r6] : null;
      o7 ? (this.hasM = o7.hasM ?? false, this.hasZ = o7.hasZ ?? false) : (this.hasM = false, this.hasZ = false);
    } else
      this.geometryType = null;
    (_d = e10.objectType.properties) == null ? void 0 : _d.forEach((e11) => {
      let t17 = null, r6 = e11.fieldType;
      "esriFieldTypeOID" === r6 && (r6 = "esriFieldTypeInteger"), this.fields.push(y2.fromJSON({ name: e11.name, type: r6, alias: e11.alias, defaultValue: t17, editable: e11.editable, nullable: e11.nullable }));
    }), this.fields.push(y2.fromJSON({ name: this.objectIdField, type: "esriFieldTypeString", alias: this.objectIdField, editable: false })), this._set("fields", [...this.fields]), ((_e = e10.parentCompositeLayer.dataManager.knowledgeGraph.dataModel) == null ? void 0 : _e.spatialReference) && (this.spatialReference = e10.parentCompositeLayer.dataManager.knowledgeGraph.dataModel.spatialReference), "link-chart" === e10.parentCompositeLayer.type ? "relationship" === e10.graphType ? this.renderer = t4(o2(o.toJSON("polyline")).renderer) : this.renderer = t4(o2(o.toJSON("point")).renderer) : this.renderer = t4(o2(o.toJSON(this.geometryType)).renderer);
  }
  get defaultPopupTemplate() {
    return this.createPopupTemplate();
  }
  set renderer(e10) {
    p5(e10, this.fieldsIndex), this._set("renderer", e10);
  }
  createPopupTemplate(e10) {
    return p3(this, e10);
  }
  createQuery() {
    return new b2({ where: "1=1", outFields: ["*"] });
  }
  getField(e10) {
    for (let t17 = 0; t17 < this.fields.length; t17++)
      if (this.fields[t17].name === e10)
        return this.fields[t17];
    throw new Error("Field not found");
  }
  getFieldDomain(e10, t17) {
    return null;
  }
  async queryFeatures(e10, t17) {
    const { resolvedQuery: r6, queryEngine: o7 } = await this._setupQueryObjects(e10), s16 = d.fromJSON(await o7.executeQuery(r6.toJSON(), t17 == null ? void 0 : t17.signal));
    return s16.features.forEach((e11) => {
      e11.sourceLayer = this;
    }), s16;
  }
  async queryFeaturesJSON(e10, t17) {
    const { resolvedQuery: r6, queryEngine: o7 } = await this._setupQueryObjects(e10);
    return await o7.executeQuery(r6.toJSON(), t17 == null ? void 0 : t17.signal);
  }
  async queryFeatureCount(e10, t17) {
    const { resolvedQuery: r6, queryEngine: o7 } = await this._setupQueryObjects(e10);
    return o7.executeQueryForCount(r6.toJSON(), t17 == null ? void 0 : t17.signal);
  }
  async queryExtent(e10 = {}, t17) {
    var _a, _b, _c, _d;
    const r6 = { ...e10, returnGeometry: true }, { resolvedQuery: o7, queryEngine: s16 } = await this._setupQueryObjects(r6), i10 = await s16.executeQueryForExtent(o7.toJSON(), t17 == null ? void 0 : t17.signal);
    let a8;
    return a8 = null != ((_a = i10.extent) == null ? void 0 : _a.xmin) && null != ((_b = i10.extent) == null ? void 0 : _b.xmax) && null != ((_c = i10.extent) == null ? void 0 : _c.ymin) && null != ((_d = i10.extent) == null ? void 0 : _d.ymax) ? new M(i10.extent) : new M(), { count: i10.count, extent: a8 };
  }
  async queryObjectIds(e10, t17) {
    const r6 = b2.from(e10);
    let o7;
    if ("link-chart" === this.parentCompositeLayer.type && this._cachedQueryEngine)
      o7 = this._cachedQueryEngine;
    else {
      const e11 = await this.parentCompositeLayer.dataManager.getData(r6, this, t17);
      o7 = this.loadQueryEngine(e11);
    }
    return o7.executeQueryForIds(r6.toJSON(), t17 == null ? void 0 : t17.signal);
  }
  loadQueryEngine(e10) {
    const t17 = new m2({ geometryType: o.toJSON(this.geometryType), hasM: this.hasM, hasZ: this.hasZ }), r6 = new W({ fieldsIndex: this.fieldsIndex.toJSON(), geometryType: o.toJSON(this.geometryType), hasM: this.hasM, hasZ: this.hasZ, objectIdField: this.objectIdField, spatialReference: this.spatialReference.toJSON(), timeInfo: null, featureStore: t17 });
    return r6.featureStore.addMany(e10), r6;
  }
  async refreshCachedQueryEngine() {
    const e10 = await this.parentCompositeLayer.dataManager.getData(new b2({ where: "1=1", outFields: [b5] }), this);
    this._cachedQueryEngine = this.loadQueryEngine(e10);
  }
  async _setupQueryObjects(e10, t17) {
    var _a;
    const r6 = b2.from(e10), o7 = r6.geometry;
    let s16;
    if (o7 && !((_a = o7.spatialReference) == null ? void 0 : _a.isWGS84) && (await F(o7.spatialReference, N), r6.geometry = b(o7 instanceof j2 || o7 instanceof m ? o7 : o7.extent, N)), "link-chart" === this.parentCompositeLayer.type && this._cachedQueryEngine)
      s16 = this._cachedQueryEngine;
    else {
      const e11 = await this.parentCompositeLayer.dataManager.getData(r6, this, t17);
      s16 = this.loadQueryEngine(e11);
    }
    return { resolvedQuery: r6, queryEngine: s16 };
  }
};
e([y()], M5.prototype, "capabilities", void 0), e([y({ readOnly: true })], M5.prototype, "defaultPopupTemplate", null), e([y()], M5.prototype, "definitionExpression", void 0), e([y()], M5.prototype, "displayField", void 0), e([y()], M5.prototype, "elevationInfo", void 0), e([y()], M5.prototype, "geometryType", void 0), e([y()], M5.prototype, "geometryFieldName", void 0), e([y()], M5.prototype, "graphType", void 0), e([y()], M5.prototype, "hasM", void 0), e([y()], M5.prototype, "hasZ", void 0), e([y()], M5.prototype, "labelsVisible", void 0), e([y()], M5.prototype, "labelingInfo", void 0), e([y()], M5.prototype, "objectIdField", void 0), e([y()], M5.prototype, "objectType", void 0), e([y()], M5.prototype, "parentCompositeLayer", void 0), e([y({ type: k, json: { name: "popupInfo", write: true } })], M5.prototype, "popupTemplate", void 0), e([y({ types: m3, json: { write: { target: "layerDefinition.drawingInfo.renderer" } } })], M5.prototype, "renderer", null), e([y()], M5.prototype, "source", void 0), e([y({ json: { read: false } })], M5.prototype, "type", void 0), M5 = e([c("esri.layers.knowledgeGraph.KnowledgeGraphSublayer")], M5);
var C2 = M5;

// node_modules/@arcgis/core/libs/linkchartlayout/LinkChartLayout.js
var e9;
var r5 = null;
function n3() {
  return e9 || (e9 = import("./lclayout-J72YKCRB.js").then((t17) => t17.l).then(({ default: e10 }) => e10({ locateFile: (e11) => a(`esri/libs/linkchartlayout/${e11}`) })).then((t17) => {
    s15(t17);
  }), e9);
}
function s15(t17) {
  r5 = t17;
}
var o6;
function u3(t17, e10, a8, n4, s16, o7) {
  const u4 = a8.length, y6 = s16.length, l7 = Float64Array.BYTES_PER_ELEMENT, i10 = Uint32Array.BYTES_PER_ELEMENT, c12 = Uint8Array.BYTES_PER_ELEMENT, E5 = 16, p18 = E5 - 1 + u4 * (c12 + 2 * l7) + y6 * (2 * i10), f8 = r5._malloc(p18);
  try {
    const c13 = f8 + E5 - f8 % E5, p19 = c13 + u4 * l7, b7 = p19 + u4 * l7, A4 = b7 + y6 * i10, P4 = A4 + y6 * i10, _4 = () => [r5.HEAPF64.subarray(c13 >> 3, (c13 >> 3) + u4), r5.HEAPF64.subarray(p19 >> 3, (p19 >> 3) + u4), r5.HEAPU32.subarray(b7 >> 2, (b7 >> 2) + y6), r5.HEAPU32.subarray(A4 >> 2, (A4 >> 2) + y6), r5.HEAPU8.subarray(P4, P4 + u4)], [C3, H, d3, m7, F3] = _4();
    C3.set(a8), H.set(n4), d3.set(s16), m7.set(o7), F3.set(e10);
    const h = t17(u4, P4, c13, p19, y6, b7, A4), [B, L2, R3, T5, g5] = _4();
    return a8.set(B), n4.set(L2), s16.set(R3), o7.set(T5), e10.set(g5), h;
  } finally {
    r5._free(f8);
  }
}
!function(t17) {
  t17[t17.None = 0] = "None", t17[t17.IsMovable = 1] = "IsMovable", t17[t17.IsGeographic = 2] = "IsGeographic", t17[t17.IsRoot = 4] = "IsRoot";
}(o6 || (o6 = {}));
var y5 = 2;
var l6 = 1;
var i9 = -1;
var c11;
var E4;
var p17;
var f7;
var b6;
var A3;
var P2;
var _3;
!function(t17) {
  function e10() {
    return r5.getMinIdealEdgeLength();
  }
  function a8(t18, e11, a9, n4, s16, o7 = y5, c12 = l6, E5 = i9) {
    return u3((t19, e12, a10, n5, s17, u4, y6) => r5.applyForceDirectedLayout(t19, e12, a10, n5, s17, u4, y6, o7, c12, E5), t18, e11, a9, n4, s16);
  }
  t17.getMinIdealEdgeLength = e10, t17.apply = a8;
}(c11 || (c11 = {})), function(t17) {
  function e10(t18, e11, a8, n4, s16, o7 = y5, c12 = l6, E5 = i9) {
    return u3((t19, e12, a9, n5, s17, u4, y6) => r5.applyCommunityLayout(t19, e12, a9, n5, s17, u4, y6, o7, c12, E5), t18, e11, a8, n4, s16);
  }
  t17.apply = e10;
}(E4 || (E4 = {})), function(t17) {
  function e10(t18, e11, a8, n4, s16) {
    return u3(r5.applySimpleLayout, t18, e11, a8, n4, s16);
  }
  t17.apply = e10;
}(p17 || (p17 = {})), function(t17) {
  function e10(t18, e11, a8, n4, s16) {
    return u3(r5.applyHierarchicalLayout, t18, e11, a8, n4, s16);
  }
  t17.apply = e10;
}(f7 || (f7 = {})), function(t17) {
  function e10(t18, e11, a8, n4, s16) {
    return u3(r5.applyRadialTreeLayout, t18, e11, a8, n4, s16);
  }
  t17.apply = e10;
}(b6 || (b6 = {})), function(t17) {
  function e10(t18, e11, a8, n4, s16) {
    return u3(r5.applySmartTreeLayout, t18, e11, a8, n4, s16);
  }
  t17.apply = e10;
}(A3 || (A3 = {})), function(t17) {
  t17[t17.Undirected = 0] = "Undirected", t17[t17.Directed = 1] = "Directed", t17[t17.Reversed = 2] = "Reversed";
}(P2 || (P2 = {})), function(t17) {
  t17[t17.ByCC_Raw = 0] = "ByCC_Raw", t17[t17.ByCC_NormalizeGlobally = 1] = "ByCC_NormalizeGlobally", t17[t17.ByCC_NormalizeByCC = 2] = "ByCC_NormalizeByCC";
}(_3 || (_3 = {}));

// node_modules/@arcgis/core/layers/LinkChartLayer.js
var S2 = (e10, t17, a8) => (e10.has(t17) || e10.set(t17, a8()), e10.get(t17));
var j6 = class extends a2(t5(b3)) {
  constructor(e10) {
    if (super(e10), this.dataPreloadedInLocalCache = false, this.defaultLinkChartConfig = null, this._currentLinkChartConfig = { layoutMode: "RADIAL_TREE", xScaleFactor: 1, yScaleFactor: 1 }, this._graphTypeLookup = /* @__PURE__ */ new Map(), this.knowledgeGraph = null, this.layers = new V(), this.linkChartDiagramLookup = /* @__PURE__ */ new Map(), this.linkChartExtent = new M({ xmin: -1e-7, ymin: -1e-7, xmax: 1e-7, ymax: 1e-7 }), this.linkChartGeohashLookup = /* @__PURE__ */ new Map(), this.memberEntityTypes = null, this.memberRelationshipTypes = null, this.sublayerIdsCache = /* @__PURE__ */ new Map(), this.tables = new V(), this.type = "link-chart", this._originalInclusionList = e10.inclusionModeDefinition, e10.dataPreloadedInLocalCache && !e10.inclusionModeDefinition)
      throw new s2("knowledge-graph:linkchart-layer-constructor", "If creating a link chart composite layer and configured that data is already loaded in the cache, you must specify an inclusion list so the Composite Layer knows what records belong to it");
  }
  normalizeCtorArgs(e10) {
    return { url: e10.url, title: e10.title, dataPreloadedInLocalCache: e10.dataPreloadedInLocalCache, defaultLinkChartConfig: e10.defaultLinkChartConfig };
  }
  _initializeLayerProperties(e10) {
    var _a, _b, _c, _d, _e, _f;
    if (!this.title && this.url) {
      const e11 = this.url.split("/");
      this.title = e11[e11.length - 2];
    }
    const t17 = /* @__PURE__ */ new Set();
    let o7 = [], n4 = [];
    if (e10.inclusionModeDefinition && (!e10.inclusionModeDefinition.namedTypeDefinitions || e10.inclusionModeDefinition.namedTypeDefinitions.size < 1))
      throw new s2("knowledge-graph:composite-layer-constructor", "If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined");
    (_a = e10.knowledgeGraph.dataModel.entityTypes) == null ? void 0 : _a.forEach((e11) => {
      e11.name && this._graphTypeLookup.set(e11.name, e11);
    }), (_b = e10.knowledgeGraph.dataModel.relationshipTypes) == null ? void 0 : _b.forEach((e11) => {
      e11.name && this._graphTypeLookup.set(e11.name, e11);
    }), ((_c = e10.inclusionModeDefinition) == null ? void 0 : _c.generateAllSublayers) ? (o7 = e10.knowledgeGraph.dataModel.entityTypes ?? [], n4 = e10.knowledgeGraph.dataModel.relationshipTypes ?? []) : ((_d = e10.inclusionModeDefinition) == null ? void 0 : _d.namedTypeDefinitions) && ((_e = e10.inclusionModeDefinition) == null ? void 0 : _e.namedTypeDefinitions.size) > 0 ? (_f = e10.inclusionModeDefinition) == null ? void 0 : _f.namedTypeDefinitions.forEach((a8, s17) => {
      var _a2, _b2;
      if (!this._graphTypeLookup.get(s17))
        return s.getLogger(this).warn(`A named type, ${s17}, was in the inclusion list that wasn't in the data model and will be removed`), void ((_a2 = e10.inclusionModeDefinition) == null ? void 0 : _a2.namedTypeDefinitions.delete(s17));
      this._graphTypeLookup.get(s17) instanceof p6 || "strictOrigin" in this._graphTypeLookup.get(s17) ? t17.has(s17) || (t17.add(s17), n4.push(this._graphTypeLookup.get(s17))) : this._graphTypeLookup.get(s17) instanceof t8 || "properties" in this._graphTypeLookup.get(s17) ? t17.has(s17) || (t17.add(s17), o7.push(this._graphTypeLookup.get(s17))) : (s.getLogger(this).warn(`A named type, ${s17}, was in the inclusion list that wasn't properly modeled and will be removed`), (_b2 = e10.inclusionModeDefinition) == null ? void 0 : _b2.namedTypeDefinitions.delete(s17));
    }) : (o7 = e10.knowledgeGraph.dataModel.entityTypes ?? [], n4 = e10.knowledgeGraph.dataModel.relationshipTypes ?? []);
    const s16 = new E3({ knowledgeGraph: e10.knowledgeGraph, inclusionModeDefinition: e10.inclusionModeDefinition });
    this.knowledgeGraph = e10.knowledgeGraph, this.memberEntityTypes = o7, this.memberRelationshipTypes = n4, this.dataManager = s16;
  }
  load(e10) {
    return this.addResolvingPromise(new Promise((t17) => {
      T3(this.url).then((a8) => {
        var _a, _b, _c, _d, _e, _f;
        if (this._initializeLayerProperties({ knowledgeGraph: a8, inclusionModeDefinition: this._originalInclusionList }), ((_b = (_a = this.dataManager.inclusionModeDefinition) == null ? void 0 : _a.namedTypeDefinitions) == null ? void 0 : _b.size) || (this.dataManager.inclusionModeDefinition = { generateAllSublayers: false, namedTypeDefinitions: /* @__PURE__ */ new Map() }, (_c = this.dataManager.knowledgeGraph.dataModel.entityTypes) == null ? void 0 : _c.forEach((e11) => {
          var _a2;
          e11.name && ((_a2 = this.dataManager.inclusionModeDefinition) == null ? void 0 : _a2.namedTypeDefinitions.set(e11.name, { useAllData: true }));
        }), (_d = this.dataManager.knowledgeGraph.dataModel.relationshipTypes) == null ? void 0 : _d.forEach((e11) => {
          var _a2;
          e11.name && ((_a2 = this.dataManager.inclusionModeDefinition) == null ? void 0 : _a2.namedTypeDefinitions.set(e11.name, { useAllData: true }));
        })), this.dataPreloadedInLocalCache)
          this.loadLayerAssumingLocalCache(), this.dataManager.inclusionModeDefinition && (this.dataManager.inclusionModeDefinition.generateAllSublayers = false), (_e = this.dataManager.inclusionModeDefinition) == null ? void 0 : _e.namedTypeDefinitions.forEach((e11) => {
            var _a2;
            e11.useAllData = false, (_a2 = e11.members) == null ? void 0 : _a2.forEach((e12) => {
              let t18;
              t18 = e12.linkChartLocation instanceof t3 ? e12.linkChartLocation : e12.linkChartLocation ? rt(e12.linkChartLocation) : null, this.linkChartDiagramLookup.set(e12.id, t18), t18 && 2 === t18.coords.length && 0 === t18.lengths.length ? this.linkChartGeohashLookup.set(e12.id, p4(t18.coords[1], t18.coords[0], I3)) : this.linkChartGeohashLookup.set(e12.id, "");
            }), this.addResolvingPromise(this._initializeDiagram().then(async () => {
              this.layers.forEach(async (e12) => {
                await e12.refreshCachedQueryEngine();
              }), this.tables.forEach(async (e12) => {
                await e12.refreshCachedQueryEngine();
              });
            }));
          });
        else {
          const t18 = "GEOGRAPHIC" === ((_f = this.defaultLinkChartConfig) == null ? void 0 : _f.layoutMode);
          this.addResolvingPromise(this.dataManager.refreshCacheContent(void 0, false, t18, true).then(async () => {
            s3(e10);
            const t19 = [], a9 = [];
            this.loadLayerAssumingLocalCache(), this.dataManager.inclusionModeDefinition && (this.dataManager.inclusionModeDefinition.generateAllSublayers = false, this.dataManager.inclusionModeDefinition.namedTypeDefinitions.forEach((e11) => {
              e11.useAllData = false;
            })), await this._initializeDiagram(), this.layers.forEach((e11) => {
              a9.push(e11.refreshCachedQueryEngine()), t19.push(new Promise((t20) => {
                e11.on("layerview-create", () => {
                  t20(null);
                });
              }));
            }), this.tables.forEach((e11) => {
              a9.push(e11.refreshCachedQueryEngine());
            }), await Promise.all(a9);
          }));
        }
        t17(null);
      });
    })), Promise.resolve(this);
  }
  async addRecords(e10, t17) {
    let a8 = [];
    (t17 == null ? void 0 : t17.cascadeAddRelationshipEndNodes) && this.dataManager.knowledgeGraph.dataModel && (a8 = await a7(e10, this.dataManager.knowledgeGraph));
    const i10 = e10.concat(a8).filter((e11) => {
      var _a;
      return !((_a = this.sublayerIdsCache.get(e11.typeName)) == null ? void 0 : _a.has(e11.id));
    });
    await this._handleNewRecords(i10);
  }
  async removeRecords(e10, { cascadeRemoveRelationships: t17 = true, recalculateLayout: a8 = false } = { cascadeRemoveRelationships: true, recalculateLayout: false }) {
    var _a, _b, _c, _d, _e, _f, _g, _h;
    let i10 = [];
    for (const n4 of e10)
      false === ((_c = (_b = (_a = this.dataManager.inclusionModeDefinition) == null ? void 0 : _a.namedTypeDefinitions) == null ? void 0 : _b.get(n4.typeName)) == null ? void 0 : _c.useAllData) && ((_g = (_f = (_e = (_d = this.dataManager.inclusionModeDefinition) == null ? void 0 : _d.namedTypeDefinitions) == null ? void 0 : _e.get(n4.typeName)) == null ? void 0 : _f.members) == null ? void 0 : _g.has(n4.id)) && i10.push(n4);
    if (t17) {
      const e11 = /* @__PURE__ */ new Set(), t18 = [];
      for (const a9 of i10)
        if (this.dataManager.nodeConnectionsLookup.has(a9.id))
          for (const t19 of this.dataManager.nodeConnectionsLookup.get(a9.id))
            e11.add(t19);
      for (const a9 of e11)
        this.dataManager.memberIdTypeLookup.has(a9) && t18.push({ id: a9, typeName: this.dataManager.memberIdTypeLookup.get(a9) });
      i10 = i10.concat(t18);
    }
    this.dataManager.removeFromLayer(i10);
    for (const n4 of i10)
      (_h = this.sublayerIdsCache.get(n4.typeName)) == null ? void 0 : _h.delete(n4.id), this.linkChartDiagramLookup.delete(n4.id);
    a8 && await this.calculateLinkChartLayout(this._currentLinkChartConfig.layoutMode, { xScaleFactor: this._currentLinkChartConfig.xScaleFactor, yScaleFactor: this._currentLinkChartConfig.xScaleFactor });
    const o7 = [];
    return this.layers.forEach((e11) => {
      o7.push(e11.refreshCachedQueryEngine());
    }), await Promise.all(o7), this._refreshNamedTypes(), i10;
  }
  async expand(e10) {
    const t17 = await this.dataManager.getConnectedRecordIds(e10), a8 = t17.filter((e11) => {
      var _a;
      return !((_a = this.sublayerIdsCache.get(e11.typeName)) == null ? void 0 : _a.has(e11.id));
    });
    return await this._handleNewRecords(t17), { records: a8 };
  }
  loadLayerAssumingLocalCache() {
    var _a, _b;
    this.memberRelationshipTypes.forEach((e10) => {
      const t17 = new C2({ objectType: e10, parentCompositeLayer: this, graphType: "relationship", title: e10.name });
      t17.geometryType ? this.layers.push(t17) : this.tables.push(t17), this.dataManager.sublayerCaches.has(e10.name) || this.dataManager.sublayerCaches.set(e10.name, /* @__PURE__ */ new Map());
    }), this.memberEntityTypes.forEach((e10) => {
      const t17 = new C2({ objectType: e10, parentCompositeLayer: this, graphType: "entity", title: e10.name });
      t17.geometryType ? this.layers.push(t17) : this.tables.push(t17), this.dataManager.sublayerCaches.has(e10.name) || this.dataManager.sublayerCaches.set(e10.name, /* @__PURE__ */ new Map());
    }), ((_a = this.dataManager.inclusionModeDefinition) == null ? void 0 : _a.namedTypeDefinitions) && ((_b = this.dataManager.inclusionModeDefinition) == null ? void 0 : _b.namedTypeDefinitions.forEach((e10, t17) => {
      var _a2;
      const a8 = S2(this.sublayerIdsCache, t17, () => /* @__PURE__ */ new Set());
      (_a2 = e10.members) == null ? void 0 : _a2.forEach((e11) => {
        if (a8.add(e11.id), e11.linkChartLocation)
          if (e11.linkChartLocation instanceof t3)
            this.linkChartDiagramLookup.set(e11.id, e11.linkChartLocation), 2 === e11.linkChartLocation.coords.length && 0 === e11.linkChartLocation.lengths.length ? this.linkChartGeohashLookup.set(e11.id, p4(e11.linkChartLocation.coords[1], e11.linkChartLocation.coords[0], I3)) : this.linkChartGeohashLookup.set(e11.id, "");
          else {
            const t18 = rt(e11.linkChartLocation);
            this.linkChartDiagramLookup.set(e11.id, e11.linkChartLocation ? t18 : null), "x" in e11.linkChartLocation && "y" in e11.linkChartLocation ? this.linkChartGeohashLookup.set(e11.id, p4(e11.linkChartLocation.x, e11.linkChartLocation.y, I3)) : this.linkChartGeohashLookup.set(e11.id, "");
          }
      });
    }));
  }
  async calculateLinkChartLayout(e10 = "RADIAL_TREE", t17) {
    const o7 = [], n4 = [];
    this.dataManager.sublayerCaches.forEach((e11, t18) => {
      this.dataManager.entityTypeNames.has(t18) ? e11.forEach((e12) => {
        o7.push({ typeName: t18, feature: e12 });
      }) : this.dataManager.relationshipTypeNames.has(t18) && e11.forEach((e12) => {
        n4.push({ typeName: t18, feature: e12 });
      });
    }), this.linkChartDiagramLookup = /* @__PURE__ */ new Map();
    const s16 = /* @__PURE__ */ new Map(), h = /* @__PURE__ */ new Map(), c12 = /* @__PURE__ */ new Map(), d3 = /* @__PURE__ */ new Map(), g5 = new Uint8Array(o7.length), k4 = new Float64Array(o7.length), C3 = new Float64Array(o7.length), L2 = new Uint32Array(n4.length), N2 = new Uint32Array(n4.length), I4 = [], R3 = "FORCE_DIRECTED", S3 = (t17 == null ? void 0 : t17.xScaleFactor) ?? 1, j7 = (t17 == null ? void 0 : t17.yScaleFactor) ?? 1, P4 = new M({ xmin: -1e-7, ymin: -1e-7, xmax: 1e-7, ymax: 1e-7 });
    let F3, z2 = "FORCE_DIRECTED", O2 = 0, U = 0;
    switch (z2 = "GEOGRAPHIC" === e10 ? R3 : e10, z2) {
      case "FORCE_DIRECTED":
        F3 = c11.apply;
        break;
      case "COMMUNITY":
        F3 = E4.apply;
        break;
      case "HIERARCHICAL":
        F3 = f7.apply;
        break;
      case "RADIAL_TREE":
        F3 = b6.apply;
        break;
      case "SMART_TREE":
        F3 = A3.apply;
        break;
      default:
        F3 = p17.apply;
    }
    o7.forEach(({ typeName: a8, feature: i10 }) => {
      var _a, _b, _c;
      if ((_a = t17 == null ? void 0 : t17.lockedNodeLocations) == null ? void 0 : _a.has(i10.attributes[b5])) {
        "GEOGRAPHIC" === e10 && this.dataManager.geographicLookup.has(a8) ? g5[O2] = o6.IsGeographic : g5[O2] = o6.None;
        const o8 = t17.lockedNodeLocations.get(i10.attributes[b5]);
        k4[O2] = o8.x, C3[O2] = o8.y;
      } else if ("GEOGRAPHIC" === e10 && this.dataManager.geographicLookup.has(a8)) {
        g5[O2] = o6.IsGeographic;
        let e11 = null;
        const t18 = i10.attributes[this.dataManager.geographicLookup.get(a8).name], o8 = (_b = this.dataManager.geographicLookup.get(a8)) == null ? void 0 : _b.geometryType;
        switch (o8) {
          case "esriGeometryPoint":
            k4[O2] = t18 == null ? void 0 : t18.x, C3[O2] = t18 == null ? void 0 : t18.y;
            break;
          case "esriGeometryPolygon":
            e11 = t18 == null ? void 0 : t18.centroid, null != (e11 == null ? void 0 : e11.x) && null != (e11 == null ? void 0 : e11.y) ? (k4[O2] = e11.x, C3[O2] = e11.y) : g5[O2] = o6.IsMovable;
            break;
          case "esriGeometryPolyline":
          case "esriGeometryMultipoint":
            e11 = (_c = t18 == null ? void 0 : t18.extent) == null ? void 0 : _c.center, null != (e11 == null ? void 0 : e11.x) && null != (e11 == null ? void 0 : e11.y) ? (k4[O2] = e11.x, C3[O2] = e11.y) : g5[O2] = o6.IsMovable;
            break;
          default:
            g5[O2] = o6.IsMovable;
        }
        (null == k4[O2] || null == C3[O2] || Number.isNaN(k4[O2]) || Number.isNaN(C3[O2])) && (g5[O2] = o6.IsMovable, k4[O2] = 0, C3[O2] = 0);
      } else
        g5[O2] = o6.IsMovable, k4[O2] = 0, C3[O2] = 0;
      d3.set(i10.attributes[b5], O2), I4[O2] = { feature: i10, typeName: a8 }, O2++;
    });
    let Q2 = false;
    n4.forEach((e11) => {
      const t18 = d3.get(e11.feature.attributes[T4]), a8 = d3.get(e11.feature.attributes[D2]);
      void 0 !== t18 && void 0 !== a8 ? (L2[U] = t18, N2[U] = a8, U++) : (Q2 = true, this.linkChartDiagramLookup.set(e11.feature.attributes[T4], null), this.linkChartGeohashLookup.set(e11.feature.attributes[T4], null));
    }), Q2 && s.getLogger(this).warn("A relationship is a member of this layer that has either origin or destination entity nodes that are not members. The diagram geometry will be set to null"), await n3();
    if (!F3(g5, k4, C3, L2, N2))
      throw new s2("knowledge-graph:layout-failed", "Attempting to arrange the records in the specified layout failed");
    for (let a8 = 0; a8 < I4.length; a8++) {
      if (g5[a8] === o6.IsMovable && (k4[a8] = k4[a8] * S3, C3[a8] = C3[a8] * j7), C3[a8] > 84.9999 && (C3[a8] = 84.9999), C3[a8] < -84.9999 && (C3[a8] = -84.9999), k4[a8] > 179.9999 && (k4[a8] = 179.9999), k4[a8] < -179.9999 && (k4[a8] = -179.9999), I4[a8].feature.attributes[M4] = new x(k4[a8], C3[a8]), s16.has(I4[a8].typeName)) {
        const e12 = s16.get(I4[a8].typeName);
        e12 == null ? void 0 : e12.set(I4[a8].feature.attributes[b5], I4[a8].feature);
      } else {
        const e12 = /* @__PURE__ */ new Map();
        e12.set(I4[a8].feature.attributes[b5], I4[a8].feature), s16.set(I4[a8].typeName, e12);
      }
      c12.set(I4[a8].feature.attributes[b5], I4[a8].feature);
      const e11 = rt(I4[a8].feature.attributes[M4]);
      this.linkChartDiagramLookup.set(I4[a8].feature.attributes[b5], I4[a8].feature.attributes[M4] ? e11 : null), this.linkChartGeohashLookup.set(I4[a8].feature.attributes[b5], p4(I4[a8].feature.attributes[M4].y, I4[a8].feature.attributes[M4].x, I3)), I4[a8].feature.attributes[M4].x < P4.xmin && (P4.xmin = I4[a8].feature.attributes[M4].x), I4[a8].feature.attributes[M4].x > P4.xmax && (P4.xmax = I4[a8].feature.attributes[M4].x), I4[a8].feature.attributes[M4].y < P4.ymin && (P4.ymin = I4[a8].feature.attributes[M4].y), I4[a8].feature.attributes[M4].y > P4.ymax && (P4.ymax = I4[a8].feature.attributes[M4].y);
    }
    return this.linkChartExtent.xmin = P4.xmin, this.linkChartExtent.xmax = P4.xmax, this.linkChartExtent.ymin = P4.ymin, this.linkChartExtent.ymax = P4.ymax, n4.forEach((e11) => {
      var _a, _b;
      const t18 = (_a = I4[d3.get(e11.feature.attributes[T4])]) == null ? void 0 : _a.feature.attributes[M4], a8 = (_b = I4[d3.get(e11.feature.attributes[D2])]) == null ? void 0 : _b.feature.attributes[M4];
      if (!t18 || !a8)
        return;
      const i10 = new m({ paths: [[t18.x, t18.y], [a8.x, a8.y]] });
      if (e11.feature.attributes[M4] = i10, h.has(e11.typeName)) {
        const t19 = h.get(e11.typeName);
        t19 == null ? void 0 : t19.set(e11.feature.attributes[b5], e11.feature);
      } else {
        const t19 = /* @__PURE__ */ new Map();
        t19.set(e11.feature.attributes[b5], e11.feature), h.set(e11.typeName, t19);
      }
      c12.set(e11.feature.attributes[b5], e11.feature);
      const o8 = rt(e11.feature.attributes[M4]);
      this.linkChartDiagramLookup.set(e11.feature.attributes[b5], e11.feature.attributes[M4] ? o8 : null), this.linkChartGeohashLookup.set(e11.feature.attributes[b5], "");
    }), this._currentLinkChartConfig = { layoutMode: e10, xScaleFactor: S3, yScaleFactor: j7 }, { nodes: s16, links: h, idMap: c12 };
  }
  async applyNewLinkChartLayout(e10 = "RADIAL_TREE", t17) {
    const a8 = [];
    await this.calculateLinkChartLayout(e10, t17), this.layers.forEach((e11) => {
      a8.push(e11.refreshCachedQueryEngine());
    }), await Promise.all(a8), this._refreshNamedTypes();
  }
  getCurrentNodeLocations() {
    var _a, _b;
    const e10 = /* @__PURE__ */ new Map();
    return (_b = (_a = this.dataManager.inclusionModeDefinition) == null ? void 0 : _a.namedTypeDefinitions) == null ? void 0 : _b.forEach((t17) => {
      var _a2;
      (_a2 = t17 == null ? void 0 : t17.members) == null ? void 0 : _a2.forEach((t18) => {
        const a8 = t18.linkChartLocation;
        let i10;
        const o7 = t18.id;
        a8 && (i10 = "x" in a8 ? { x: a8.x, y: a8.y } : { x: a8.coords[0], y: a8.coords[1] }, e10.set(o7, new x({ x: i10.x, y: i10.y })));
      });
    }), e10;
  }
  async synchronizeInclusionListWithCache() {
    return new Promise((e10) => {
      var _a;
      (_a = this.dataManager.inclusionModeDefinition) == null ? void 0 : _a.namedTypeDefinitions.forEach((e11, t17) => {
        if (e11.useAllData = false, e11.members && e11.members.size > 0) {
          if (!this.dataManager.sublayerCaches.get(t17))
            return;
          const a8 = new Set(Array.from(this.dataManager.sublayerCaches.get(t17).keys()));
          Array.from(e11.members.keys()).filter((e12) => !a8.has(e12)).forEach((t18) => {
            var _a2;
            (_a2 = e11.members) == null ? void 0 : _a2.delete(t18);
          });
        }
      }), e10();
    });
  }
  async refreshLinkChartCache(e10) {
    await this.dataManager.refreshCacheContent(e10);
    const t17 = [];
    this.layers.forEach((e11) => {
      t17.push(e11.refreshCachedQueryEngine());
    }), await Promise.all(t17), this._refreshNamedTypes();
  }
  async _handleNewRecords(e10) {
    const t17 = [];
    this.dataManager.addToLayer(e10);
    for (const a8 of e10)
      this.sublayerIdsCache.has(a8.typeName) || (this.sublayerIdsCache.set(a8.typeName, /* @__PURE__ */ new Set()), t17.push(a8.typeName)), this.sublayerIdsCache.get(a8.typeName).add(a8.id);
    for (const a8 of t17)
      if (this._graphTypeLookup.has(a8)) {
        const e11 = this._graphTypeLookup.get(a8), t18 = "endPoints" in e11 ? "relationship" : "entity", i10 = new C2({ objectType: e11, parentCompositeLayer: this, graphType: t18, title: a8 });
        "entity" === t18 ? this.dataManager.entityTypeNames.add(a8) : this.dataManager.relationshipTypeNames.add(a8), i10.geometryType ? this.layers.push(i10) : this.tables.push(i10), this.dataManager.sublayerCaches.set(a8, /* @__PURE__ */ new Map());
      }
    await this.dataManager.refreshCacheContent(e10.map((e11) => e11.id)), await this.applyNewLinkChartLayout(this._currentLinkChartConfig.layoutMode, { xScaleFactor: this._currentLinkChartConfig.xScaleFactor, yScaleFactor: this._currentLinkChartConfig.xScaleFactor });
  }
  async _initializeDiagram() {
    var _a, _b;
    this.defaultLinkChartConfig ? this.defaultLinkChartConfig.doNotRecalculateLayout ? ((_b = (_a = this.dataManager.inclusionModeDefinition) == null ? void 0 : _a.namedTypeDefinitions) == null ? void 0 : _b.forEach((e10) => {
      var _a2;
      (_a2 = e10 == null ? void 0 : e10.members) == null ? void 0 : _a2.forEach((e11) => {
        const t17 = e11.linkChartLocation;
        let a8;
        const i10 = e11.id;
        if (!t17)
          return;
        a8 = "x" in t17 ? { x: t17.x, y: t17.y } : { x: t17.coords[0], y: t17.coords[1] };
        const o7 = rt(a8);
        this.linkChartDiagramLookup.set(i10, o7), this.linkChartGeohashLookup.set(i10, p4(a8.x, a8.y, I3)), this.linkChartExtent.xmin > a8.x && (this.linkChartExtent.xmin = a8.x), this.linkChartExtent.xmax < a8.x && (this.linkChartExtent.xmax = a8.x), this.linkChartExtent.ymin > a8.y && (this.linkChartExtent.ymin = a8.y), this.linkChartExtent.ymax < a8.y && (this.linkChartExtent.ymax = a8.y);
      });
    }), this.memberRelationshipTypes.forEach((e10) => {
      var _a2;
      e10.name && ((_a2 = this.dataManager.sublayerCaches.get(e10.name)) == null ? void 0 : _a2.forEach((e11) => {
        const t17 = this.linkChartDiagramLookup.get(e11.attributes[T4]), a8 = this.linkChartDiagramLookup.get(e11.attributes[D2]);
        if (t17 && a8) {
          const i10 = rt(new m({ paths: [[t17.coords[0], t17.coords[1]], [a8.coords[0], a8.coords[1]]] }));
          this.linkChartDiagramLookup.set(e11.attributes[b5], i10);
        } else
          this.linkChartDiagramLookup.set(e11.attributes[b5], null);
        this.linkChartGeohashLookup.set(e11.attributes[b5], "");
      }));
    })) : await this.calculateLinkChartLayout(this.defaultLinkChartConfig.layoutMode, { xScaleFactor: this.defaultLinkChartConfig.xScaleFactor, yScaleFactor: this.defaultLinkChartConfig.yScaleFactor, lockedNodeLocations: this.getCurrentNodeLocations() }) : await this.calculateLinkChartLayout("RADIAL_TREE", { lockedNodeLocations: this.getCurrentNodeLocations() });
  }
  _refreshNamedTypes() {
    for (const e10 of this.layers)
      e10.emit("refresh", { dataChanged: true });
    for (const e10 of this.tables)
      e10.emit("refresh", { dataChanged: true });
  }
};
e([y()], j6.prototype, "dataPreloadedInLocalCache", void 0), e([y()], j6.prototype, "defaultLinkChartConfig", void 0), e([y()], j6.prototype, "dataManager", void 0), e([y()], j6.prototype, "knowledgeGraph", void 0), e([y()], j6.prototype, "layers", void 0), e([y()], j6.prototype, "linkChartDiagramLookup", void 0), e([y()], j6.prototype, "linkChartExtent", void 0), e([y()], j6.prototype, "linkChartGeohashLookup", void 0), e([y()], j6.prototype, "memberEntityTypes", void 0), e([y()], j6.prototype, "memberRelationshipTypes", void 0), e([y()], j6.prototype, "sublayerIdsCache", void 0), e([y()], j6.prototype, "tables", void 0), e([y({ json: { read: false } })], j6.prototype, "type", void 0), j6 = e([c("esri.layers.LinkChartLayer")], j6);
var P3 = j6;
export {
  P3 as default
};
//# sourceMappingURL=LinkChartLayer-CTMXGN7D.js.map
