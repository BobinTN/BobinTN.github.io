import {
  n as n5
} from "./chunk-63MRXB4A.js";
import {
  n as n4
} from "./chunk-PCTEA6NC.js";
import {
  i as i4,
  o as o2
} from "./chunk-BXZIEADJ.js";
import {
  n as n3,
  p as p2
} from "./chunk-JTZOXJGU.js";
import {
  R
} from "./chunk-LOGPPZUD.js";
import {
  c as c3
} from "./chunk-FWR4JURK.js";
import {
  y as y2
} from "./chunk-HITXLR5N.js";
import {
  c as c2
} from "./chunk-WOGT6UK2.js";
import {
  f as f3,
  i as i2,
  s as s2
} from "./chunk-EUGXS5RE.js";
import {
  b
} from "./chunk-Z6KIMOUA.js";
import {
  n as n2
} from "./chunk-SZAJDZCO.js";
import {
  i as i3
} from "./chunk-M7R7REMB.js";
import {
  n
} from "./chunk-ZZYUEH57.js";
import {
  i
} from "./chunk-VTWXDFFD.js";
import {
  p,
  v as v3
} from "./chunk-IPCIO3PX.js";
import {
  v as v2
} from "./chunk-TBSVVR6M.js";
import {
  V
} from "./chunk-JUZJCTW2.js";
import {
  M
} from "./chunk-Y5D433JZ.js";
import {
  o
} from "./chunk-WURET5CW.js";
import {
  f as f2,
  r as r2
} from "./chunk-QWPLZ3QH.js";
import {
  T,
  z
} from "./chunk-HLGIRLYQ.js";
import {
  j
} from "./chunk-R5DM4YAB.js";
import {
  f
} from "./chunk-NSRXJNTS.js";
import {
  g,
  y2 as y
} from "./chunk-LXXF7K7W.js";
import {
  c,
  r2 as r,
  v
} from "./chunk-SBW6NNVI.js";
import {
  e
} from "./chunk-62CXLI6S.js";
import {
  e as e2,
  k as k2
} from "./chunk-RFPH3ZTZ.js";
import {
  s3 as s
} from "./chunk-WJ3HJKNC.js";
import {
  has,
  k
} from "./chunk-4V6374PV.js";

// node_modules/@arcgis/core/renderers/support/clickToleranceUtils.js
function t(t2, e4) {
  return e4 ? "xoffset" in e4 && e4.xoffset ? Math.max(t2, Math.abs(e4.xoffset)) : "yoffset" in e4 && e4.yoffset ? Math.max(t2, Math.abs(e4.yoffset || 0)) : t2 : t2;
}
function e3(t2) {
  let e4 = 0, n7 = 0;
  for (let r5 = 0; r5 < t2.length; r5++) {
    const o5 = t2[r5].size;
    "number" == typeof o5 && (e4 += o5, n7++);
  }
  return e4 / n7;
}
function n6(t2, n7) {
  var _a;
  return "number" == typeof t2 ? t2 : ((_a = t2 == null ? void 0 : t2.stops) == null ? void 0 : _a.length) ? e3(t2.stops) : n7;
}
function r3(t2, e4) {
  if (!e4)
    return t2;
  const r5 = e4.filter((t3) => "size" === t3.type).map((e5) => {
    const { maxSize: r6, minSize: o6 } = e5;
    return (n6(r6, t2) + n6(o6, t2)) / 2;
  });
  let o5 = 0;
  const s3 = r5.length;
  if (0 === s3)
    return t2;
  for (let n7 = 0; n7 < s3; n7++)
    o5 += r5[n7];
  const f5 = Math.floor(o5 / s3);
  return Math.max(f5, t2);
}
function o3(e4) {
  var _a, _b;
  const n7 = e4 == null ? void 0 : e4.renderer, o5 = (_a = e4 == null ? void 0 : e4.event) == null ? void 0 : _a.pointerType, s3 = "touch" === o5 ? 9 : 6;
  if (!n7)
    return s3;
  const f5 = "visualVariables" in n7 ? r3(s3, n7.visualVariables) : s3;
  if ("simple" === n7.type)
    return t(f5, n7.symbol);
  if ("unique-value" === n7.type) {
    let e5 = f5;
    return (_b = n7.uniqueValueInfos) == null ? void 0 : _b.forEach((n8) => {
      e5 = t(e5, n8.symbol);
    }), e5;
  }
  if ("class-breaks" === n7.type) {
    let e5 = f5;
    return n7.classBreakInfos.forEach((n8) => {
      e5 = t(e5, n8.symbol);
    }), e5;
  }
  return "dot-density" === n7.type || n7.type, f5;
}

// node_modules/@arcgis/core/rest/operations/identify.js
function l(e4, t2) {
  const { dpi: i5, gdbVersion: s3, geometry: l2, geometryPrecision: a5, height: p4, layerOption: f5, mapExtent: m4, maxAllowableOffset: y3, returnFieldName: u3, returnGeometry: c4, returnUnformattedValues: d, returnZ: g2, spatialReference: x, timeExtent: b2, tolerance: h, width: E } = e4.toJSON(), { dynamicLayers: O, layerDefs: S2, layerIds: j2 } = o4(e4), N = null != (t2 == null ? void 0 : t2.geometry) ? t2.geometry : null, $ = { geometryPrecision: a5, maxAllowableOffset: y3, returnFieldName: u3, returnGeometry: c4, returnUnformattedValues: d, returnZ: g2, tolerance: h }, I = N && N.toJSON() || l2;
  $.imageDisplay = `${E},${p4},${i5}`, s3 && ($.gdbVersion = s3), I && (delete I.spatialReference, $.geometry = JSON.stringify(I), $.geometryType = v3(I));
  const R3 = x ?? (I == null ? void 0 : I.spatialReference) ?? (m4 == null ? void 0 : m4.spatialReference);
  if (R3 && ($.sr = T(R3)), $.time = b2 ? [b2.start, b2.end].join(",") : null, m4) {
    const { xmin: e5, ymin: r5, xmax: t3, ymax: n7 } = m4;
    $.mapExtent = `${e5},${r5},${t3},${n7}`;
  }
  return S2 && ($.layerDefs = S2), O && !S2 && ($.dynamicLayers = O), $.layers = "popup" === f5 ? "visible" : f5, j2 && !O && ($.layers += `:${j2.join(",")}`), $;
}
function o4(e4) {
  var _a, _b;
  const { mapExtent: r5, floors: n7, width: l2, sublayers: o5, layerIds: p4, layerOption: f5, gdbVersion: m4 } = e4, y3 = (_b = (_a = o5 == null ? void 0 : o5.find((e5) => null != e5.layer)) == null ? void 0 : _a.layer) == null ? void 0 : _b.serviceSublayers, u3 = "popup" === f5, c4 = {}, d = i4({ extent: r5, width: l2, spatialReference: r5 == null ? void 0 : r5.spatialReference }), g2 = [], x = (e5) => {
    const r6 = 0 === d, t2 = 0 === e5.minScale || d <= e5.minScale, n8 = 0 === e5.maxScale || d >= e5.maxScale;
    if (e5.visible && (r6 || t2 && n8))
      if (e5.sublayers)
        e5.sublayers.forEach(x);
      else {
        if (false === (p4 == null ? void 0 : p4.includes(e5.id)) || u3 && (!e5.popupTemplate || !e5.popupEnabled))
          return;
        g2.unshift(e5);
      }
  };
  if (o5 == null ? void 0 : o5.forEach(x), o5 && !g2.length)
    c4.layerIds = [];
  else {
    const e5 = n4(g2, y3, m4), r6 = g2.map((e6) => {
      const r7 = n5(n7, e6);
      return e6.toExportImageJSON(r7);
    });
    if (e5)
      c4.dynamicLayers = JSON.stringify(r6);
    else {
      if (o5) {
        let e7 = g2.map(({ id: e8 }) => e8);
        p4 && (e7 = e7.filter((e8) => p4.includes(e8))), c4.layerIds = e7;
      } else
        (p4 == null ? void 0 : p4.length) && (c4.layerIds = p4);
      const e6 = a(n7, g2);
      if (null != e6 && e6.length) {
        const r7 = {};
        for (const t2 of e6)
          t2.definitionExpression && (r7[t2.id] = t2.definitionExpression);
        Object.keys(r7).length && (c4.layerDefs = JSON.stringify(r7));
      }
    }
  }
  return c4;
}
function a(r5, t2) {
  const n7 = !!(r5 == null ? void 0 : r5.length), s3 = t2.filter((e4) => null != e4.definitionExpression || n7 && null != e4.floorInfo);
  return s3.length ? s3.map((t3) => {
    const n8 = n5(r5, t3), s4 = n2(n8, t3.definitionExpression);
    return { id: t3.id, definitionExpression: s4 ?? void 0 };
  }) : null;
}

// node_modules/@arcgis/core/rest/support/IdentifyParameters.js
var m;
var a2 = m = class extends f {
  static from(t2) {
    return v(m, t2);
  }
  constructor(t2) {
    super(t2), this.dpi = 96, this.floors = null, this.gdbVersion = null, this.geometry = null, this.geometryPrecision = null, this.height = 400, this.layerIds = null, this.layerOption = "top", this.mapExtent = null, this.maxAllowableOffset = null, this.returnFieldName = true, this.returnGeometry = false, this.returnM = false, this.returnUnformattedValues = true, this.returnZ = false, this.spatialReference = null, this.sublayers = null, this.timeExtent = null, this.tolerance = null, this.width = 400;
  }
};
e([y({ type: Number, json: { write: true } })], a2.prototype, "dpi", void 0), e([y()], a2.prototype, "floors", void 0), e([y({ type: String, json: { write: true } })], a2.prototype, "gdbVersion", void 0), e([y({ types: n, json: { read: p, write: true } })], a2.prototype, "geometry", void 0), e([y({ type: Number, json: { write: true } })], a2.prototype, "geometryPrecision", void 0), e([y({ type: Number, json: { write: true } })], a2.prototype, "height", void 0), e([y({ type: [Number], json: { write: true } })], a2.prototype, "layerIds", void 0), e([y({ type: ["top", "visible", "all", "popup"], json: { write: true } })], a2.prototype, "layerOption", void 0), e([y({ type: M, json: { write: true } })], a2.prototype, "mapExtent", void 0), e([y({ type: Number, json: { write: true } })], a2.prototype, "maxAllowableOffset", void 0), e([y({ type: Boolean, json: { write: true } })], a2.prototype, "returnFieldName", void 0), e([y({ type: Boolean, json: { write: true } })], a2.prototype, "returnGeometry", void 0), e([y({ type: Boolean, json: { write: true } })], a2.prototype, "returnM", void 0), e([y({ type: Boolean, json: { write: true } })], a2.prototype, "returnUnformattedValues", void 0), e([y({ type: Boolean, json: { write: true } })], a2.prototype, "returnZ", void 0), e([y({ type: f2, json: { write: true } })], a2.prototype, "spatialReference", void 0), e([y()], a2.prototype, "sublayers", void 0), e([y({ type: c2, json: { write: true } })], a2.prototype, "timeExtent", void 0), e([y({ type: Number, json: { write: true } })], a2.prototype, "tolerance", void 0), e([y({ type: Number, json: { write: true } })], a2.prototype, "width", void 0), a2 = m = e([c("esri.rest.support.IdentifyParameters")], a2);
var u = a2;

// node_modules/@arcgis/core/rest/support/IdentifyResult.js
var u2 = class extends f {
  constructor(r5) {
    super(r5), this.displayFieldName = null, this.feature = null, this.layerId = null, this.layerName = null;
  }
  readFeature(r5, t2) {
    return c3.fromJSON({ attributes: { ...t2.attributes }, geometry: { ...t2.geometry } });
  }
  writeFeature(r5, e4) {
    if (!r5)
      return;
    const { attributes: t2, geometry: o5 } = r5;
    t2 && (e4.attributes = { ...t2 }), null != o5 && (e4.geometry = o5.toJSON(), e4.geometryType = i.toJSON(o5.type));
  }
};
e([y({ type: String, json: { write: true } })], u2.prototype, "displayFieldName", void 0), e([y({ type: c3 })], u2.prototype, "feature", void 0), e([o("feature", ["attributes", "geometry"])], u2.prototype, "readFeature", null), e([r2("feature")], u2.prototype, "writeFeature", null), e([y({ type: Number, json: { write: true } })], u2.prototype, "layerId", void 0), e([y({ type: String, json: { write: true } })], u2.prototype, "layerName", void 0), u2 = e([c("esri.rest.support.IdentifyResult")], u2);
var m2 = u2;

// node_modules/@arcgis/core/rest/identify.js
async function f4(u3, i5, f5) {
  const c4 = (i5 = a3(i5)).geometry ? [i5.geometry] : [], l2 = f3(u3);
  return l2.path += "/identify", R(c4).then((e4) => {
    const t2 = l(i5, { geometry: e4 == null ? void 0 : e4[0] }), u4 = s2({ ...l2.query, f: "json", ...t2 }), a5 = i2(u4, f5);
    return j(l2.path, a5).then(m3).then((r5) => p3(r5, i5.sublayers));
  });
}
function m3(r5) {
  const e4 = r5.data;
  return e4.results = e4.results || [], e4.exceededTransferLimit = Boolean(e4.exceededTransferLimit), e4.results = e4.results.map((r6) => m2.fromJSON(r6)), e4;
}
function a3(r5) {
  return r5 = u.from(r5);
}
function p3(r5, e4) {
  if (!(e4 == null ? void 0 : e4.length))
    return r5;
  const t2 = /* @__PURE__ */ new Map();
  function o5(r6) {
    t2.set(r6.id, r6), r6.sublayers && r6.sublayers.forEach(o5);
  }
  e4.forEach(o5);
  for (const s3 of r5.results)
    s3.feature.sourceLayer = t2.get(s3.layerId);
  return r5;
}

// node_modules/@arcgis/core/views/layers/support/MapServiceLayerViewHelper.js
var P = null;
function S(e4, t2) {
  return "tile" === t2.type || "map-image" === t2.type;
}
var G = class extends g {
  constructor(e4) {
    super(e4), this._featuresResolutions = /* @__PURE__ */ new WeakMap(), this.highlightGraphics = null, this.highlightGraphicUpdated = null, this.updateHighlightedFeatures = k2(async (e5) => {
      this.destroyed || this.updatingHandles.addPromise(this._updateHighlightedFeaturesGeometries(e5).catch(() => {
      }));
    });
  }
  initialize() {
    const e4 = (e5) => {
      this.updatingHandles.addPromise(this._updateHighlightedFeaturesSymbols(e5).catch(() => {
      })), this.updateHighlightedFeatures(this._highlightGeometriesResolution);
    };
    this.addHandles([v2(() => this.highlightGraphics, "change", (t2) => e4(t2.added), { onListenerAdd: (t2) => e4(t2) })]);
  }
  async fetchPopupFeatures(e4, t2) {
    var _a, _b;
    const { layerView: { layer: r5, view: { scale: s3 } } } = this;
    if (!e4)
      throw new s("fetchPopupFeatures:invalid-area", "Nothing to fetch without area", { layer: r5 });
    const i5 = U(r5.sublayers, s3, t2);
    if (!i5.length)
      return [];
    const a5 = await R2(r5, i5);
    if (!((((_b = (_a = r5.capabilities) == null ? void 0 : _a.operations) == null ? void 0 : _b.supportsIdentify) ?? true) && r5.version >= 10.5) && !a5)
      throw new s("fetchPopupFeatures:not-supported", "query operation is disabled for this service", { layer: r5 });
    return a5 ? this._fetchPopupFeaturesUsingQueries(e4, i5, t2) : this._fetchPopupFeaturesUsingIdentify(e4, i5, t2);
  }
  clearHighlights() {
    var _a;
    (_a = this.highlightGraphics) == null ? void 0 : _a.removeAll();
  }
  highlight(e4) {
    const r5 = this.highlightGraphics;
    if (!r5)
      return e2();
    let o5 = null;
    if (e4 instanceof c3 ? o5 = [e4] : V.isCollection(e4) && e4.length > 0 ? o5 = e4.toArray() : Array.isArray(e4) && e4.length > 0 && (o5 = e4), o5 = o5 == null ? void 0 : o5.filter(k), !(o5 == null ? void 0 : o5.length))
      return e2();
    for (const t2 of o5) {
      const e5 = t2.sourceLayer;
      null != e5 && "geometryType" in e5 && "point" === e5.geometryType && (t2.visible = false);
    }
    return r5.addMany(o5), e2(() => r5.removeMany(o5 ?? []));
  }
  async _updateHighlightedFeaturesSymbols(e4) {
    const { layerView: { view: t2 }, highlightGraphics: r5, highlightGraphicUpdated: s3 } = this;
    if (r5 && s3)
      for (const i5 of e4) {
        const e5 = i5.sourceLayer && "renderer" in i5.sourceLayer && i5.sourceLayer.renderer;
        i5.sourceLayer && "geometryType" in i5.sourceLayer && "point" === i5.sourceLayer.geometryType && e5 && "getSymbolAsync" in e5 && e5.getSymbolAsync(i5).then(async (o5) => {
          var _a;
          o5 || (o5 = new y2());
          let a5 = null;
          const n7 = "visualVariables" in e5 ? (_a = e5.visualVariables) == null ? void 0 : _a.find((e6) => "size" === e6.type) : void 0;
          n7 && (P || (P = (await import("./visualVariableUtils-CUWY3LAY.js")).getSize), a5 = P(n7, i5, { view: t2.type, scale: t2.scale, shape: "simple-marker" === o5.type ? o5.style : null })), a5 || (a5 = "width" in o5 && "height" in o5 && null != o5.width && null != o5.height ? Math.max(o5.width, o5.height) : "size" in o5 ? o5.size : 16), r5.includes(i5) && (i5.symbol = new y2({ style: "square", size: a5, xoffset: "xoffset" in o5 ? o5.xoffset : 0, yoffset: "yoffset" in o5 ? o5.yoffset : 0 }), s3(i5, "symbol"), i5.visible = true);
        });
      }
  }
  async _updateHighlightedFeaturesGeometries(e4) {
    const { layerView: { layer: t2, view: r5 }, highlightGraphics: s3, highlightGraphicUpdated: i5 } = this;
    if (this._highlightGeometriesResolution = e4, !i5 || !(s3 == null ? void 0 : s3.length) || !t2.capabilities.operations.supportsQuery)
      return;
    const o5 = this._getTargetResolution(e4), a5 = /* @__PURE__ */ new Map();
    for (const c4 of s3)
      if (!this._featuresResolutions.has(c4) || this._featuresResolutions.get(c4) > o5) {
        const e5 = c4.sourceLayer;
        r(a5, e5, () => /* @__PURE__ */ new Map()).set(c4.getObjectId(), c4);
      }
    const l2 = Array.from(a5, ([e5, t3]) => {
      const s4 = e5.createQuery();
      return s4.objectIds = [...t3.keys()], s4.outFields = [e5.objectIdField], s4.returnGeometry = true, s4.maxAllowableOffset = o5, s4.outSpatialReference = r5.spatialReference, e5.queryFeatures(s4);
    }), p4 = await Promise.all(l2);
    if (!this.destroyed)
      for (const { features: n7 } of p4)
        for (const e5 of n7) {
          const t3 = e5.sourceLayer, r6 = a5.get(t3).get(e5.getObjectId());
          r6 && s3.includes(r6) && (r6.geometry = e5.geometry, i5(r6, "geometry"), this._featuresResolutions.set(r6, o5));
        }
  }
  _getTargetResolution(e4) {
    const t2 = e4 * z(this.layerView.view.spatialReference), r5 = t2 / 16;
    return r5 <= 10 ? 0 : e4 / t2 * r5;
  }
  async _fetchPopupFeaturesUsingIdentify(e4, t2, r5) {
    const s3 = await this._createIdentifyParameters(e4, t2, r5);
    if (null == s3)
      return [];
    const { results: i5 } = await f4(this.layerView.layer.parsedUrl, s3);
    return i5.map((e5) => e5.feature);
  }
  async _createIdentifyParameters(e4, t2, r5) {
    const { floors: s3, layer: i5, timeExtent: o5, view: { spatialReference: a5, scale: n7 } } = this.layerView, l2 = null != r5 ? r5.event : null;
    if (!t2.length)
      return null;
    await Promise.all(t2.map(({ sublayer: e5 }) => e5.load().catch(() => {
    })));
    const p4 = Math.min(has("mapservice-popup-identify-max-tolerance"), i5.allSublayers.reduce((e5, t3) => t3.renderer ? o3({ renderer: t3.renderer, event: l2 }) : e5, 2)), c4 = this.createFetchPopupFeaturesQueryGeometry(e4, p4), u3 = o2(n7, a5), h = Math.round(c4.width / u3), f5 = new M({ xmin: c4.center.x - u3 * h, ymin: c4.center.y - u3 * h, xmax: c4.center.x + u3 * h, ymax: c4.center.y + u3 * h, spatialReference: c4.spatialReference });
    return new u({ floors: s3, gdbVersion: "gdbVersion" in i5 ? i5.gdbVersion : void 0, geometry: e4, height: h, layerOption: "popup", mapExtent: f5, returnGeometry: true, spatialReference: a5, sublayers: i5.sublayers, timeExtent: o5, tolerance: p4, width: h });
  }
  async _fetchPopupFeaturesUsingQueries(e4, t2, r5) {
    const { layerView: { floors: i5, timeExtent: o5 } } = this, a5 = null != r5 ? r5.event : null, n7 = t2.map(async ({ sublayer: t3, popupTemplate: r6 }) => {
      var _a;
      if (await t3.load().catch(() => {
      }), t3.capabilities && !t3.capabilities.operations.supportsQuery)
        return [];
      const s3 = t3.createQuery(), n8 = o3({ renderer: t3.renderer, event: a5 }), l2 = this.createFetchPopupFeaturesQueryGeometry(e4, n8), p4 = /* @__PURE__ */ new Set(), [c4] = await Promise.all([n3(t3, r6), (_a = t3.renderer) == null ? void 0 : _a.collectRequiredFields(p4, t3.fieldsIndex)]);
      b(p4, t3.fieldsIndex, c4);
      const u3 = Array.from(p4).sort();
      if (s3.geometry = l2, s3.outFields = u3, s3.timeExtent = o5, i5) {
        const e5 = i5.clone(), r7 = n5(e5, t3);
        null != r7 && (s3.where = s3.where ? `(${s3.where}) AND (${r7})` : r7);
      }
      const h = this._getTargetResolution(l2.width / n8), y3 = await _(r6), m4 = "point" === t3.geometryType || y3 && y3.arcadeUtils.hasGeometryOperations(r6);
      m4 || (s3.maxAllowableOffset = h);
      let { features: w } = await t3.queryFeatures(s3);
      const b2 = m4 ? 0 : h;
      w = await A(t3, w);
      for (const e5 of w)
        this._featuresResolutions.set(e5, b2);
      return w;
    });
    return (await Promise.allSettled(n7)).reduce((e5, t3) => "fulfilled" === t3.status ? [...e5, ...t3.value] : e5, []).filter(k);
  }
};
function U(e4, t2, r5) {
  const s3 = [];
  if (!e4)
    return s3;
  const i5 = (e5) => {
    const o5 = 0 === e5.minScale || t2 <= e5.minScale, a5 = 0 === e5.maxScale || t2 >= e5.maxScale;
    if (e5.visible && o5 && a5) {
      if (e5.sublayers)
        e5.sublayers.forEach(i5);
      else if (e5.popupEnabled) {
        const t3 = p2(e5, { ...r5, defaultPopupTemplateEnabled: false });
        null != t3 && s3.unshift({ sublayer: e5, popupTemplate: t3 });
      }
    }
  };
  return e4.map(i5), s3;
}
function _(e4) {
  var _a;
  return ((_a = e4.expressionInfos) == null ? void 0 : _a.length) || Array.isArray(e4.content) && e4.content.some((e5) => "expression" === e5.type) ? i3() : Promise.resolve();
}
async function R2(e4, t2) {
  var _a, _b;
  if ((_b = (_a = e4.capabilities) == null ? void 0 : _a.operations) == null ? void 0 : _b.supportsQuery)
    return true;
  try {
    return await Promise.any(t2.map(({ sublayer: e5 }) => e5.load().then(() => e5.capabilities.operations.supportsQuery)));
  } catch {
    return false;
  }
}
async function A(e4, t2) {
  const r5 = e4.renderer;
  return r5 && "defaultSymbol" in r5 && !r5.defaultSymbol && (t2 = r5.valueExpression ? await Promise.all(t2.map((e5) => r5.getSymbolAsync(e5).then((t3) => t3 ? e5 : null))).then((e5) => e5.filter((e6) => null != e6)) : t2.filter((e5) => null != r5.getSymbol(e5))), t2;
}
e([y({ constructOnly: true })], G.prototype, "createFetchPopupFeaturesQueryGeometry", void 0), e([y({ constructOnly: true })], G.prototype, "layerView", void 0), e([y({ constructOnly: true })], G.prototype, "highlightGraphics", void 0), e([y({ constructOnly: true })], G.prototype, "highlightGraphicUpdated", void 0), e([y({ constructOnly: true })], G.prototype, "updatingHandles", void 0), G = e([c("esri.views.layers.support.MapService")], G);

// node_modules/@arcgis/core/views/support/drapedUtils.js
function r4(t2, r5, i5, a5 = new M()) {
  let o5 = 0;
  if ("2d" === i5.type)
    o5 = r5 * (i5.resolution ?? 0);
  else if ("3d" === i5.type) {
    const n7 = i5.overlayPixelSizeInMapUnits(t2), a6 = i5.basemapSpatialReference;
    o5 = null == a6 || a6.equals(i5.spatialReference) ? r5 * n7 : z(a6) / z(i5.spatialReference);
  }
  const s3 = t2.x - o5, l2 = t2.y - o5, m4 = t2.x + o5, p4 = t2.y + o5, { spatialReference: c4 } = i5;
  return a5.xmin = Math.min(s3, m4), a5.ymin = Math.min(l2, p4), a5.xmax = Math.max(s3, m4), a5.ymax = Math.max(l2, p4), a5.spatialReference = c4, a5;
}
var a4 = new M();

export {
  S,
  G,
  r4 as r
};
//# sourceMappingURL=chunk-DU3E2J77.js.map
