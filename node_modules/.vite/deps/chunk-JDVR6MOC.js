import {
  a as a3,
  c as c2
} from "./chunk-DYYHVSPV.js";
import {
  p as p2,
  t
} from "./chunk-UIN5EOGE.js";
import {
  C as C2
} from "./chunk-3ZWLSDVT.js";
import {
  m,
  o as o5
} from "./chunk-F64GI7MS.js";
import {
  a as a2,
  m as m2,
  y as y2
} from "./chunk-VIOPOI6P.js";
import {
  D as D2
} from "./chunk-DOALI2C2.js";
import {
  p
} from "./chunk-UHNBENSV.js";
import {
  k
} from "./chunk-BELGAUAK.js";
import {
  D
} from "./chunk-HITXLR5N.js";
import {
  o as o3
} from "./chunk-EIY2DYTV.js";
import {
  o as o4
} from "./chunk-V2RPSCV3.js";
import {
  C,
  d
} from "./chunk-TBSVVR6M.js";
import {
  o as o2
} from "./chunk-WURET5CW.js";
import {
  r
} from "./chunk-QWPLZ3QH.js";
import {
  f
} from "./chunk-NSRXJNTS.js";
import {
  y2 as y
} from "./chunk-LXXF7K7W.js";
import {
  c
} from "./chunk-SBW6NNVI.js";
import {
  e
} from "./chunk-62CXLI6S.js";
import {
  a,
  o
} from "./chunk-WJ3HJKNC.js";

// node_modules/@arcgis/core/layers/support/FeatureReductionBinning.js
var b;
var g = "esri.layers.support.FeatureReductionBinning";
var h = b = class extends t {
  constructor(e2) {
    super(e2), this.type = "binning", this.binType = "geohash", this.fixedBinLevel = 3, this.labelingInfo = null, this.labelsVisible = true, this.maxScale = 0, this.popupEnabled = true, this.popupTemplate = null, this.fields = [], this.renderer = null;
  }
  writeFields(e2, r2, o7) {
    const t2 = e2.filter((e3) => "avg_angle" !== e3.statisticType).map((e3) => e3.toJSON());
    o(o7, t2, r2);
  }
  readRenderer(e2, r2, t2) {
    var _a;
    const s = (_a = r2.drawingInfo) == null ? void 0 : _a.renderer;
    return s ? o5(s, r2, t2) ?? void 0 : D2(r2, t2);
  }
  clone() {
    return new b({ fields: a(this.fields), fixedBinLevel: this.fixedBinLevel, labelingInfo: a(this.labelingInfo), labelsVisible: this.labelsVisible, maxScale: this.maxScale, popupEnabled: this.popupEnabled, popupTemplate: a(this.popupTemplate), renderer: a(this.renderer) });
  }
};
e([o4({ binning: "binning" })], h.prototype, "type", void 0), e([o4({ geohash: "geohash" })], h.prototype, "binType", void 0), e([y({ type: Number, range: { min: 1, max: 9 }, json: { write: true } })], h.prototype, "fixedBinLevel", void 0), e([y({ type: [C2], json: { read: { source: "drawingInfo.labelingInfo" }, write: { target: "drawingInfo.labelingInfo" } } })], h.prototype, "labelingInfo", void 0), e([y(m2)], h.prototype, "labelsVisible", void 0), e([y({ type: Number, json: { default: 0, name: "visibilityInfo.maxScale" } })], h.prototype, "maxScale", void 0), e([y(y2)], h.prototype, "popupEnabled", void 0), e([y({ type: k, json: { name: "popupInfo", write: true } })], h.prototype, "popupTemplate", void 0), e([y({ type: [a3], json: { write: true } })], h.prototype, "fields", void 0), e([r("fields")], h.prototype, "writeFields", null), e([y({ types: m, json: { write: { target: "drawingInfo.renderer" } } })], h.prototype, "renderer", void 0), e([o2("renderer", ["drawingInfo.renderer"])], h.prototype, "readRenderer", null), h = b = e([c(g)], h);
var v = h;

// node_modules/@arcgis/core/layers/support/FeatureReductionCluster.js
var g2;
var S = "esri.layers.support.FeatureReductionCluster";
function w(e2) {
  var _a;
  return "simple" === e2.type && !((_a = e2.visualVariables) == null ? void 0 : _a.length);
}
var I = g2 = class extends f {
  constructor(e2) {
    super(e2), this.type = "cluster", this.clusterRadius = o3("80px"), this.clusterMinSize = o3("12px"), this.clusterMaxSize = o3("50px"), this.maxScale = 0, this.popupEnabled = true, this.popupTemplate = null, this.renderer = null, this.symbol = null, this.labelingInfo = null, this.labelsVisible = true, this.fields = null;
  }
  readRenderer(e2, r2, t2) {
    var _a, _b;
    const s = (_a = r2.drawingInfo) == null ? void 0 : _a.renderer;
    return ((_b = s == null ? void 0 : s.authoringInfo) == null ? void 0 : _b.isAutoGenerated) ? null : s ? w(s) ? null : o5(s, r2, t2) ?? void 0 : D2(r2, t2);
  }
  readSymbol(e2, r2, t2) {
    var _a, _b;
    const s = (_a = r2.drawingInfo) == null ? void 0 : _a.renderer;
    if ((_b = s == null ? void 0 : s.authoringInfo) == null ? void 0 : _b.isAutoGenerated)
      return null;
    if (s && w(s)) {
      const e3 = o5(s, r2, t2);
      return e3 == null ? void 0 : e3.symbol;
    }
    return null;
  }
  writeSymbol(e2, r2, o7, s) {
    var _a, _b;
    const i = (_b = (_a = this.renderer) == null ? void 0 : _a.authoringInfo) == null ? void 0 : _b.isAutoGenerated;
    if (!this.renderer || i) {
      const o8 = new p({ symbol: e2 });
      r2.drawingInfo = { renderer: o8.write({}, s) };
    }
  }
  writeFields(e2, r2, t2) {
    const o7 = e2.filter((e3) => "avg_angle" !== e3.statisticType).map((e3) => e3.toJSON());
    o(t2, o7, r2);
  }
  readFields(e2, r2, t2) {
    return e2.filter((e3) => !e3.isAutoGenerated).map((e3) => a3.fromJSON(e3));
  }
  clone() {
    return new g2({ clusterRadius: this.clusterRadius, clusterMinSize: this.clusterMinSize, clusterMaxSize: this.clusterMaxSize, labelingInfo: a(this.labelingInfo), labelsVisible: this.labelsVisible, fields: a(this.fields), maxScale: this.maxScale, renderer: a(this.renderer), symbol: a(this.symbol), popupEnabled: this.popupEnabled, popupTemplate: a(this.popupTemplate) });
  }
};
e([y({ type: ["cluster"], readOnly: true, json: { write: true } })], I.prototype, "type", void 0), e([y({ type: Number, cast: (e2) => "auto" === e2 ? e2 : o3(e2), json: { write: true } })], I.prototype, "clusterRadius", void 0), e([y({ type: Number, cast: o3, json: { write: true } })], I.prototype, "clusterMinSize", void 0), e([y({ type: Number, cast: o3, json: { write: true } })], I.prototype, "clusterMaxSize", void 0), e([y({ type: Number, json: { default: 0, name: "visibilityInfo.maxScale" } })], I.prototype, "maxScale", void 0), e([y(y2)], I.prototype, "popupEnabled", void 0), e([y({ type: k, json: { read: { source: "popupInfo" }, write: { target: "popupInfo" } } })], I.prototype, "popupTemplate", void 0), e([y({ types: m, json: { write: { target: "drawingInfo.renderer" } } })], I.prototype, "renderer", void 0), e([o2("renderer", ["drawingInfo.renderer"])], I.prototype, "readRenderer", null), e([y({ types: D })], I.prototype, "symbol", void 0), e([o2("symbol", ["drawingInfo.renderer"])], I.prototype, "readSymbol", null), e([r("symbol")], I.prototype, "writeSymbol", null), e([y({ type: [C2], json: { read: { source: "drawingInfo.labelingInfo" }, write: { target: "drawingInfo.labelingInfo" } } })], I.prototype, "labelingInfo", void 0), e([y(m2)], I.prototype, "labelsVisible", void 0), e([y({ type: [a3], json: { write: true } })], I.prototype, "fields", void 0), e([r("fields")], I.prototype, "writeFields", null), e([o2("fields")], I.prototype, "readFields", null), I = g2 = e([c(S)], I);
var v2 = I;

// node_modules/@arcgis/core/layers/support/featureReductionUtils.js
var o6 = { key: "type", base: t, typeMap: { cluster: v2, binning: v } };
var p3 = { types: { key: "type", base: t, typeMap: { selection: p2, cluster: v2, binning: v } }, json: { name: "layerDefinition.featureReduction", write: { allowNull: true }, origins: { "web-map": { types: o6 }, "portal-item": { types: o6 }, "web-scene": { types: { key: "type", base: t, typeMap: { selection: p2 } }, name: "layerDefinition.featureReduction", write: { layerContainerTypes: a2 } } } } };

// node_modules/@arcgis/core/layers/mixins/FeatureReductionLayer.js
var c3 = (c4) => {
  let a4 = class extends c4 {
    constructor(...e2) {
      super(...e2), this.addHandles(d(() => this.renderer, () => {
        if (this.featureReduction) {
          const e3 = this._normalizeFeatureReduction(this.featureReduction);
          this._set("featureReduction", e3);
        }
      }, C));
    }
    set featureReduction(e2) {
      const r2 = this._normalizeFeatureReduction(e2);
      this._set("featureReduction", r2);
    }
    set renderer(e2) {
    }
    _normalizeFeatureReduction(e2) {
      var _a;
      if ("cluster" !== (e2 == null ? void 0 : e2.type))
        return e2;
      const r2 = e2.clone(), t2 = [new a3({ name: "cluster_count", isAutoGenerated: true, statisticType: "count" })], s = (r2.fields ?? []).filter((e3) => !e3.isAutoGenerated);
      if (e2.renderer && !((_a = e2.renderer.authoringInfo) == null ? void 0 : _a.isAutoGenerated))
        return r2.fields = [...t2, ...s], r2;
      if (e2.symbol)
        return r2.fields = [...t2, ...s], r2.renderer = null, r2;
      if (!this.renderer)
        return e2;
      const o7 = c2(t2, this.renderer, e2, null, false);
      return r2.fields = [...t2, ...s], r2.renderer = o7, r2;
    }
  };
  return e([y(p3)], a4.prototype, "featureReduction", null), a4 = e([c("esri.layers.mixins.FeatureReductionLayer")], a4), a4;
};

export {
  c3 as c
};
//# sourceMappingURL=chunk-JDVR6MOC.js.map
