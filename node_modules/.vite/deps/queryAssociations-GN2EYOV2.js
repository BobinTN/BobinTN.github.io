import {
  p
} from "./chunk-H6KFOOBX.js";
import "./chunk-LBDV3JOS.js";
import {
  e as e2
} from "./chunk-RFDTTDIQ.js";
import {
  f as f2,
  i,
  s
} from "./chunk-EUGXS5RE.js";
import "./chunk-ZZYUEH57.js";
import "./chunk-VTWXDFFD.js";
import "./chunk-IPCIO3PX.js";
import "./chunk-OIIDE5GZ.js";
import "./chunk-3XSRVKBX.js";
import "./chunk-WYBZLWIA.js";
import "./chunk-MKW4ORPJ.js";
import "./chunk-YTH6VA7N.js";
import "./chunk-GINTRQSD.js";
import "./chunk-Y5D433JZ.js";
import "./chunk-QNOCEWCR.js";
import "./chunk-WURET5CW.js";
import "./chunk-QWPLZ3QH.js";
import "./chunk-HLGIRLYQ.js";
import "./chunk-OMPEZIP5.js";
import "./chunk-EUTNDAIV.js";
import "./chunk-SJZIFARA.js";
import {
  j
} from "./chunk-R5DM4YAB.js";
import {
  f
} from "./chunk-NSRXJNTS.js";
import {
  y2 as y
} from "./chunk-LXXF7K7W.js";
import {
  c
} from "./chunk-SBW6NNVI.js";
import {
  e
} from "./chunk-62CXLI6S.js";
import "./chunk-RFPH3ZTZ.js";
import "./chunk-WGO3VFQP.js";
import "./chunk-CQS47VN5.js";
import "./chunk-WJ3HJKNC.js";
import "./chunk-4V6374PV.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/rest/networks/support/QueryAssociationsResult.js
var p2 = class extends f {
  constructor(s2) {
    super(s2), this.associations = [];
  }
};
e([y({ type: [p], json: { write: true } })], p2.prototype, "associations", void 0), p2 = e([c("esri.rest.networks.support.QueryAssociationsResult")], p2);
var c2 = p2;

// node_modules/@arcgis/core/rest/networks/queryAssociations.js
function i2(t) {
  const { returnDeletes: o, elements: r, gdbVersion: s2, moment: n } = t.toJSON();
  return { returnDeletes: o, elements: JSON.stringify(r.map((t2) => ({ globalId: t2.globalId, networkSourceId: t2.networkSourceId, terminalId: t2.terminalId }))), types: JSON.stringify(t.types.map((t2) => e2.toJSON(t2))), gdbVersion: s2, moment: n };
}
async function m(e3, m2, p3) {
  const u = f2(e3), a = { ...i2(m2), f: "json" }, l = s({ ...u.query, ...a }), d = i(l, { ...p3, method: "post" }), f3 = `${u.path}/associations/query`, { data: c3 } = await j(f3, d);
  return c2.fromJSON(c3);
}
export {
  m as queryAssociations
};
//# sourceMappingURL=queryAssociations-GN2EYOV2.js.map
