import {
  m as m2
} from "./chunk-HAPMAM7A.js";
import "./chunk-63MRXB4A.js";
import {
  E,
  X,
  f as f2
} from "./chunk-I425G4NJ.js";
import {
  e as e4
} from "./chunk-PCTEA6NC.js";
import {
  i as i2
} from "./chunk-BXZIEADJ.js";
import {
  t as t3
} from "./chunk-EX6UN27G.js";
import "./chunk-DQ5CZJ7Y.js";
import "./chunk-RXV6RUH7.js";
import "./chunk-JF5KFXQA.js";
import "./chunk-SH5MUYBA.js";
import "./chunk-MKRPXDII.js";
import "./chunk-S6CVQWN7.js";
import "./chunk-JWPJ4Y6I.js";
import "./chunk-OYPRFNII.js";
import "./chunk-747B2TEO.js";
import "./chunk-4NEWABLH.js";
import "./chunk-FW2Y26A2.js";
import "./chunk-5WG7GACT.js";
import "./chunk-LOGPPZUD.js";
import "./chunk-HYU6N3H3.js";
import "./chunk-ZRKSP45X.js";
import "./chunk-6C2TVJRX.js";
import "./chunk-Z6LZMG5A.js";
import {
  e as e3
} from "./chunk-323PT7GB.js";
import {
  i
} from "./chunk-TKJNJ6KH.js";
import {
  l
} from "./chunk-36R5EC6A.js";
import "./chunk-3HOLDCR2.js";
import "./chunk-DCL3YBJN.js";
import "./chunk-3ZWLSDVT.js";
import {
  o as o2
} from "./chunk-5DLICG33.js";
import {
  a as a3
} from "./chunk-ZILXWPAR.js";
import "./chunk-HPFRYEGX.js";
import "./chunk-F64GI7MS.js";
import "./chunk-4LDWKTSM.js";
import {
  j as j2
} from "./chunk-POSLR7O2.js";
import {
  f
} from "./chunk-VOYU5TTK.js";
import {
  a as a2
} from "./chunk-P5VIVFJT.js";
import "./chunk-SA3C7GIT.js";
import "./chunk-P3R45ANF.js";
import {
  t as t2
} from "./chunk-PIEUUBJ5.js";
import {
  u
} from "./chunk-YIAYIZOZ.js";
import {
  m
} from "./chunk-P5GW5DPX.js";
import {
  d
} from "./chunk-VIOPOI6P.js";
import "./chunk-E3I4MGUC.js";
import "./chunk-UHNBENSV.js";
import "./chunk-GDKL26HH.js";
import "./chunk-2CL4LRYG.js";
import "./chunk-64EQFPYJ.js";
import "./chunk-HKYMYCLL.js";
import "./chunk-ICVVQFO6.js";
import "./chunk-BYK6DXRK.js";
import "./chunk-7VNZ6V2N.js";
import "./chunk-VKTTTBW2.js";
import "./chunk-TTZWDXX5.js";
import "./chunk-OCLKX5SY.js";
import "./chunk-SEKLTVY5.js";
import "./chunk-HX5GOVNX.js";
import "./chunk-2Q2Q2Z4U.js";
import "./chunk-S6MJEC4A.js";
import "./chunk-HU7QYAVQ.js";
import "./chunk-45OAWGCA.js";
import "./chunk-R4LYFMZX.js";
import "./chunk-X2TA76Q5.js";
import "./chunk-T3Y5GTKO.js";
import "./chunk-XN6LAULS.js";
import "./chunk-M7OEQQRX.js";
import "./chunk-CSWPLQ7Q.js";
import "./chunk-KWSMYM7P.js";
import "./chunk-RP5SAUAF.js";
import "./chunk-6BFXMZEZ.js";
import "./chunk-AMSVADDY.js";
import "./chunk-6B7VJB6C.js";
import "./chunk-GAJBN4TM.js";
import "./chunk-2AXTYAMY.js";
import {
  b as b2
} from "./chunk-YXRSJYLG.js";
import "./chunk-OJ65P3EQ.js";
import "./chunk-FWR4JURK.js";
import "./chunk-BELGAUAK.js";
import "./chunk-JHJVOI7Q.js";
import "./chunk-TWNBDJHC.js";
import "./chunk-HITXLR5N.js";
import "./chunk-WYZCKLOR.js";
import "./chunk-S6NERLXF.js";
import "./chunk-4TSAC52K.js";
import "./chunk-H4ZZ5S37.js";
import "./chunk-G557TGXY.js";
import "./chunk-2AXFVQBN.js";
import {
  c as c3
} from "./chunk-WOGT6UK2.js";
import "./chunk-RHT6WWRD.js";
import "./chunk-EUGXS5RE.js";
import "./chunk-IRNKV32L.js";
import {
  t
} from "./chunk-OFRZSMZB.js";
import "./chunk-IATM3RCE.js";
import "./chunk-BEALJUHO.js";
import "./chunk-GRHSIT57.js";
import "./chunk-PJQIAD5D.js";
import "./chunk-Z6KIMOUA.js";
import "./chunk-SZAJDZCO.js";
import "./chunk-M7R7REMB.js";
import "./chunk-ZZYUEH57.js";
import "./chunk-VTWXDFFD.js";
import "./chunk-IPCIO3PX.js";
import "./chunk-EIY2DYTV.js";
import "./chunk-WJ4LS3YG.js";
import "./chunk-F6MD5VOH.js";
import "./chunk-V2RPSCV3.js";
import "./chunk-AOJ6OCPK.js";
import "./chunk-LMT5JII2.js";
import "./chunk-A43TI6AT.js";
import "./chunk-BHJVWW2P.js";
import "./chunk-4HKQSEUR.js";
import "./chunk-V3U4F2NL.js";
import "./chunk-ZB6PGKG5.js";
import "./chunk-OIIDE5GZ.js";
import "./chunk-3XSRVKBX.js";
import "./chunk-WYBZLWIA.js";
import "./chunk-MKW4ORPJ.js";
import "./chunk-YTH6VA7N.js";
import "./chunk-GINTRQSD.js";
import "./chunk-TBSVVR6M.js";
import "./chunk-6TJWLWLO.js";
import "./chunk-H7BKONNV.js";
import "./chunk-K6C6RVSV.js";
import {
  c as c2
} from "./chunk-KBJ5Z4R2.js";
import "./chunk-JUZJCTW2.js";
import "./chunk-423VNHLR.js";
import "./chunk-FN47E7YK.js";
import "./chunk-XZS3Q5K4.js";
import "./chunk-XXFXRXFH.js";
import "./chunk-CCXEAKIM.js";
import {
  M
} from "./chunk-Y5D433JZ.js";
import "./chunk-QNOCEWCR.js";
import {
  o
} from "./chunk-WURET5CW.js";
import {
  r
} from "./chunk-QWPLZ3QH.js";
import {
  T as T2
} from "./chunk-HLGIRLYQ.js";
import "./chunk-N2K4VRZH.js";
import "./chunk-WL4VPODY.js";
import "./chunk-OMPEZIP5.js";
import "./chunk-EUTNDAIV.js";
import "./chunk-SJZIFARA.js";
import {
  j
} from "./chunk-R5DM4YAB.js";
import "./chunk-NSRXJNTS.js";
import {
  e2,
  n2 as n,
  y2 as y
} from "./chunk-LXXF7K7W.js";
import {
  T,
  c
} from "./chunk-SBW6NNVI.js";
import {
  e
} from "./chunk-62CXLI6S.js";
import {
  a,
  b
} from "./chunk-RFPH3ZTZ.js";
import "./chunk-WGO3VFQP.js";
import "./chunk-CQS47VN5.js";
import {
  s3 as s
} from "./chunk-WJ3HJKNC.js";
import "./chunk-4V6374PV.js";
import "./chunk-A34O4XB5.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/layers/MapImageLayer.js
var J = class extends a2(a3(t2(E(f2(l(u(j2(m(f(i(o2(b2)))))))))))) {
  constructor(...e5) {
    super(...e5), this.dateFieldsTimeZone = null, this.datesInUnknownTimezone = false, this.dpi = 96, this.gdbVersion = null, this.imageFormat = "png24", this.imageMaxHeight = 2048, this.imageMaxWidth = 2048, this.imageTransparency = true, this.isReference = null, this.labelsVisible = false, this.operationalLayerType = "ArcGISMapServiceLayer", this.preferredTimeZone = null, this.sourceJSON = null, this.sublayers = null, this.type = "map-image", this.url = null;
  }
  normalizeCtorArgs(e5, r2) {
    return "string" == typeof e5 ? { url: e5, ...r2 } : e5;
  }
  load(e5) {
    const r2 = null != e5 ? e5.signal : null;
    return this.addResolvingPromise(this.loadFromPortal({ supportedTypes: ["Map Service"] }, e5).catch(a).then(() => this._fetchService(r2))), Promise.resolve(this);
  }
  readImageFormat(e5, r2) {
    const t4 = r2.supportedImageFormatTypes;
    return t4 && t4.includes("PNG32") ? "png32" : "png24";
  }
  writeSublayers(e5, r2, t4, i3) {
    var _a;
    if (!this.loaded || !e5)
      return;
    const o3 = e5.slice().reverse().flatten(({ sublayers: e6 }) => e6 && e6.toArray().reverse()).toArray();
    let s2 = false;
    if (this.capabilities && this.capabilities.operations.supportsExportMap && ((_a = this.capabilities.exportMap) == null ? void 0 : _a.supportsDynamicLayers)) {
      const e6 = n(i3.origin);
      if (e6 === e2.PORTAL_ITEM) {
        const e7 = this.createSublayersForOrigin("service").sublayers;
        s2 = e4(o3, e7, e2.SERVICE);
      } else if (e6 > e2.PORTAL_ITEM) {
        const e7 = this.createSublayersForOrigin("portal-item");
        s2 = e4(o3, e7.sublayers, n(e7.origin));
      }
    }
    const a4 = [], p = { writeSublayerStructure: s2, ...i3 };
    let n2 = s2;
    o3.forEach((e6) => {
      const r3 = e6.write({}, p);
      a4.push(r3), n2 = n2 || "user" === e6.originOf("visible");
    });
    a4.some((e6) => Object.keys(e6).length > 1) && (r2.layers = a4), n2 && (r2.visibleLayers = o3.filter((e6) => e6.visible).map((e6) => e6.id));
  }
  createExportImageParameters(e5, r2, t4, i3) {
    const o3 = (i3 == null ? void 0 : i3.pixelRatio) || 1;
    e5 && this.version >= 10 && (e5 = e5.clone().shiftCentralMeridian());
    const s2 = new m2({ layer: this, floors: i3 == null ? void 0 : i3.floors, scale: i2({ extent: e5, width: r2 }) * o3 }), a4 = s2.toJSON();
    s2.destroy();
    const p = !(i3 == null ? void 0 : i3.rotation) || this.version < 10.3 ? {} : { rotation: -i3.rotation }, n2 = e5 == null ? void 0 : e5.spatialReference, m3 = T2(n2);
    a4.dpi *= o3;
    const l2 = {};
    if (i3 == null ? void 0 : i3.timeExtent) {
      const { start: e6, end: r3 } = i3.timeExtent.toJSON();
      l2.time = e6 && r3 && e6 === r3 ? "" + e6 : `${e6 ?? "null"},${r3 ?? "null"}`;
    } else
      this.timeInfo && !this.timeInfo.hasLiveData && (l2.time = "null,null");
    return { bbox: e5 && e5.xmin + "," + e5.ymin + "," + e5.xmax + "," + e5.ymax, bboxSR: m3, imageSR: m3, size: r2 + "," + t4, ...a4, ...p, ...l2 };
  }
  async fetchImage(e5, r2, t4, i3) {
    const { data: o3 } = await this._fetchImage("image", e5, r2, t4, i3);
    return o3;
  }
  async fetchImageBitmap(e5, r2, t4, i3) {
    const { data: o3, url: s2 } = await this._fetchImage("blob", e5, r2, t4, i3);
    return t3(o3, s2, i3 == null ? void 0 : i3.signal);
  }
  async fetchRecomputedExtents(e5 = {}) {
    const i3 = { ...e5, query: { returnUpdates: true, f: "json", ...this.customParameters, token: this.apiKey } }, { data: o3 } = await j(this.url, i3), { extent: s2, fullExtent: a4, timeExtent: p } = o3, n2 = s2 || a4;
    return { fullExtent: n2 && M.fromJSON(n2), timeExtent: p && c3.fromJSON({ start: p[0], end: p[1] }) };
  }
  loadAll() {
    return t(this, (e5) => {
      e5(this.allSublayers);
    });
  }
  serviceSupportsSpatialReference(e5) {
    return e3(this, e5);
  }
  async _fetchImage(e5, t4, o3, s2, a4) {
    var _a, _b, _c;
    const n2 = { responseType: e5, signal: (a4 == null ? void 0 : a4.signal) ?? null, query: { ...this.parsedUrl.query, ...this.createExportImageParameters(t4, o3, s2, a4), f: "image", ...this.refreshParameters, ...this.customParameters, token: this.apiKey } }, m3 = this.parsedUrl.path + "/export";
    if (null != ((_a = n2.query) == null ? void 0 : _a.dynamicLayers) && !((_c = (_b = this.capabilities) == null ? void 0 : _b.exportMap) == null ? void 0 : _c.supportsDynamicLayers))
      throw new s("mapimagelayer:dynamiclayer-not-supported", `service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`, { query: n2.query });
    try {
      const { data: e6 } = await j(m3, n2);
      return { data: e6, url: m3 };
    } catch (l2) {
      if (b(l2))
        throw l2;
      throw new s("mapimagelayer:image-fetch-error", `Unable to load image: ${m3}`, { error: l2 });
    }
  }
  async _fetchService(e5) {
    if (this.sourceJSON)
      return void this.read(this.sourceJSON, { origin: "service", url: this.parsedUrl });
    const { data: t4, ssl: i3 } = await j(this.parsedUrl.path, { query: { f: "json", ...this.parsedUrl.query, ...this.customParameters, token: this.apiKey }, signal: e5 });
    i3 && (this.url = this.url.replace(/^http:/i, "https:")), this.sourceJSON = t4, this.read(t4, { origin: "service", url: this.parsedUrl });
  }
};
e([y(c2("dateFieldsTimeReference"))], J.prototype, "dateFieldsTimeZone", void 0), e([y({ type: Boolean })], J.prototype, "datesInUnknownTimezone", void 0), e([y()], J.prototype, "dpi", void 0), e([y()], J.prototype, "gdbVersion", void 0), e([y()], J.prototype, "imageFormat", void 0), e([o("imageFormat", ["supportedImageFormatTypes"])], J.prototype, "readImageFormat", null), e([y({ json: { origins: { service: { read: { source: "maxImageHeight" } } } } })], J.prototype, "imageMaxHeight", void 0), e([y({ json: { origins: { service: { read: { source: "maxImageWidth" } } } } })], J.prototype, "imageMaxWidth", void 0), e([y()], J.prototype, "imageTransparency", void 0), e([y({ type: Boolean, json: { read: false, write: { enabled: true, overridePolicy: () => ({ enabled: false }) } } })], J.prototype, "isReference", void 0), e([y({ json: { read: false, write: false } })], J.prototype, "labelsVisible", void 0), e([y({ type: ["ArcGISMapServiceLayer"] })], J.prototype, "operationalLayerType", void 0), e([y({ json: { read: false, write: false } })], J.prototype, "popupEnabled", void 0), e([y(c2("preferredTimeReference"))], J.prototype, "preferredTimeZone", void 0), e([y()], J.prototype, "sourceJSON", void 0), e([y({ json: { write: { ignoreOrigin: true } } })], J.prototype, "sublayers", void 0), e([r("sublayers", { layers: { type: [X] }, visibleLayers: { type: [T] } })], J.prototype, "writeSublayers", null), e([y({ type: ["show", "hide", "hide-children"] })], J.prototype, "listMode", void 0), e([y({ json: { read: false }, readOnly: true, value: "map-image" })], J.prototype, "type", void 0), e([y(d)], J.prototype, "url", void 0), J = e([c("esri.layers.MapImageLayer")], J);
var _ = J;
export {
  _ as default
};
//# sourceMappingURL=MapImageLayer-LE4BUW2J.js.map
