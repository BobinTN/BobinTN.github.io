import {
  j
} from "./chunk-O2KD3APD.js";
import "./chunk-WK4UDTKV.js";
import {
  r
} from "./chunk-WICI4OJR.js";
import {
  c as c2
} from "./chunk-7NZGEFEW.js";
import "./chunk-QLCCKKQG.js";
import "./chunk-DT2VHQBL.js";
import {
  u as u2
} from "./chunk-YIAYIZOZ.js";
import {
  m
} from "./chunk-P5GW5DPX.js";
import "./chunk-VIOPOI6P.js";
import {
  h as h2
} from "./chunk-HU7QYAVQ.js";
import "./chunk-T3Y5GTKO.js";
import {
  b
} from "./chunk-YXRSJYLG.js";
import "./chunk-JHJVOI7Q.js";
import "./chunk-S6NERLXF.js";
import "./chunk-WOGT6UK2.js";
import {
  a,
  e as e2,
  h
} from "./chunk-IRNKV32L.js";
import "./chunk-BEALJUHO.js";
import {
  n,
  t
} from "./chunk-GRHSIT57.js";
import "./chunk-Z6KIMOUA.js";
import "./chunk-SZAJDZCO.js";
import "./chunk-M7R7REMB.js";
import "./chunk-ZZYUEH57.js";
import "./chunk-VTWXDFFD.js";
import "./chunk-IPCIO3PX.js";
import {
  i,
  l
} from "./chunk-WJ4LS3YG.js";
import "./chunk-LMT5JII2.js";
import {
  U
} from "./chunk-4HKQSEUR.js";
import "./chunk-V3U4F2NL.js";
import "./chunk-ZB6PGKG5.js";
import "./chunk-OIIDE5GZ.js";
import "./chunk-3XSRVKBX.js";
import "./chunk-WYBZLWIA.js";
import "./chunk-MKW4ORPJ.js";
import "./chunk-YTH6VA7N.js";
import "./chunk-GINTRQSD.js";
import "./chunk-APYNYYQC.js";
import {
  A,
  d
} from "./chunk-TBSVVR6M.js";
import "./chunk-6TJWLWLO.js";
import "./chunk-H7BKONNV.js";
import "./chunk-K6C6RVSV.js";
import "./chunk-KBJ5Z4R2.js";
import {
  V
} from "./chunk-JUZJCTW2.js";
import "./chunk-423VNHLR.js";
import "./chunk-FN47E7YK.js";
import "./chunk-XZS3Q5K4.js";
import "./chunk-CCXEAKIM.js";
import "./chunk-Y5D433JZ.js";
import {
  x2 as x
} from "./chunk-QNOCEWCR.js";
import "./chunk-WURET5CW.js";
import "./chunk-QWPLZ3QH.js";
import "./chunk-HLGIRLYQ.js";
import "./chunk-N2K4VRZH.js";
import "./chunk-WL4VPODY.js";
import "./chunk-OMPEZIP5.js";
import "./chunk-EUTNDAIV.js";
import "./chunk-SJZIFARA.js";
import "./chunk-R5DM4YAB.js";
import {
  u2 as u
} from "./chunk-NSRXJNTS.js";
import {
  g,
  y2 as y
} from "./chunk-LXXF7K7W.js";
import {
  c
} from "./chunk-SBW6NNVI.js";
import {
  e
} from "./chunk-62CXLI6S.js";
import "./chunk-RFPH3ZTZ.js";
import {
  o
} from "./chunk-WGO3VFQP.js";
import "./chunk-CQS47VN5.js";
import "./chunk-WJ3HJKNC.js";
import "./chunk-4V6374PV.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/analysis/featureReferenceUtils.js
function e3(e4, l4) {
  return t2(e4) === t2(l4);
}
function t2(e4) {
  if (null == e4)
    return null;
  const t3 = null != e4.layer ? e4.layer.id : "";
  let l4 = null;
  return l4 = null != e4.objectId ? e4.objectId : null != e4.layer && "objectIdField" in e4.layer && null != e4.layer.objectIdField && null != e4.attributes ? e4.attributes[e4.layer.objectIdField] : e4.uid, null == l4 ? null : `o-${t3}-${l4}`;
}
var l2 = { json: { write: { writer: r2, target: { "feature.layerId": { type: [Number, String] }, "feature.objectId": { type: [Number, String] } } }, origins: { "web-scene": { read: n2 } } } };
function r2(e4, t3) {
  var _a;
  null != ((_a = e4 == null ? void 0 : e4.layer) == null ? void 0 : _a.objectIdField) && null != e4.attributes && (t3.feature = { layerId: e4.layer.id, objectId: e4.attributes[e4.layer.objectIdField] });
}
function n2(e4) {
  if (null != e4.layerId && null != e4.objectId)
    return { uid: null, layer: { id: e4.layerId, objectIdField: "ObjectId" }, attributes: { ObjectId: e4.objectId } };
}

// node_modules/@arcgis/core/analysis/LineOfSightAnalysisObserver.js
var f = class extends u(i(g)) {
  constructor(o2) {
    super(o2), this.position = null, this.elevationInfo = null, this.feature = null;
  }
  equals(o2) {
    return o(this.position, o2.position) && o(this.elevationInfo, o2.elevationInfo) && e3(this.feature, o2.feature);
  }
};
e([y({ type: x, json: { write: { isRequired: true } } })], f.prototype, "position", void 0), e([y({ type: h2 }), j()], f.prototype, "elevationInfo", void 0), e([y(l2)], f.prototype, "feature", void 0), f = e([c("esri.analysis.LineOfSightAnalysisObserver")], f);
var u3 = f;

// node_modules/@arcgis/core/analysis/LineOfSightAnalysisTarget.js
var l3 = class extends u(l) {
  constructor(o2) {
    super(o2), this.position = null, this.elevationInfo = null, this.feature = null;
  }
  equals(o2) {
    return o(this.position, o2.position) && o(this.elevationInfo, o2.elevationInfo) && e3(this.feature, o2.feature);
  }
};
e([y({ type: x }), j()], l3.prototype, "position", void 0), e([y({ type: h2 }), j()], l3.prototype, "elevationInfo", void 0), e([y(l2)], l3.prototype, "feature", void 0), l3 = e([c("esri.analysis.LineOfSightAnalysisTarget")], l3);
var f2 = l3;

// node_modules/@arcgis/core/analysis/LineOfSightAnalysis.js
var h3 = V.ofType(f2);
var d2 = class extends c2 {
  constructor(t3) {
    super(t3), this.type = "line-of-sight", this.observer = null, this.extent = null;
  }
  initialize() {
    this.addHandles(d(() => this._computeExtent(), (t3) => {
      null == (t3 == null ? void 0 : t3.pending) && this._set("extent", null != t3 ? t3.extent : null);
    }, A));
  }
  get targets() {
    return this._get("targets") || new h3();
  }
  set targets(t3) {
    this._set("targets", n(t3, this.targets, h3));
  }
  get spatialReference() {
    var _a;
    return null != ((_a = this.observer) == null ? void 0 : _a.position) ? this.observer.position.spatialReference : null;
  }
  get requiredPropertiesForEditing() {
    var _a;
    return [(_a = this.observer) == null ? void 0 : _a.position];
  }
  async waitComputeExtent() {
    const t3 = this._computeExtent();
    return null != t3 ? t3.pending : Promise.resolve();
  }
  _computeExtent() {
    var _a;
    const t3 = this.spatialReference;
    if (null == ((_a = this.observer) == null ? void 0 : _a.position) || null == t3)
      return null;
    const e4 = (t4) => "absolute-height" === r(t4.position, t4.elevationInfo), r3 = this.observer.position, o2 = a(r3.x, r3.y, r3.z, r3.x, r3.y, r3.z);
    for (const i2 of this.targets)
      if (null != i2.position) {
        const e5 = U(i2.position, t3);
        if (null != e5.pending)
          return { pending: e5.pending, extent: null };
        if (null != e5.geometry) {
          const { x: t4, y: r4, z: s2 } = e5.geometry;
          h(o2, [t4, r4, s2]);
        }
      }
    const s = e2(o2, t3);
    return e4(this.observer) && this.targets.every(e4) || (s.zmin = void 0, s.zmax = void 0), { pending: null, extent: s };
  }
  clear() {
    this.observer = null, this.targets.removeAll();
  }
};
e([y({ type: ["line-of-sight"] })], d2.prototype, "type", void 0), e([y({ type: u3, json: { read: true, write: true } })], d2.prototype, "observer", void 0), e([y({ cast: t, type: h3, nonNullable: true, json: { read: true, write: true } })], d2.prototype, "targets", null), e([y({ value: null, readOnly: true })], d2.prototype, "extent", void 0), e([y({ readOnly: true })], d2.prototype, "spatialReference", null), e([y({ readOnly: true })], d2.prototype, "requiredPropertiesForEditing", null), d2 = e([c("esri.analysis.LineOfSightAnalysis")], d2);
var v = d2;

// node_modules/@arcgis/core/layers/LineOfSightLayer.js
var h4 = V.ofType(f2);
var m2 = class extends u2(m(b)) {
  constructor(e4) {
    super(e4), this.type = "line-of-sight", this.operationalLayerType = "LineOfSightLayer", this.analysis = new v(), this.opacity = 1;
  }
  initialize() {
    this.addHandles(d(() => this.analysis, (e4, s) => {
      null != s && s.parent === this && (s.parent = null), null != e4 && (e4.parent = this);
    }, A));
  }
  async load() {
    return null != this.analysis && this.addResolvingPromise(this.analysis.waitComputeExtent()), this;
  }
  get observer() {
    var _a;
    return (_a = this.analysis) == null ? void 0 : _a.observer;
  }
  set observer(e4) {
    const { analysis: s } = this;
    s && (s.observer = e4);
  }
  get targets() {
    return null != this.analysis ? this.analysis.targets : new V();
  }
  set targets(e4) {
    var _a;
    n(e4, (_a = this.analysis) == null ? void 0 : _a.targets);
  }
  get fullExtent() {
    return null != this.analysis ? this.analysis.extent : null;
  }
  get spatialReference() {
    return null != this.analysis ? this.analysis.spatialReference : null;
  }
  releaseAnalysis(e4) {
    this.analysis === e4 && (this.analysis = new v());
  }
};
e([y({ json: { read: false }, readOnly: true })], m2.prototype, "type", void 0), e([y({ type: ["LineOfSightLayer"] })], m2.prototype, "operationalLayerType", void 0), e([y({ type: u3, json: { read: true, write: { isRequired: true, ignoreOrigin: true } } })], m2.prototype, "observer", null), e([y({ type: h4, json: { read: true, write: { ignoreOrigin: true } } })], m2.prototype, "targets", null), e([y({ nonNullable: true, json: { read: false, write: false } })], m2.prototype, "analysis", void 0), e([y({ readOnly: true })], m2.prototype, "fullExtent", null), e([y({ readOnly: true })], m2.prototype, "spatialReference", null), e([y({ readOnly: true, json: { read: false, write: false, origins: { service: { read: false, write: false }, "portal-item": { read: false, write: false }, "web-document": { read: false, write: false } } } })], m2.prototype, "opacity", void 0), e([y({ type: ["show", "hide"] })], m2.prototype, "listMode", void 0), m2 = e([c("esri.layers.LineOfSightLayer")], m2);
var d3 = m2;
export {
  d3 as default
};
//# sourceMappingURL=LineOfSightLayer-QMATYCSP.js.map
