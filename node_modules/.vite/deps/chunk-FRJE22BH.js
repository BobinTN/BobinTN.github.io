import {
  f
} from "./chunk-NSRXJNTS.js";
import {
  y2 as y
} from "./chunk-LXXF7K7W.js";
import {
  c
} from "./chunk-SBW6NNVI.js";
import {
  e
} from "./chunk-62CXLI6S.js";

// node_modules/@arcgis/core/rest/networks/support/ValidateNetworkTopologyResult.js
var s = class extends f {
  constructor(e2) {
    super(e2), this.moment = null, this.fullUpdate = false, this.validateErrorsCreated = false, this.dirtyAreaCount = null, this.exceededTransferLimit = null, this.serviceEdits = null, this.discoveredSubnetworks = null;
  }
};
e([y({ type: Date, json: { type: Number, write: { writer: (e2, t) => {
  t.moment = e2 ? e2.getTime() : null;
} } } })], s.prototype, "moment", void 0), e([y({ type: Boolean, json: { write: true } })], s.prototype, "fullUpdate", void 0), e([y({ type: Boolean, json: { write: true } })], s.prototype, "validateErrorsCreated", void 0), e([y({ type: Number, json: { write: true } })], s.prototype, "dirtyAreaCount", void 0), e([y({ type: Boolean, json: { write: true } })], s.prototype, "exceededTransferLimit", void 0), e([y({ type: [Object], json: { write: true } })], s.prototype, "serviceEdits", void 0), e([y({ type: [Object], json: { write: true } })], s.prototype, "discoveredSubnetworks", void 0), s = e([c("esri.rest.networks.support.ValidateNetworkTopologyResult")], s);
var i = s;

export {
  i
};
//# sourceMappingURL=chunk-FRJE22BH.js.map
