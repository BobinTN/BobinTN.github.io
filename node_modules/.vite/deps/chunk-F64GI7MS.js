import {
  w
} from "./chunk-4LDWKTSM.js";
import {
  p as p2
} from "./chunk-UHNBENSV.js";
import {
  A,
  p,
  v
} from "./chunk-GDKL26HH.js";
import {
  j
} from "./chunk-2CL4LRYG.js";
import {
  y as y3
} from "./chunk-7VNZ6V2N.js";
import {
  a as a2,
  c as c2,
  i
} from "./chunk-6BFXMZEZ.js";
import {
  S,
  m,
  y as y2
} from "./chunk-HITXLR5N.js";
import {
  u as u3
} from "./chunk-G557TGXY.js";
import {
  h,
  w as w2
} from "./chunk-Z6KIMOUA.js";
import {
  o
} from "./chunk-EIY2DYTV.js";
import {
  i as i2
} from "./chunk-WJ4LS3YG.js";
import {
  o as o2
} from "./chunk-V2RPSCV3.js";
import {
  r
} from "./chunk-QWPLZ3QH.js";
import {
  s as s3
} from "./chunk-OMPEZIP5.js";
import {
  f
} from "./chunk-NSRXJNTS.js";
import {
  k as k2,
  t,
  y2 as y
} from "./chunk-LXXF7K7W.js";
import {
  T,
  c,
  s3 as s2,
  t as t2,
  u2 as u,
  u3 as u2
} from "./chunk-SBW6NNVI.js";
import {
  e
} from "./chunk-62CXLI6S.js";
import {
  a,
  s2 as s
} from "./chunk-WJ3HJKNC.js";
import {
  k
} from "./chunk-4V6374PV.js";

// node_modules/@arcgis/core/renderers/DictionaryRenderer.js
var p3;
var c3 = p3 = class extends v(p) {
  constructor(e3) {
    super(e3), this.config = null, this.fieldMap = null, this.scaleExpression = null, this.scaleExpressionTitle = null, this.url = null, this.type = "dictionary";
  }
  get _loader() {
    return new y3(this.url, this.config, this.fieldMap);
  }
  writeData(e3, r2) {
    e3 && (r2.scalingExpressionInfo = { expression: e3, returnType: "number" });
  }
  writeVisualVariables(e3, r2, s5, i5) {
    (i5 == null ? void 0 : i5.origin) || super.writeVisualVariables(e3, r2, s5, i5);
  }
  clone() {
    return new p3({ config: a(this.config), scaleExpression: this.scaleExpression, scaleExpressionTitle: this.scaleExpressionTitle, fieldMap: a(this.fieldMap), url: a(this.url), visualVariables: a(this.visualVariables) });
  }
  async getSymbolAsync(e3, r2) {
    return this._loader.getSymbolAsync(e3, r2);
  }
  async collectRequiredFields(e3, r2) {
    await this.collectVVRequiredFields(e3, r2), this.scaleExpression && await h(e3, r2, this.scaleExpression);
    for (const s5 in this.fieldMap) {
      const i5 = this.fieldMap[s5];
      r2.has(i5) && e3.add(i5);
    }
  }
  get arcadeRequired() {
    return true;
  }
  getSymbol() {
    return null;
  }
  getSymbols() {
    return [];
  }
  getAttributeHash() {
    return this.visualVariables && this.visualVariables.reduce((e3, r2) => e3 + r2.getAttributeHash(), "");
  }
  getMeshHash() {
    return `${this.url}-${JSON.stringify(this.fieldMap)}`;
  }
  getSymbolFields() {
    return this._loader.getSymbolFields();
  }
};
e([y({ type: y3 })], c3.prototype, "_loader", null), e([y({ type: Object, json: { read: { source: "configuration" }, write: { target: "configuration" } } })], c3.prototype, "config", void 0), e([y({ type: Object, json: { write: true } })], c3.prototype, "fieldMap", void 0), e([y({ type: String, json: { read: { source: "scalingExpressionInfo.expression" }, write: true } })], c3.prototype, "scaleExpression", void 0), e([r("scaleExpression")], c3.prototype, "writeData", null), e([y({ type: String, json: { read: { source: "scalingExpressionInfo.title" }, write: { target: "scalingExpressionInfo.title", overridePolicy(e3) {
  return { enabled: !!e3 && !!this.scaleExpression };
} } } })], c3.prototype, "scaleExpressionTitle", void 0), e([y({ type: String, json: { write: true } })], c3.prototype, "url", void 0), e([r("visualVariables")], c3.prototype, "writeVisualVariables", null), c3 = p3 = e([c("esri.renderers.DictionaryRenderer")], c3);
var u4 = c3;

// node_modules/@arcgis/core/renderers/support/AttributeColorInfo.js
var n;
var u5 = n = class extends f {
  constructor(r2) {
    super(r2), this.color = null, this.field = null, this.label = null, this.valueExpression = null, this.valueExpressionTitle = null;
  }
  castField(r2) {
    return null == r2 ? r2 : "function" == typeof r2 ? (s.getLogger(this).error(".field: field must be a string value"), null) : u(r2);
  }
  getAttributeHash() {
    return `${this.field}-${this.valueExpression}`;
  }
  clone() {
    var _a;
    return new n({ color: (_a = this.color) == null ? void 0 : _a.clone(), field: this.field, label: this.label, valueExpression: this.valueExpression, valueExpressionTitle: this.valueExpressionTitle });
  }
};
e([y({ type: u3, json: { type: [Number], write: true } })], u5.prototype, "color", void 0), e([y({ type: String, json: { write: true } })], u5.prototype, "field", void 0), e([s3("field")], u5.prototype, "castField", null), e([y({ type: String, json: { write: true } })], u5.prototype, "label", void 0), e([y({ type: String, json: { write: true } })], u5.prototype, "valueExpression", void 0), e([y({ type: String, json: { write: true } })], u5.prototype, "valueExpressionTitle", void 0), u5 = n = e([c("esri.renderers.support.AttributeColorInfo")], u5);
var a3 = u5;

// node_modules/@arcgis/core/renderers/support/DotDensityLegendOptions.js
var e2;
var p4 = e2 = class extends f {
  constructor() {
    super(...arguments), this.unit = null;
  }
  clone() {
    return new e2({ unit: this.unit });
  }
};
e([y({ type: String, json: { write: true } })], p4.prototype, "unit", void 0), p4 = e2 = e([c("esri.renderers.support.DotDensityLegendOptions")], p4);
var c4 = p4;

// node_modules/@arcgis/core/renderers/DotDensityRenderer.js
var h2;
var m2 = h2 = class extends v(p) {
  constructor(t4) {
    super(t4), this.attributes = null, this.backgroundColor = new u3([0, 0, 0, 0]), this.dotBlendingEnabled = true, this.dotShape = "square", this.dotSize = 1, this.legendOptions = null, this.outline = new m(), this.dotValue = null, this.referenceScale = null, this.seed = 1, this.type = "dot-density";
  }
  calculateDotValue(t4) {
    if (null == this.referenceScale)
      return this.dotValue;
    const e3 = t4 / this.referenceScale * this.dotValue;
    return e3 < 1 ? 1 : e3;
  }
  getSymbol() {
    return new S({ outline: this.outline });
  }
  async getSymbolAsync() {
    return this.getSymbol();
  }
  getSymbols() {
    return [this.getSymbol()];
  }
  getAttributeHash() {
    var _a;
    return ((_a = this.attributes) == null ? void 0 : _a.reduce((t4, e3) => t4 + e3.getAttributeHash(), "")) ?? "";
  }
  getMeshHash() {
    return JSON.stringify(this.outline);
  }
  clone() {
    return new h2({ attributes: a(this.attributes), backgroundColor: a(this.backgroundColor), dotBlendingEnabled: a(this.dotBlendingEnabled), dotShape: a(this.dotShape), dotSize: a(this.dotSize), dotValue: a(this.dotValue), legendOptions: a(this.legendOptions), outline: a(this.outline), referenceScale: a(this.referenceScale), visualVariables: a(this.visualVariables), authoringInfo: this.authoringInfo && this.authoringInfo.clone() });
  }
  getControllerHash() {
    var _a;
    const t4 = (_a = this.attributes) == null ? void 0 : _a.map((t5) => t5.field || t5.valueExpression || "");
    return `${t4}-${this.outline && JSON.stringify(this.outline.toJSON()) || ""}`;
  }
  async collectRequiredFields(t4, e3) {
    await this.collectVVRequiredFields(t4, e3);
    for (const o4 of this.attributes ?? [])
      o4.valueExpression && await h(t4, e3, o4.valueExpression), o4.field && t4.add(o4.field);
  }
};
e([y({ type: [a3], json: { write: true } })], m2.prototype, "attributes", void 0), e([y({ type: u3, json: { write: true } })], m2.prototype, "backgroundColor", void 0), e([y({ type: Boolean, json: { write: true } })], m2.prototype, "dotBlendingEnabled", void 0), e([y({ type: String, json: { write: false } })], m2.prototype, "dotShape", void 0), e([y({ type: Number, json: { write: true } })], m2.prototype, "dotSize", void 0), e([y({ type: c4, json: { write: true } })], m2.prototype, "legendOptions", void 0), e([y({ type: m, json: { default: null, write: true } })], m2.prototype, "outline", void 0), e([y({ type: Number, json: { write: true } })], m2.prototype, "dotValue", void 0), e([y({ type: Number, json: { write: true } })], m2.prototype, "referenceScale", void 0), e([y({ type: Number, json: { write: true } })], m2.prototype, "seed", void 0), e([o2({ dotDensity: "dot-density" })], m2.prototype, "type", void 0), m2 = h2 = e([c("esri.renderers.DotDensityRenderer")], m2);
var y4 = m2;

// node_modules/@arcgis/core/renderers/support/HeatmapColorStop.js
var c5;
var i3 = c5 = class extends f {
  constructor(o4) {
    super(o4), this.color = null, this.ratio = null;
  }
  clone() {
    return new c5({ color: this.color, ratio: this.ratio });
  }
};
e([y({ type: u3, json: { type: [T], default: null, write: true } })], i3.prototype, "color", void 0), e([y({ type: Number, json: { write: true } })], i3.prototype, "ratio", void 0), i3 = c5 = e([c("esri.renderers.support.HeatmapColorStop")], i3);
var a4 = i3;

// node_modules/@arcgis/core/renderers/support/HeatmapLegendOptions.js
var p5 = class extends i2(f) {
  constructor() {
    super(...arguments), this.minLabel = null, this.maxLabel = null, this.title = null;
  }
};
e([y({ type: String, json: { write: true } })], p5.prototype, "minLabel", void 0), e([y({ type: String, json: { write: true } })], p5.prototype, "maxLabel", void 0), e([y({ type: String, json: { write: true } })], p5.prototype, "title", void 0), p5 = e([c("esri.renderers.support.HeatmapLegendOptions")], p5);

// node_modules/@arcgis/core/renderers/HeatmapRenderer.js
var j2;
var D = "esri.renderers.HeatmapRenderer";
var I = s.getLogger(D);
function S2(e3) {
  if (null != e3) {
    const { maxDensity: t4, minDensity: i5, radius: s5 } = e3;
    if (null != t4 || null != i5 || null != s5) {
      const { blurRadius: t5, maxPixelIntensity: i6, minPixelIntensity: s6, ...r2 } = e3;
      return r2;
    }
  }
  return e3;
}
var v2 = j2 = class extends p {
  constructor(e3) {
    super(e3), this.authoringInfo = null, this.colorStops = [new a4({ ratio: 0, color: new u3("rgba(255, 140, 0, 0)") }), new a4({ ratio: 0.75, color: new u3("rgba(255, 140, 0, 1)") }), new a4({ ratio: 0.9, color: new u3("rgba(255, 0,   0, 1)") })], this.field = null, this.fieldOffset = 0, this.legendOptions = null, this.maxDensity = 0.04, this.minDensity = 0, this.radius = 18, this.referenceScale = 0, this.type = "heatmap", this.valueExpression = null, this.valueExpressionTitle = null, this._warnedProps = { blurRadius: false, maxPixelIntensity: false, minPixelIntensity: false };
  }
  normalizeCtorArgs(e3) {
    return S2(e3);
  }
  get blurRadius() {
    return c2(this.radius);
  }
  set blurRadius(e3) {
    const t4 = this.maxPixelIntensity, i5 = this.minPixelIntensity;
    this._set("radius", i(e3)), this._warnAboutDeprecatedGaussianBlurProp("blurRadius", "radius"), this._set("maxDensity", t4 * this._pixelIntensityToDensity), this._set("minDensity", i5 * this._pixelIntensityToDensity);
  }
  get maxPixelIntensity() {
    return this.maxDensity / this._pixelIntensityToDensity;
  }
  set maxPixelIntensity(e3) {
    this._set("maxDensity", e3 * this._pixelIntensityToDensity), this._warnAboutDeprecatedGaussianBlurProp("maxPixelIntensity", "maxDensity");
  }
  get minPixelIntensity() {
    return this.minDensity / this._pixelIntensityToDensity;
  }
  set minPixelIntensity(e3) {
    this._set("minDensity", e3 * this._pixelIntensityToDensity), this._warnAboutDeprecatedGaussianBlurProp("minPixelIntensity", "minDensity");
  }
  get _pixelIntensityToDensity() {
    return 24 / (a2 ** 2 * this.blurRadius ** 4);
  }
  _warnAboutDeprecatedGaussianBlurProp(e3, t4) {
    if (this._warnedProps[e3])
      return;
    "user" === t2(this).getDefaultOrigin() && (this._warnedProps[e3] = true, k2(() => {
      t(I, e3, { replacement: `${String(t4)} (suggested value: ${this._get(t4)})`, version: "4.24" });
    }));
  }
  read(e3, t4) {
    e3 = S2(e3), super.read(e3, t4);
  }
  getSymbol() {
    return new y2();
  }
  async getSymbolAsync() {
    return this.getSymbol();
  }
  getSymbols() {
    return [this.getSymbol()];
  }
  async collectRequiredFields(e3, t4) {
    const i5 = this.field, s5 = this.valueExpression;
    i5 && "string" == typeof i5 && w2(e3, t4, i5), s5 && "string" == typeof s5 && await h(e3, t4, s5);
  }
  getAttributeHash() {
    return null;
  }
  getMeshHash() {
    return `${JSON.stringify(this.colorStops)}.${this.blurRadius}.${this.field}`;
  }
  clone() {
    return new j2({ authoringInfo: this.authoringInfo && this.authoringInfo.clone(), colorStops: a(this.colorStops), field: this.field, legendOptions: a(this.legendOptions), maxDensity: this.maxDensity, minDensity: this.minDensity, radius: this.radius, referenceScale: this.referenceScale, valueExpression: this.valueExpression, valueExpressionTitle: this.valueExpressionTitle });
  }
};
e([y({ type: j, json: { write: true, origins: { "web-scene": { write: false, read: false } } } })], v2.prototype, "authoringInfo", void 0), e([y({ type: Number, json: { origins: { "portal-item": { write: true }, "web-map": { write: true } } } })], v2.prototype, "blurRadius", null), e([y({ type: [a4], json: { write: true } })], v2.prototype, "colorStops", void 0), e([y({ type: String, json: { write: true } })], v2.prototype, "field", void 0), e([y({ type: Number, json: { write: { overridePolicy: (e3, t4, i5) => ({ enabled: null == i5 }) }, origins: { "web-scene": { write: false } } } })], v2.prototype, "fieldOffset", void 0), e([y({ type: p5, json: { write: true } })], v2.prototype, "legendOptions", void 0), e([y({ type: Number, json: { write: true } })], v2.prototype, "maxDensity", void 0), e([y({ type: Number, json: { origins: { "portal-item": { write: true }, "web-map": { write: true } } } })], v2.prototype, "maxPixelIntensity", null), e([y({ type: Number, json: { write: true } })], v2.prototype, "minDensity", void 0), e([y({ type: Number, json: { origins: { "portal-item": { write: true }, "web-map": { write: true } } } })], v2.prototype, "minPixelIntensity", null), e([y({ type: Number, cast: o, json: { write: true } })], v2.prototype, "radius", void 0), e([y({ type: Number, range: { min: 0 }, json: { default: 0, write: true } })], v2.prototype, "referenceScale", void 0), e([o2({ heatmap: "heatmap" })], v2.prototype, "type", void 0), e([y({ type: String, json: { write: true, origins: { "web-document": { write: false }, "portal-item": { write: false } } } })], v2.prototype, "valueExpression", void 0), e([y({ type: String })], v2.prototype, "valueExpressionTitle", void 0), e([y({ readOnly: true })], v2.prototype, "_pixelIntensityToDensity", null), v2 = j2 = e([c(D)], v2);
var P = v2;

// node_modules/@arcgis/core/renderers/support/OthersCategory.js
var i4 = class extends i2(f) {
  constructor() {
    super(...arguments), this.color = new u3([0, 0, 0, 0]), this.label = null, this.threshold = 0;
  }
};
e([y({ type: u3, json: { write: true } })], i4.prototype, "color", void 0), e([y({ type: String, json: { write: true } })], i4.prototype, "label", void 0), e([y({ type: Number, range: { min: 0, max: 1 }, json: { write: true } })], i4.prototype, "threshold", void 0), i4 = e([c("esri.renderers.support.OthersCategory")], i4);

// node_modules/@arcgis/core/renderers/support/PieChartLegendOptions.js
var p6 = class extends i2(f) {
  constructor() {
    super(...arguments), this.title = null;
  }
};
e([y({ type: String, json: { write: true } })], p6.prototype, "title", void 0), p6 = e([c("esri.renderers.support.PieChartLegendOptions")], p6);

// node_modules/@arcgis/core/renderers/PieChartRenderer.js
var f2 = class extends v(i2(p)) {
  constructor(t4) {
    super(t4), this.attributes = null, this.backgroundFillSymbol = null, this.defaultColor = new u3([0, 0, 0, 0]), this.defaultLabel = null, this.holePercentage = 0, this.othersCategory = new i4(), this.legendOptions = null, this.outline = null, this.size = 12, this.type = "pie-chart";
  }
  getSymbol() {
    var _a;
    return new y2({ size: this.size ? this.size / 2 + (((_a = this.outline) == null ? void 0 : _a.width) || 0) : 0 });
  }
  async getSymbolAsync() {
    return this.getSymbol();
  }
  getSymbols() {
    return [this.getSymbol(), this.backgroundFillSymbol].filter(k);
  }
  getAttributeHash() {
    return this.visualVariables && this.visualVariables.reduce((t4, e3) => t4 + e3.getAttributeHash(), "");
  }
  getMeshHash() {
    return this.getSymbols().reduce((t4, e3) => t4 + JSON.stringify(e3), "");
  }
  async collectRequiredFields(t4, e3) {
    await this.collectVVRequiredFields(t4, e3);
    for (const o4 of this.attributes)
      o4.valueExpression && await h(t4, e3, o4.valueExpression), o4.field && t4.add(o4.field);
  }
};
e([y({ type: [a3], json: { write: true } })], f2.prototype, "attributes", void 0), e([y({ type: S, json: { default: null, write: true } })], f2.prototype, "backgroundFillSymbol", void 0), e([y({ type: u3, json: { write: true } })], f2.prototype, "defaultColor", void 0), e([y({ type: String, json: { write: true } })], f2.prototype, "defaultLabel", void 0), e([y({ type: Number, range: { min: 0, max: 1 }, json: { write: true } })], f2.prototype, "holePercentage", void 0), e([y({ type: i4, json: { write: true } })], f2.prototype, "othersCategory", void 0), e([y({ type: p6, json: { write: true } })], f2.prototype, "legendOptions", void 0), e([y({ type: m, json: { default: null, write: true } })], f2.prototype, "outline", void 0), e([y({ type: Number, cast: o, json: { write: true } })], f2.prototype, "size", void 0), e([o2({ pieChart: "pie-chart" })], f2.prototype, "type", void 0), f2 = e([c("esri.renderers.PieChartRenderer")], f2);
var j3 = f2;

// node_modules/@arcgis/core/renderers/support/types.js
var m3 = { key: "type", base: p, typeMap: { heatmap: P, simple: p2, "unique-value": A, "class-breaks": w, "dot-density": y4, dictionary: u4, "pie-chart": j3 }, errorContext: "renderer" };
var u6 = { key: "type", base: p, typeMap: { simple: p2, "unique-value": A, "class-breaks": w, heatmap: P }, errorContext: "renderer", validate: p7 };
function p7(e3) {
  switch (e3.type) {
    case "simple":
      return c6(e3);
    case "unique-value":
      return f3(e3);
    case "class-breaks":
      return d(e3);
    case "heatmap":
      return e3;
  }
}
function c6(r2) {
  if (r2.symbol)
    return r2;
  s.getLogger("esri.renderers.support.types").error("Removed invalid 'simple' renderer without a symbol from web scene.");
}
function f3(r2) {
  const s5 = r2.uniqueValueInfos, t4 = s5 == null ? void 0 : s5.filter(({ symbol: r3, label: s6 }, t5) => (r3 || s.getLogger("esri.renderers.support.types").error(`Removed invalid unique value info ([${t5}] ${s6}) without a symbol from web scene.`), !!r3));
  return (t4 == null ? void 0 : t4.length) !== (s5 == null ? void 0 : s5.length) && (r2.uniqueValueInfos = t4), r2;
}
function d(r2) {
  const s5 = r2.classBreakInfos, t4 = s5 == null ? void 0 : s5.filter(({ symbol: r3, label: s6 }, t5) => (r3 || s.getLogger("esri.renderers.support.types").error(`Removed invalid class break info ([${t5}] ${s6}) without a symbol from web scene.`), !!r3));
  return (t4 == null ? void 0 : t4.length) !== (s5 == null ? void 0 : s5.length) && (r2.classBreakInfos = t4), r2;
}

// node_modules/@arcgis/core/renderers/support/jsonUtils.js
function t3(e3, r2) {
  return o3(e3, null, r2);
}
var s4 = u2({ types: m3 });
function o3(r2, n2, t4) {
  return r2 ? r2 && (r2.styleName || r2.styleUrl) && "uniqueValue" !== r2.type ? ((t4 == null ? void 0 : t4.messages) && t4.messages.push(new s2("renderer:unsupported", "Only UniqueValueRenderer can be referenced from a web style, but found '" + r2.type + "'", { definition: r2, context: t4 })), null) : s4(r2, n2, t4) : null;
}

export {
  a4 as a,
  m3 as m,
  u6 as u,
  t3 as t,
  o3 as o
};
//# sourceMappingURL=chunk-F64GI7MS.js.map
