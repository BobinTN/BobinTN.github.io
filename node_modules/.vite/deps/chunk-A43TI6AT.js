import {
  j,
  t3 as t
} from "./chunk-R5DM4YAB.js";

// node_modules/@arcgis/core/layers/support/layerUtils.js
var p = { Point: "SceneLayer", "3DObject": "SceneLayer", IntegratedMesh: "IntegratedMeshLayer", PointCloud: "PointCloudLayer", Building: "BuildingSceneLayer" };
function y(e) {
  const t2 = e == null ? void 0 : e.type;
  return "building-scene" === t2 || "integrated-mesh" === t2 || "point-cloud" === t2 || "scene" === t2;
}
function m(e) {
  var _a;
  return "feature" === (e == null ? void 0 : e.type) && !e.url && "memory" === ((_a = e.source) == null ? void 0 : _a.type);
}
function h(e) {
  var _a;
  return ("feature" === (e == null ? void 0 : e.type) || "subtype-group" === (e == null ? void 0 : e.type)) && "feature-layer" === ((_a = e.source) == null ? void 0 : _a.type);
}
async function L(n, r) {
  var _a;
  const i = (_a = t) == null ? void 0 : _a.findServerInfo(n);
  if (null != (i == null ? void 0 : i.currentVersion))
    return i.owningSystemUrl || null;
  const u = n.toLowerCase().indexOf("/rest/services");
  if (-1 === u)
    return null;
  const s = `${n.substring(0, u)}/rest/info`, a = null != r ? r.signal : null, { data: o } = await j(s, { query: { f: "json" }, responseType: "json", signal: a });
  return (o == null ? void 0 : o.owningSystemUrl) || null;
}
function S(e) {
  if (!("capabilities" in e))
    return false;
  switch (e.type) {
    case "csv":
    case "feature":
    case "geojson":
    case "imagery":
    case "knowledge-graph-sublayer":
    case "ogc-feature":
    case "oriented-imagery":
    case "scene":
    case "subtype-group":
    case "subtype-sublayer":
    case "wfs":
      return true;
    default:
      return false;
  }
}
function x(e) {
  return S(e) ? "effectiveCapabilities" in e ? e.effectiveCapabilities : e.capabilities : null;
}
function M(e) {
  if (!("editingEnabled" in e))
    return false;
  switch (e.type) {
    case "csv":
    case "feature":
    case "geojson":
    case "oriented-imagery":
    case "scene":
    case "subtype-group":
    case "subtype-sublayer":
      return true;
    default:
      return false;
  }
}
function O(e) {
  return !!M(e) && ("effectiveEditingEnabled" in e ? e.effectiveEditingEnabled : e.editingEnabled);
}

export {
  p,
  y,
  m,
  h,
  L,
  x,
  O
};
//# sourceMappingURL=chunk-A43TI6AT.js.map
