import {
  o
} from "./chunk-RHT6WWRD.js";
import {
  f as f2,
  i
} from "./chunk-EUGXS5RE.js";
import {
  v
} from "./chunk-IPCIO3PX.js";
import {
  T
} from "./chunk-HLGIRLYQ.js";
import {
  j
} from "./chunk-R5DM4YAB.js";
import {
  f
} from "./chunk-NSRXJNTS.js";
import {
  y2 as y
} from "./chunk-LXXF7K7W.js";
import {
  c,
  d
} from "./chunk-SBW6NNVI.js";
import {
  e
} from "./chunk-62CXLI6S.js";

// node_modules/@arcgis/core/rest/support/ProjectParameters.js
var a = class extends f {
  constructor(r) {
    super(r), this.geometries = [], this.outSpatialReference = null, this.transformation = null, this.transformForward = null;
  }
  toJSON() {
    const r = this.geometries.map((r2) => r2.toJSON()), o2 = this.geometries[0], t = {};
    return t.outSR = T(this.outSpatialReference), t.inSR = T(o2.spatialReference), t.geometries = JSON.stringify({ geometryType: v(o2), geometries: r }), this.transformation && (t.transformation = this.transformation.wkid || JSON.stringify(this.transformation)), null != this.transformForward && (t.transformForward = this.transformForward), t;
  }
};
e([y()], a.prototype, "geometries", void 0), e([y({ json: { read: { source: "outSR" } } })], a.prototype, "outSpatialReference", void 0), e([y()], a.prototype, "transformation", void 0), e([y()], a.prototype, "transformForward", void 0), a = e([c("esri.rest.support.ProjectParameters")], a);
var p = a;

// node_modules/@arcgis/core/rest/geometryService/project.js
var i2 = d(p);
async function n(o2, m, n2) {
  m = i2(m);
  const u = f2(o2), c2 = { ...u.query, f: "json", ...m.toJSON() }, j2 = m.outSpatialReference, a2 = v(m.geometries[0]), f3 = i(c2, n2);
  return j(u.path + "/project", f3).then(({ data: { geometries: r } }) => o(r, a2, j2));
}

export {
  p,
  n
};
//# sourceMappingURL=chunk-NLUGPPK2.js.map
