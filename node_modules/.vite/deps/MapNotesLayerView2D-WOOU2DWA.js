import {
  i
} from "./chunk-R6XZFUCV.js";
import "./chunk-UGJNQG6H.js";
import {
  re
} from "./chunk-VGF3CFL5.js";
import "./chunk-HBFRNOJQ.js";
import "./chunk-EQVODNOJ.js";
import "./chunk-MPQZTJY3.js";
import "./chunk-HU7IF5IM.js";
import "./chunk-BIFYNKHZ.js";
import {
  m,
  u
} from "./chunk-SBC4OSBO.js";
import "./chunk-IF6ORLWU.js";
import "./chunk-AZKAB65C.js";
import "./chunk-BV5PCIP6.js";
import "./chunk-BXZIEADJ.js";
import "./chunk-L7TO2DFS.js";
import "./chunk-A6KO3R3G.js";
import "./chunk-T56C4ORZ.js";
import "./chunk-N3XMQQIW.js";
import "./chunk-MGMW5F44.js";
import "./chunk-JWWTIFGY.js";
import "./chunk-DMXA3RSU.js";
import "./chunk-NI23WAWZ.js";
import "./chunk-GBFYGM27.js";
import "./chunk-5JUAGSVT.js";
import "./chunk-HVJP4M5N.js";
import "./chunk-2M3E5AI7.js";
import "./chunk-DSGGSKRZ.js";
import "./chunk-BRF3NTLN.js";
import "./chunk-OG2GBCUQ.js";
import "./chunk-GSATUKJ4.js";
import "./chunk-TJGMKUCX.js";
import "./chunk-UMP4LYVN.js";
import "./chunk-W3TATJ3S.js";
import "./chunk-LJAHTUH5.js";
import "./chunk-WR3GXMXV.js";
import "./chunk-NS7I2ZSY.js";
import "./chunk-3S7E6CPQ.js";
import "./chunk-XI27PUTI.js";
import "./chunk-7REGXRO2.js";
import "./chunk-L2VCMOKZ.js";
import "./chunk-PHDOV32N.js";
import "./chunk-TREPTI6V.js";
import "./chunk-Z26DT4RT.js";
import "./chunk-BUMLJETN.js";
import "./chunk-OPV4AZKI.js";
import "./chunk-46VITINB.js";
import "./chunk-XFC7DZXI.js";
import "./chunk-PPQAHSM4.js";
import "./chunk-RCLKRKWR.js";
import "./chunk-57KRYRCY.js";
import "./chunk-747B2TEO.js";
import "./chunk-4NEWABLH.js";
import "./chunk-FW2Y26A2.js";
import "./chunk-5WG7GACT.js";
import "./chunk-7Y57Y6IH.js";
import "./chunk-WND35VNG.js";
import "./chunk-W4QVNWBV.js";
import "./chunk-HIMMLBO7.js";
import "./chunk-JLSYG6MV.js";
import "./chunk-76KPSQLT.js";
import "./chunk-MVXU4PVF.js";
import "./chunk-ZBT4RUU7.js";
import "./chunk-DZE6ZO7Z.js";
import "./chunk-HHX6IUJQ.js";
import "./chunk-2FFBPEOX.js";
import "./chunk-XHP7ONEC.js";
import "./chunk-X2Y3P2BF.js";
import "./chunk-GJ4KNHRS.js";
import "./chunk-B7TIRUHV.js";
import "./chunk-EY7PGBJG.js";
import "./chunk-6M5DUIJQ.js";
import "./chunk-CMGHBCKF.js";
import "./chunk-YVNEJWNQ.js";
import "./chunk-NDKHIQMD.js";
import "./chunk-XUD6H4VO.js";
import "./chunk-LOGPPZUD.js";
import "./chunk-HYU6N3H3.js";
import "./chunk-EC5POYCL.js";
import "./chunk-X5VYGREB.js";
import "./chunk-DYYHVSPV.js";
import "./chunk-DT2VHQBL.js";
import "./chunk-DCL3YBJN.js";
import "./chunk-3ZWLSDVT.js";
import "./chunk-P3R45ANF.js";
import "./chunk-2CL4LRYG.js";
import "./chunk-64EQFPYJ.js";
import "./chunk-ICVVQFO6.js";
import "./chunk-TTZWDXX5.js";
import "./chunk-OCLKX5SY.js";
import "./chunk-SEKLTVY5.js";
import "./chunk-2Q2Q2Z4U.js";
import "./chunk-S6MJEC4A.js";
import "./chunk-T3Y5GTKO.js";
import "./chunk-M7OEQQRX.js";
import "./chunk-CSWPLQ7Q.js";
import "./chunk-KWSMYM7P.js";
import "./chunk-6BFXMZEZ.js";
import "./chunk-AMSVADDY.js";
import "./chunk-GAJBN4TM.js";
import "./chunk-24NOAXOQ.js";
import {
  c as c2
} from "./chunk-FWR4JURK.js";
import "./chunk-BELGAUAK.js";
import "./chunk-JHJVOI7Q.js";
import "./chunk-TWNBDJHC.js";
import "./chunk-HITXLR5N.js";
import "./chunk-WYZCKLOR.js";
import "./chunk-S6NERLXF.js";
import "./chunk-4TSAC52K.js";
import "./chunk-H4ZZ5S37.js";
import "./chunk-G557TGXY.js";
import "./chunk-RHT6WWRD.js";
import "./chunk-EUGXS5RE.js";
import "./chunk-IRNKV32L.js";
import "./chunk-IATM3RCE.js";
import "./chunk-GRHSIT57.js";
import "./chunk-PJQIAD5D.js";
import "./chunk-Z6KIMOUA.js";
import "./chunk-SZAJDZCO.js";
import "./chunk-M7R7REMB.js";
import "./chunk-ZZYUEH57.js";
import "./chunk-VTWXDFFD.js";
import "./chunk-IPCIO3PX.js";
import "./chunk-EIY2DYTV.js";
import "./chunk-WJ4LS3YG.js";
import "./chunk-F6MD5VOH.js";
import "./chunk-V2RPSCV3.js";
import "./chunk-LMT5JII2.js";
import "./chunk-A43TI6AT.js";
import "./chunk-4HKQSEUR.js";
import "./chunk-V3U4F2NL.js";
import "./chunk-ZB6PGKG5.js";
import "./chunk-OIIDE5GZ.js";
import "./chunk-3XSRVKBX.js";
import "./chunk-WYBZLWIA.js";
import "./chunk-MKW4ORPJ.js";
import "./chunk-YTH6VA7N.js";
import "./chunk-GINTRQSD.js";
import {
  P,
  d,
  v
} from "./chunk-TBSVVR6M.js";
import "./chunk-6TJWLWLO.js";
import "./chunk-H7BKONNV.js";
import "./chunk-K6C6RVSV.js";
import "./chunk-KBJ5Z4R2.js";
import {
  V
} from "./chunk-JUZJCTW2.js";
import "./chunk-423VNHLR.js";
import "./chunk-FN47E7YK.js";
import "./chunk-XZS3Q5K4.js";
import "./chunk-XXFXRXFH.js";
import "./chunk-CCXEAKIM.js";
import "./chunk-Y5D433JZ.js";
import "./chunk-QNOCEWCR.js";
import "./chunk-WURET5CW.js";
import "./chunk-QWPLZ3QH.js";
import "./chunk-HLGIRLYQ.js";
import "./chunk-N2K4VRZH.js";
import "./chunk-WL4VPODY.js";
import "./chunk-OMPEZIP5.js";
import "./chunk-EUTNDAIV.js";
import "./chunk-SJZIFARA.js";
import "./chunk-R5DM4YAB.js";
import "./chunk-NSRXJNTS.js";
import "./chunk-LXXF7K7W.js";
import {
  c
} from "./chunk-SBW6NNVI.js";
import {
  e
} from "./chunk-62CXLI6S.js";
import {
  e as e2
} from "./chunk-RFPH3ZTZ.js";
import "./chunk-WGO3VFQP.js";
import "./chunk-CQS47VN5.js";
import "./chunk-WJ3HJKNC.js";
import {
  k
} from "./chunk-4V6374PV.js";
import "./chunk-A34O4XB5.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/views/2d/layers/MapNotesLayerView2D.js
var d2 = "sublayers";
var u2 = "layerView";
var f = class extends m(u) {
  constructor() {
    super(...arguments), this._highlightIds = /* @__PURE__ */ new Map();
  }
  async fetchPopupFeatures(e3) {
    return Array.from(this.graphicsViews(), (i2) => i2.hitTest(e3).filter((e4) => !!e4.popupTemplate)).flat();
  }
  *graphicsViews() {
    null == this._graphicsViewsFeatureCollectionMap ? null == this._graphicsViews ? yield* [] : yield* this._graphicsViews : yield* this._graphicsViewsFeatureCollectionMap.keys();
  }
  async hitTest(e3, i2) {
    return Array.from(this.graphicsViews(), (i3) => {
      const s = i3.hitTest(e3);
      if (null != this._graphicsViewsFeatureCollectionMap) {
        const e4 = this._graphicsViewsFeatureCollectionMap.get(i3);
        for (const i4 of s)
          !i4.popupTemplate && e4.popupTemplate && (i4.popupTemplate = e4.popupTemplate), i4.sourceLayer = i4.layer = this.layer;
      }
      return s;
    }).flat().map((i3) => ({ type: "graphic", graphic: i3, layer: this.layer, mapPoint: e3 }));
  }
  highlight(e3) {
    let h;
    "number" == typeof e3 ? h = [e3] : e3 instanceof c2 ? h = [e3.uid] : Array.isArray(e3) && e3.length > 0 ? h = "number" == typeof e3[0] ? e3 : e3.map((e4) => e4 && e4.uid) : V.isCollection(e3) && (h = e3.map((e4) => e4 && e4.uid).toArray());
    const a = h == null ? void 0 : h.filter(k);
    return (a == null ? void 0 : a.length) ? (this._addHighlight(a), e2(() => this._removeHighlight(a))) : e2();
  }
  update(e3) {
    for (const i2 of this.graphicsViews())
      i2.processUpdate(e3);
  }
  attach() {
    const e3 = this.view, i2 = () => this.requestUpdate(), s = this.layer.featureCollections;
    if (null != s && s.length) {
      this._graphicsViewsFeatureCollectionMap = /* @__PURE__ */ new Map();
      for (const t of s) {
        const s2 = new i(this.view.featuresTilingScheme), r = new re({ view: e3, graphics: t.source, renderer: t.renderer, requestUpdateCallback: i2, container: s2 });
        this._graphicsViewsFeatureCollectionMap.set(r, t), this.container.addChild(r.container), this.addHandles([d(() => t.visible, (e4) => r.container.visible = e4, P), d(() => r.updating, () => this.notifyChange("updating"), P)], u2);
      }
      this._updateHighlight();
    } else
      null != this.layer.sublayers && this.addHandles(v(() => this.layer.sublayers, "change", () => this._createGraphicsViews(), { onListenerAdd: () => this._createGraphicsViews(), onListenerRemove: () => this._destroyGraphicsViews() }), d2);
  }
  detach() {
    this._destroyGraphicsViews(), this.removeHandles(d2);
  }
  moveStart() {
  }
  moveEnd() {
  }
  viewChange() {
    for (const e3 of this.graphicsViews())
      e3.viewChange();
  }
  isUpdating() {
    for (const e3 of this.graphicsViews())
      if (e3.updating)
        return true;
    return false;
  }
  _destroyGraphicsViews() {
    this.container.removeAllChildren(), this.removeHandles(u2);
    for (const e3 of this.graphicsViews())
      e3.destroy();
    this._graphicsViews = null, this._graphicsViewsFeatureCollectionMap = null;
  }
  _createGraphicsViews() {
    if (this._destroyGraphicsViews(), null == this.layer.sublayers)
      return;
    const e3 = [], i2 = this.view, s = () => this.requestUpdate();
    for (const t of this.layer.sublayers) {
      const r = new i(this.view.featuresTilingScheme);
      r.fadeTransitionEnabled = true;
      const a = new re({ view: i2, graphics: t.graphics, requestUpdateCallback: s, container: r });
      this.addHandles([t.on("graphic-update", a.graphicUpdateHandler), d(() => t.visible, (e4) => a.container.visible = e4, P), d(() => a.updating, () => this.notifyChange("updating"), P)], u2), this.container.addChild(a.container), e3.push(a);
    }
    this._graphicsViews = e3, this._updateHighlight();
  }
  _addHighlight(e3) {
    for (const i2 of e3)
      if (this._highlightIds.has(i2)) {
        const e4 = this._highlightIds.get(i2);
        this._highlightIds.set(i2, e4 + 1);
      } else
        this._highlightIds.set(i2, 1);
    this._updateHighlight();
  }
  _removeHighlight(e3) {
    for (const i2 of e3)
      if (this._highlightIds.has(i2)) {
        const e4 = this._highlightIds.get(i2) - 1;
        0 === e4 ? this._highlightIds.delete(i2) : this._highlightIds.set(i2, e4);
      }
    this._updateHighlight();
  }
  _updateHighlight() {
    const e3 = Array.from(this._highlightIds.keys());
    for (const i2 of this.graphicsViews())
      i2.setHighlight(e3);
  }
};
f = e([c("esri.views.2d.layers.MapNotesLayerView2D")], f);
var m2 = f;
export {
  m2 as default
};
//# sourceMappingURL=MapNotesLayerView2D-WOOU2DWA.js.map
