import {
  l
} from "./chunk-GKZKNWGZ.js";
import {
  d,
  e as e2,
  t
} from "./chunk-QS4IQWBR.js";
import {
  f,
  h,
  y
} from "./chunk-6JCSK7BN.js";
import {
  H
} from "./chunk-XZLDDXLF.js";
import {
  c
} from "./chunk-3S7E6CPQ.js";
import "./chunk-XI27PUTI.js";
import "./chunk-B7TIRUHV.js";
import "./chunk-EY7PGBJG.js";
import "./chunk-L7F73IMH.js";
import "./chunk-SA3C7GIT.js";
import "./chunk-P3R45ANF.js";
import "./chunk-CSWPLQ7Q.js";
import "./chunk-KWSMYM7P.js";
import "./chunk-AMSVADDY.js";
import "./chunk-HITXLR5N.js";
import "./chunk-WYZCKLOR.js";
import "./chunk-S6NERLXF.js";
import "./chunk-4TSAC52K.js";
import {
  s as s2
} from "./chunk-H4ZZ5S37.js";
import {
  u as u2
} from "./chunk-G557TGXY.js";
import "./chunk-IRNKV32L.js";
import "./chunk-IATM3RCE.js";
import "./chunk-GRHSIT57.js";
import "./chunk-PJQIAD5D.js";
import "./chunk-Z6KIMOUA.js";
import "./chunk-SZAJDZCO.js";
import "./chunk-M7R7REMB.js";
import "./chunk-ZZYUEH57.js";
import "./chunk-VTWXDFFD.js";
import "./chunk-IPCIO3PX.js";
import {
  e,
  u
} from "./chunk-EIY2DYTV.js";
import "./chunk-WJ4LS3YG.js";
import "./chunk-F6MD5VOH.js";
import "./chunk-V2RPSCV3.js";
import "./chunk-LMT5JII2.js";
import "./chunk-OIIDE5GZ.js";
import "./chunk-3XSRVKBX.js";
import "./chunk-WYBZLWIA.js";
import "./chunk-MKW4ORPJ.js";
import "./chunk-YTH6VA7N.js";
import "./chunk-GINTRQSD.js";
import "./chunk-TBSVVR6M.js";
import "./chunk-6TJWLWLO.js";
import "./chunk-H7BKONNV.js";
import "./chunk-K6C6RVSV.js";
import "./chunk-KBJ5Z4R2.js";
import "./chunk-JUZJCTW2.js";
import "./chunk-423VNHLR.js";
import "./chunk-FN47E7YK.js";
import "./chunk-XZS3Q5K4.js";
import "./chunk-XXFXRXFH.js";
import "./chunk-CCXEAKIM.js";
import "./chunk-Y5D433JZ.js";
import "./chunk-QNOCEWCR.js";
import "./chunk-WURET5CW.js";
import "./chunk-QWPLZ3QH.js";
import "./chunk-HLGIRLYQ.js";
import "./chunk-N2K4VRZH.js";
import "./chunk-WL4VPODY.js";
import "./chunk-OMPEZIP5.js";
import "./chunk-EUTNDAIV.js";
import "./chunk-SJZIFARA.js";
import "./chunk-R5DM4YAB.js";
import "./chunk-NSRXJNTS.js";
import "./chunk-LXXF7K7W.js";
import "./chunk-SBW6NNVI.js";
import "./chunk-62CXLI6S.js";
import "./chunk-RFPH3ZTZ.js";
import "./chunk-WGO3VFQP.js";
import "./chunk-CQS47VN5.js";
import {
  s3 as s
} from "./chunk-WJ3HJKNC.js";
import "./chunk-4V6374PV.js";
import "./chunk-A34O4XB5.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/symbols/support/previewSymbol2D.js
var d2 = "picture-fill";
var f2 = "picture-marker";
var y2 = "simple-fill";
var g = "simple-line";
var w = "simple-marker";
var v = "text";
var b = "Aa";
var k = t.size;
var x = t.maxSize;
var z = t.maxOutlineSize;
var L = t.lineWidth;
var M = 225;
var j = document.createElement("canvas");
function C(e3, t2) {
  const a = j.getContext("2d"), n = [];
  return t2 && (t2.weight && n.push(t2.weight), t2.size && n.push(t2.size + "px"), t2.family && n.push(t2.family)), a.font = n.join(" "), a.measureText(e3).width;
}
var S = 7.2 / 2.54;
var F = 72 / 2.54;
function U(e3) {
  if (0 === e3.length)
    return 0;
  if (e3.length > 2) {
    const t2 = e(1), a = parseFloat(e3);
    switch (e3.slice(-2)) {
      case "px":
        return a;
      case "pt":
        return a * t2;
      case "in":
        return 72 * a * t2;
      case "pc":
        return 12 * a * t2;
      case "mm":
        return a * S * t2;
      case "cm":
        return a * F * t2;
    }
  }
  return parseFloat(e3);
}
function E(e3) {
  const t2 = e3 == null ? void 0 : e3.size;
  return { width: null != t2 && "object" == typeof t2 && "width" in t2 ? u(t2.width) : null, height: null != t2 && "object" == typeof t2 && "height" in t2 ? u(t2.height) : null };
}
async function Z(e3, t2) {
  const a = t2.fill, n = e3.color;
  if ("pattern" === (a == null ? void 0 : a.type) && n && e3.type !== d2) {
    const e4 = await h(a.src, n.toCss(true));
    a.src = e4, t2.fill = a;
  }
}
async function q(e3, t2, a, l2) {
  var _a, _b, _c;
  if (!("font" in e3) || !e3.font || "text" !== t2.shape.type)
    return;
  try {
    await c(e3.font);
  } catch {
  }
  const { width: o } = E(l2), i = /[\uE600-\uE6FF]/.test(t2.shape.text);
  null != o || i || (a[0] = C(t2.shape.text, { weight: (_a = t2.font) == null ? void 0 : _a.weight, size: (_b = t2.font) == null ? void 0 : _b.size, family: (_c = t2.font) == null ? void 0 : _c.family }));
}
function D(e3, t2, a, n, o) {
  var _a;
  if (null != e3.haloColor && null != e3.haloSize) {
    o.masking ?? (o.masking = a.map(() => []));
    const i = u(e3.haloSize);
    n[0] += i, n[1] += i, a.unshift([{ ...t2, fill: null, stroke: { color: e3.haloColor, width: 2 * i, join: "round", cap: "round" } }]), o.masking.unshift([{ shape: { type: "rect", x: 0, y: 0, width: n[0] + 2 * s2, height: n[1] + 2 * s2 }, fill: [255, 255, 255], stroke: null }, { ...t2, fill: [0, 0, 0, 0], stroke: null }]);
  }
  null == e3.backgroundColor && null == e3.borderLineColor || (n[0] += 2 * s2, n[1] += 2 * s2, a.unshift([{ shape: { type: "rect", x: 0, y: 0, width: n[0], height: n[1] }, fill: e3.backgroundColor, stroke: { color: e3.borderLineColor, width: u(e3.borderLineSize) } }]), (_a = o.masking) == null ? void 0 : _a.unshift([]));
}
function O(e3, t2) {
  return e3 > t2 ? "dark" : "light";
}
function T(e3, t2) {
  var _a, _b;
  const a = "number" == typeof (t2 == null ? void 0 : t2.size) ? t2 == null ? void 0 : t2.size : null, n = null != a ? u(a) : null, o = null != (t2 == null ? void 0 : t2.maxSize) ? u(t2.maxSize) : null, r = null != (t2 == null ? void 0 : t2.rotation) ? t2.rotation : "angle" in e3 ? e3.angle : null, c2 = f(e3);
  let h2 = y(e3);
  "dark" !== P(e3, 245) || (t2 == null ? void 0 : t2.ignoreWhiteSymbols) || (h2 = { width: 0.75, ...h2, color: "#bdc3c7" });
  const m = { shape: null, fill: c2, stroke: h2, offset: [0, 0] };
  (h2 == null ? void 0 : h2.width) && (h2.width = Math.min(h2.width, z));
  const p = (h2 == null ? void 0 : h2.width) || 0;
  let M2 = null != (t2 == null ? void 0 : t2.size) && (null == (t2 == null ? void 0 : t2.scale) || (t2 == null ? void 0 : t2.scale)), j2 = 0, S2 = 0, F2 = false;
  switch (e3.type) {
    case w: {
      const a2 = e3.style, { width: i, height: s3 } = E(t2), c3 = i === s3 && null != i ? i : null != n ? n : Math.min(u(e3.size), o || x);
      switch (j2 = c3, S2 = c3, a2) {
        case "circle":
          m.shape = { type: "circle", cx: 0, cy: 0, r: 0.5 * c3 }, M2 || (j2 += p, S2 += p);
          break;
        case "cross":
          m.shape = { type: "path", path: [{ command: "M", values: [0, 0.5 * S2] }, { command: "L", values: [j2, 0.5 * S2] }, { command: "M", values: [0.5 * j2, 0] }, { command: "L", values: [0.5 * j2, S2] }] };
          break;
        case "diamond":
          m.shape = { type: "path", path: [{ command: "M", values: [0, 0.5 * S2] }, { command: "L", values: [0.5 * j2, 0] }, { command: "L", values: [j2, 0.5 * S2] }, { command: "L", values: [0.5 * j2, S2] }, { command: "Z", values: [] }] }, M2 || (j2 += p, S2 += p);
          break;
        case "square":
          m.shape = { type: "path", path: [{ command: "M", values: [0, 0] }, { command: "L", values: [j2, 0] }, { command: "L", values: [j2, S2] }, { command: "L", values: [0, S2] }, { command: "Z", values: [] }] }, M2 || (j2 += p, S2 += p), r && (F2 = true);
          break;
        case "triangle":
          m.shape = { type: "path", path: [{ command: "M", values: [0.5 * j2, 0] }, { command: "L", values: [j2, S2] }, { command: "L", values: [0, S2] }, { command: "Z", values: [] }] }, M2 || (j2 += p, S2 += p), r && (F2 = true);
          break;
        case "x":
          m.shape = { type: "path", path: [{ command: "M", values: [0, 0] }, { command: "L", values: [j2, S2] }, { command: "M", values: [j2, 0] }, { command: "L", values: [0, S2] }] }, r && (F2 = true);
          break;
        case "path":
          m.shape = { type: "path", path: e3.path || "" }, M2 || (j2 += p, S2 += p), r && (F2 = true), M2 = true;
      }
      break;
    }
    case g: {
      const { width: e4, height: a2 } = E(t2), l2 = null != a2 ? a2 : null != n ? n : p, o2 = null != e4 ? e4 : L;
      h2 && (h2.width = l2), j2 = o2, S2 = l2;
      const i = ((_a = m == null ? void 0 : m.stroke) == null ? void 0 : _a.cap) || "butt", s3 = "round" === i;
      M2 = true, m.stroke && (m.stroke.cap = "butt" === i ? "square" : i), m.shape = { type: "path", path: [{ command: "M", values: [s3 ? l2 / 2 : 0, S2 / 2] }, { command: "L", values: [s3 ? j2 - l2 / 2 : j2, S2 / 2] }] };
      break;
    }
    case d2:
    case y2: {
      const e4 = "object" == typeof (t2 == null ? void 0 : t2.symbolConfig) && !!((_b = t2 == null ? void 0 : t2.symbolConfig) == null ? void 0 : _b.isSquareFill), { width: a2, height: l2 } = E(t2);
      j2 = !e4 && a2 !== l2 || null == a2 ? null != n ? n : k : a2, S2 = !e4 && a2 !== l2 || null == l2 ? j2 : l2, M2 || (j2 += p, S2 += p), M2 = true, m.shape = e4 ? { type: "path", path: [{ command: "M", values: [0, 0] }, { command: "L", values: [j2, 0] }, { command: "L", values: [j2, S2] }, { command: "L", values: [0, S2] }, { command: "L", values: [0, 0] }, { command: "Z", values: [] }] } : e2.fill[0];
      break;
    }
    case f2: {
      const a2 = Math.min(u(e3.width), o || x), i = Math.min(u(e3.height), o || x), { width: s3, height: c3 } = E(t2), u3 = s3 === c3 && null != s3 ? s3 : null != n ? n : Math.max(a2, i), h3 = a2 / i;
      j2 = h3 <= 1 ? Math.ceil(u3 * h3) : u3, S2 = h3 <= 1 ? u3 : Math.ceil(u3 / h3), m.shape = { type: "image", x: -Math.round(j2 / 2), y: -Math.round(S2 / 2), width: j2, height: S2, src: e3.url || "" }, r && (F2 = true);
      break;
    }
    case v: {
      const a2 = e3, i = (t2 == null ? void 0 : t2.overrideText) || a2.text || b, s3 = a2.font, { width: r2, height: c3 } = E(t2), u3 = null != c3 ? c3 : null != n ? n : Math.min(u(s3.size), o || x), h3 = C(i, { weight: s3.weight, size: u3, family: s3.family }), p2 = /[\uE600-\uE6FF]/.test(i);
      j2 = r2 ?? (p2 ? u3 : h3), S2 = u3;
      let d3 = 0.25 * U((s3 ? u3 : 0).toString());
      p2 && (d3 += 5), m.shape = { type: "text", text: i, x: a2.xoffset || 0, y: a2.yoffset || d3, align: "middle", alignBaseline: a2.verticalAlignment, decoration: s3 && s3.decoration, rotated: a2.rotated, kerning: a2.kerning }, m.font = s3 && { size: u3, style: s3.style, decoration: s3.decoration, weight: s3.weight, family: s3.family };
      break;
    }
  }
  return { shapeDescriptor: m, size: [j2, S2], renderOptions: { node: t2 == null ? void 0 : t2.node, scale: M2, opacity: t2 == null ? void 0 : t2.opacity, rotation: r, useRotationSize: F2, effectView: t2 == null ? void 0 : t2.effectView, ariaLabel: t2 == null ? void 0 : t2.ariaLabel } };
}
async function A(e3, t2) {
  var _a;
  const { shapeDescriptor: n, size: l2, renderOptions: o } = T(e3, t2);
  if (!n.shape)
    throw new s("symbolPreview: renderPreviewHTML2D", "symbol not supported.");
  await Z(e3, n), await q(e3, n, l2, t2);
  const i = [[n]];
  if ("object" == typeof (t2 == null ? void 0 : t2.symbolConfig) && ((_a = t2 == null ? void 0 : t2.symbolConfig) == null ? void 0 : _a.applyColorModulation)) {
    const e4 = 0.6 * l2[0];
    i.unshift([{ ...n, offset: [-e4, 0], fill: d(n.fill, -0.3) }]), i.push([{ ...n, offset: [e4, 0], fill: d(n.fill, 0.3) }]), l2[0] += 2 * e4, o.scale = false;
  }
  return "text" === e3.type && D(e3, n, i, l2, o), l(i, l2, o);
}
function P(a, n = M) {
  const l2 = f(a), o = y(a), r = !l2 || "type" in l2 ? null : new u2(l2), c2 = (o == null ? void 0 : o.color) ? new u2(o == null ? void 0 : o.color) : null, u3 = r ? O(H(r), n) : null, h2 = c2 ? O(H(c2), n) : null;
  return h2 ? u3 ? u3 === h2 ? u3 : n >= M ? "light" : "dark" : h2 : u3;
}
export {
  P as getContrastingBackgroundTheme,
  T as getRenderSymbolParameters,
  A as previewSymbol2D
};
//# sourceMappingURL=previewSymbol2D-NFP6KRZQ.js.map
