import {
  p
} from "./chunk-H6KFOOBX.js";
import "./chunk-LBDV3JOS.js";
import {
  f as f2,
  i,
  s
} from "./chunk-EUGXS5RE.js";
import "./chunk-ZZYUEH57.js";
import "./chunk-VTWXDFFD.js";
import "./chunk-IPCIO3PX.js";
import "./chunk-OIIDE5GZ.js";
import "./chunk-3XSRVKBX.js";
import "./chunk-WYBZLWIA.js";
import "./chunk-MKW4ORPJ.js";
import "./chunk-YTH6VA7N.js";
import "./chunk-GINTRQSD.js";
import "./chunk-Y5D433JZ.js";
import "./chunk-QNOCEWCR.js";
import "./chunk-WURET5CW.js";
import "./chunk-QWPLZ3QH.js";
import "./chunk-HLGIRLYQ.js";
import "./chunk-OMPEZIP5.js";
import "./chunk-EUTNDAIV.js";
import "./chunk-SJZIFARA.js";
import {
  j
} from "./chunk-R5DM4YAB.js";
import {
  f
} from "./chunk-NSRXJNTS.js";
import {
  y2 as y
} from "./chunk-LXXF7K7W.js";
import {
  c
} from "./chunk-SBW6NNVI.js";
import {
  e
} from "./chunk-62CXLI6S.js";
import "./chunk-RFPH3ZTZ.js";
import "./chunk-WGO3VFQP.js";
import "./chunk-CQS47VN5.js";
import "./chunk-WJ3HJKNC.js";
import "./chunk-4V6374PV.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/rest/networks/support/AssociationGeometriesResult.js
var p2 = class extends f {
  constructor(o) {
    super(o), this.maxGeometryCountExceeded = false, this.associations = [];
  }
};
e([y({ type: Boolean, json: { write: true } })], p2.prototype, "maxGeometryCountExceeded", void 0), e([y({ type: [p], json: { write: true } })], p2.prototype, "associations", void 0), p2 = e([c("esri.rest.networks.support.AssociationGeometriesResult")], p2);
var c2 = p2;

// node_modules/@arcgis/core/rest/networks/synthesizeAssociationGeometries.js
async function n(r, n2, c3) {
  const a = f2(r), f3 = { ...n2.toJSON(), f: "json" }, m = s({ ...a.query, ...f3 });
  c3 ? c3.method = "post" : c3 = { method: "post" };
  const p3 = i(m, c3), u = `${a.path}/synthesizeAssociationGeometries`;
  return j(u, p3).then((o) => i2(o, n2.outSpatialReference));
}
function i2(o, t) {
  const { data: e2 } = o, s2 = c2.fromJSON(e2);
  if (t)
    for (const r of s2.associations)
      r.geometry.spatialReference = t.clone();
  return s2;
}
export {
  n as synthesizeAssociationGeometries
};
//# sourceMappingURL=synthesizeAssociationGeometries-ABATQIO4.js.map
