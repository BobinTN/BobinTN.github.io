import {
  V
} from "./chunk-JUZJCTW2.js";
import {
  g
} from "./chunk-LXXF7K7W.js";
import {
  t
} from "./chunk-SBW6NNVI.js";

// node_modules/@arcgis/core/core/accessorSupport/diffUtils.js
var o = /* @__PURE__ */ new Set(["esri.Color", "esri.portal.Portal", "esri.symbols.support.Symbol3DAnchorPosition2D", "esri.symbols.support.Symbol3DAnchorPosition3D"]);
function r(t2) {
  return t2 instanceof g;
}
function f(e) {
  return e instanceof V ? Object.keys(e.items) : r(e) ? t(e).keys() : e ? Object.keys(e) : [];
}
function l(e, n) {
  return e instanceof V ? e.items[n] : e[n];
}
function i(e, t2) {
  return !(!Array.isArray(e) || !Array.isArray(t2)) && e.length !== t2.length;
}
function u(e) {
  return e ? e.declaredClass : null;
}
function c(e, t2) {
  var _a;
  const n = e.diff;
  if (n && "function" == typeof n)
    return n(e, t2);
  const s2 = f(e), p2 = f(t2);
  if (0 === s2.length && 0 === p2.length)
    return;
  if (!s2.length || !p2.length || i(e, t2))
    return { type: "complete", oldValue: e, newValue: t2 };
  const a2 = p2.filter((e2) => !s2.includes(e2)), y = s2.filter((e2) => !p2.includes(e2)), m = s2.filter((n2) => p2.includes(n2) && l(e, n2) !== l(t2, n2)).concat(a2, y).sort(), d = u(e);
  if (d && o.has(d) && m.length)
    return { type: "complete", oldValue: e, newValue: t2 };
  let h;
  const b = r(e) && r(t2);
  for (const o2 of m) {
    const r2 = l(e, o2), f2 = l(t2, o2);
    let i2;
    if ((b || "function" != typeof r2 && "function" != typeof f2) && (r2 !== f2 && (null != r2 || null != f2))) {
      if (n && n[o2] && "function" == typeof n[o2])
        i2 = (_a = n[o2]) == null ? void 0 : _a.call(n, r2, f2);
      else if (r2 instanceof Date && f2 instanceof Date) {
        if (r2.getTime() === f2.getTime())
          continue;
        i2 = { type: "complete", oldValue: r2, newValue: f2 };
      } else
        i2 = "object" == typeof r2 && "object" == typeof f2 && u(r2) === u(f2) ? c(r2, f2) : { type: "complete", oldValue: r2, newValue: f2 };
      null != i2 && (null != h ? h.diff[o2] = i2 : h = { type: "partial", diff: { [o2]: i2 } });
    }
  }
  return h;
}
function s(e, t2) {
  if (null == e)
    return false;
  const n = t2.split(".");
  let o2 = e;
  for (const r2 of n) {
    if ("complete" === o2.type)
      return true;
    if ("partial" !== o2.type)
      return false;
    {
      const e2 = o2.diff[r2];
      if (!e2)
        return false;
      o2 = e2;
    }
  }
  return true;
}
function p(e, t2) {
  for (const n of t2)
    if (s(e, n))
      return true;
  return false;
}
function a(e, t2) {
  if ("function" != typeof e && "function" != typeof t2 && (null != e || null != t2))
    return null == e || null == t2 || "object" == typeof e && "object" == typeof t2 && u(e) !== u(t2) ? { type: "complete", oldValue: e, newValue: t2 } : c(e, t2);
}

export {
  s,
  p,
  a
};
//# sourceMappingURL=chunk-SEKLTVY5.js.map
