import {
  o,
  s
} from "./chunk-YTH6VA7N.js";

// node_modules/@arcgis/core/core/mathUtils.js
var u = new Float32Array(1);
function e(n) {
  --n;
  for (let t = 1; t < 32; t <<= 1)
    n |= n >> t;
  return n + 1;
}
function i(n, t, r2) {
  return Math.min(Math.max(n, t), r2);
}
function o2(n) {
  return 0 == (n & n - 1);
}
function c(n) {
  return n--, n |= n >> 1, n |= n >> 2, n |= n >> 4, n |= n >> 8, n |= n >> 16, ++n;
}
function s2(n, t, r2) {
  return n + (t - n) * r2;
}
function h(n, t, r2, u2, e2) {
  return s2(u2, e2, (n - t) / (r2 - t));
}
function M(n) {
  return n * Math.PI / 180;
}
function m(n) {
  return 180 * n / Math.PI;
}
function l(n) {
  return Math.acos(i(n, -1, 1));
}
function F(n) {
  return Math.asin(i(n, -1, 1));
}
function N(n, t, r2 = 1e-6) {
  if (n === t)
    return true;
  if (!Number.isFinite(n) || !Number.isFinite(t))
    return false;
  return (n > t ? n - t : t - n) <= r2;
}
var g = new DataView(new ArrayBuffer(Float64Array.BYTES_PER_ELEMENT));
function E(n) {
  return g.setFloat64(0, n), g.getBigInt64(0);
}
function B(n) {
  return g.setBigInt64(0, n), g.getFloat64(0);
}
var I = BigInt("1000000");
var w = x(1);
function x(n) {
  const t = E(n = Math.abs(n)), r2 = B(t <= I ? I : t - I);
  return Math.abs(n - r2);
}
function A(n) {
  return P(Math.max(-D, Math.min(n, D)));
}
function P(n) {
  return u[0] = n, u[0];
}
function v(r2, u2) {
  const e2 = s(r2), i2 = F(r2[2] / e2), a = Math.atan2(r2[1] / e2, r2[0] / e2);
  return o(u2, e2, i2, a), u2;
}
function _(n) {
  const t = n[0] * n[0] + n[1] * n[1] + n[2] * n[2], r2 = n[3] * n[3] + n[4] * n[4] + n[5] * n[5], u2 = n[6] * n[6] + n[7] * n[7] + n[8] * n[8];
  return !(N(t, 1) && N(r2, 1) && N(u2, 1));
}
var D = P(34028234663852886e22);

export {
  e,
  i,
  o2 as o,
  c,
  s2 as s,
  h,
  M,
  m,
  l,
  F,
  N,
  A,
  v,
  _,
  D
};
//# sourceMappingURL=chunk-MKW4ORPJ.js.map
