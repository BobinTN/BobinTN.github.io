import {
  c,
  j as j2
} from "./chunk-XXFXRXFH.js";
import {
  K,
  Rt,
  j
} from "./chunk-R5DM4YAB.js";
import {
  a
} from "./chunk-RFPH3ZTZ.js";
import {
  s3 as s
} from "./chunk-WJ3HJKNC.js";
import {
  has
} from "./chunk-4V6374PV.js";

// node_modules/@arcgis/core/support/featureFlags.js
var e = () => !!has("enable-feature:force-wosr");
var t = () => has.add("enable-feature:direct-3d-object-feature-layer-display", true, true, true);
var i = () => has.add("enable-feature:direct-3d-object-feature-layer-display", false, true, true);
var d = () => has.add("enable-i3s-patching", true, true, true);
var c2 = () => has.add("enable-i3s-patching", false, true, true);
var n = () => !!has("enable-feature:SceneLayer-editing");
var l = (e2 = "i3s-patching") => {
  switch (c2(), i(), has.add("enable-feature:SceneLayer-editing", true, true, true), e2) {
    case "feature-layer-view":
      t();
      break;
    case "i3s-patching":
      d();
  }
};
l("i3s-patching");

// node_modules/@arcgis/core/symbols/support/styleUtils.js
var u = {};
async function f(e2, t2) {
  try {
    return { data: (await b(e2, t2)).data, baseUrl: Rt(e2), styleUrl: e2 };
  } catch (o) {
    return a(o), null;
  }
}
function i2(e2, t2, r) {
  const o = null != t2.portal ? t2.portal : j2.getDefault();
  let s2;
  const l2 = `${o.url} - ${o.user && o.user.username} - ${e2}`;
  return u[l2] || (u[l2] = y(e2, o, r).then((e3) => (s2 = e3, e3.fetchData())).then((t3) => ({ data: t3, baseUrl: s2.itemUrl ?? "", styleName: e2 }))), u[l2];
}
function y(e2, r, o) {
  return r.load(o).then(() => {
    const t2 = new c({ disableExtraQuery: true, query: `owner:${h} AND type:${j3} AND typekeywords:"${e2}"` });
    return r.queryItems(t2, o);
  }).then(({ results: r2 }) => {
    var _a;
    let s2 = null;
    const n2 = e2.toLowerCase();
    if (r2 && Array.isArray(r2))
      for (const e3 of r2) {
        const t2 = (_a = e3.typeKeywords) == null ? void 0 : _a.some((e4) => e4.toLowerCase() === n2);
        if (t2 && e3.type === j3 && e3.owner === h) {
          s2 = e3;
          break;
        }
      }
    if (!s2)
      throw new s("symbolstyleutils:style-not-found", `The style '${e2}' could not be found`, { styleName: e2 });
    return s2.load(o);
  });
}
function c3(e2, r, o) {
  return null != (e2 == null ? void 0 : e2.styleUrl) ? f(e2.styleUrl, o) : null != (e2 == null ? void 0 : e2.styleName) ? i2(e2.styleName, r, o) : Promise.reject(new s("symbolstyleutils:style-url-and-name-missing", "Either styleUrl or styleName is required to resolve a style"));
}
function p(e2) {
  return null === e2 || "CIMSymbolReference" === e2.type ? e2 : { type: "CIMSymbolReference", symbol: e2 };
}
function d2(e2, t2, r = ["gltf"]) {
  if ("cimRef" === t2)
    return e2.cimRef;
  if (e2.formatInfos && !e())
    for (const o of r) {
      const t3 = e2.formatInfos.find((e3) => e3.type === o);
      if (t3)
        return t3.href;
    }
  return e2.webRef;
}
function b(t2, r) {
  const s2 = { responseType: "json", query: { f: "json" }, ...r };
  return j(K(t2), s2);
}
var h = "esri_en";
var j3 = "Style";
var w = "https://cdn.arcgis.com/sharing/rest/content/items/220936cc6ed342c9937abd8f180e7d1e/resources/styles/cim/{SymbolName}.json?f=json";

export {
  n,
  c3 as c,
  p,
  d2 as d,
  b,
  w
};
//# sourceMappingURL=chunk-HX5GOVNX.js.map
