import {
  o as o3
} from "./chunk-552CETTQ.js";
import {
  o as o2
} from "./chunk-5W73DLIB.js";
import {
  i
} from "./chunk-BXZIEADJ.js";
import {
  t as t2
} from "./chunk-EX6UN27G.js";
import {
  a as a4
} from "./chunk-ZILXWPAR.js";
import {
  j as j2
} from "./chunk-POSLR7O2.js";
import {
  f as f2
} from "./chunk-VOYU5TTK.js";
import {
  a as a3
} from "./chunk-P5VIVFJT.js";
import "./chunk-SA3C7GIT.js";
import "./chunk-P3R45ANF.js";
import {
  t
} from "./chunk-PIEUUBJ5.js";
import {
  u
} from "./chunk-YIAYIZOZ.js";
import {
  S as S2,
  m
} from "./chunk-P5GW5DPX.js";
import {
  c as c3,
  d as d4
} from "./chunk-VIOPOI6P.js";
import "./chunk-HU7QYAVQ.js";
import "./chunk-T3Y5GTKO.js";
import "./chunk-6B7VJB6C.js";
import {
  l
} from "./chunk-2AXTYAMY.js";
import {
  b
} from "./chunk-YXRSJYLG.js";
import {
  c as c2
} from "./chunk-FWR4JURK.js";
import {
  k as k2
} from "./chunk-BELGAUAK.js";
import {
  s as s5
} from "./chunk-JHJVOI7Q.js";
import "./chunk-HITXLR5N.js";
import "./chunk-WYZCKLOR.js";
import "./chunk-S6NERLXF.js";
import "./chunk-4TSAC52K.js";
import "./chunk-H4ZZ5S37.js";
import "./chunk-G557TGXY.js";
import "./chunk-WOGT6UK2.js";
import "./chunk-IRNKV32L.js";
import "./chunk-IATM3RCE.js";
import "./chunk-BEALJUHO.js";
import "./chunk-GRHSIT57.js";
import "./chunk-PJQIAD5D.js";
import "./chunk-Z6KIMOUA.js";
import "./chunk-SZAJDZCO.js";
import "./chunk-M7R7REMB.js";
import "./chunk-ZZYUEH57.js";
import "./chunk-VTWXDFFD.js";
import "./chunk-IPCIO3PX.js";
import "./chunk-EIY2DYTV.js";
import "./chunk-WJ4LS3YG.js";
import "./chunk-F6MD5VOH.js";
import "./chunk-V2RPSCV3.js";
import {
  C as C2
} from "./chunk-AOJ6OCPK.js";
import "./chunk-LMT5JII2.js";
import "./chunk-A43TI6AT.js";
import "./chunk-BHJVWW2P.js";
import "./chunk-4HKQSEUR.js";
import "./chunk-V3U4F2NL.js";
import "./chunk-ZB6PGKG5.js";
import "./chunk-OIIDE5GZ.js";
import "./chunk-3XSRVKBX.js";
import "./chunk-WYBZLWIA.js";
import "./chunk-MKW4ORPJ.js";
import "./chunk-YTH6VA7N.js";
import "./chunk-GINTRQSD.js";
import {
  C,
  d as d2,
  v
} from "./chunk-TBSVVR6M.js";
import "./chunk-6TJWLWLO.js";
import "./chunk-H7BKONNV.js";
import "./chunk-K6C6RVSV.js";
import "./chunk-KBJ5Z4R2.js";
import {
  V
} from "./chunk-JUZJCTW2.js";
import "./chunk-423VNHLR.js";
import "./chunk-FN47E7YK.js";
import "./chunk-XZS3Q5K4.js";
import "./chunk-XXFXRXFH.js";
import "./chunk-CCXEAKIM.js";
import {
  M
} from "./chunk-Y5D433JZ.js";
import "./chunk-QNOCEWCR.js";
import {
  o
} from "./chunk-WURET5CW.js";
import {
  f,
  r
} from "./chunk-QWPLZ3QH.js";
import {
  d2 as d3
} from "./chunk-HLGIRLYQ.js";
import "./chunk-N2K4VRZH.js";
import "./chunk-WL4VPODY.js";
import {
  s as s4
} from "./chunk-OMPEZIP5.js";
import {
  s as s3
} from "./chunk-EUTNDAIV.js";
import "./chunk-SJZIFARA.js";
import {
  Et,
  I,
  S,
  j,
  x
} from "./chunk-R5DM4YAB.js";
import {
  g
} from "./chunk-NSRXJNTS.js";
import {
  y2 as y
} from "./chunk-LXXF7K7W.js";
import {
  T,
  c,
  d
} from "./chunk-SBW6NNVI.js";
import {
  e
} from "./chunk-62CXLI6S.js";
import {
  a as a2
} from "./chunk-RFPH3ZTZ.js";
import "./chunk-WGO3VFQP.js";
import "./chunk-CQS47VN5.js";
import {
  a,
  s,
  s3 as s2
} from "./chunk-WJ3HJKNC.js";
import {
  k
} from "./chunk-4V6374PV.js";
import "./chunk-A34O4XB5.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/layers/support/WMSSublayer.js
var h;
var c4 = 0;
var m2 = h = class extends s5(S2) {
  constructor(e2) {
    super(e2), this.description = null, this.dimensions = null, this.fullExtent = null, this.fullExtents = null, this.legendUrl = null, this.legendEnabled = true, this.layer = null, this.maxScale = 0, this.minScale = 0, this.name = null, this.parent = null, this.popupEnabled = false, this.queryable = false, this.sublayers = null, this.spatialReferences = null, this.title = null, this.addHandles([v(() => this.sublayers, "after-add", ({ item: e3 }) => {
      e3.parent = this, e3.layer = this.layer;
    }, C), v(() => this.sublayers, "after-remove", ({ item: e3 }) => {
      e3.layer = e3.parent = null;
    }, C), d2(() => this.sublayers, (e3, t3) => {
      if (t3)
        for (const r2 of t3)
          r2.layer = r2.parent = null;
      if (e3)
        for (const r2 of e3)
          r2.parent = this, r2.layer = this.layer;
    }, C), d2(() => this.layer, (e3) => {
      if (this.sublayers)
        for (const t3 of this.sublayers)
          t3.layer = e3;
    }, C)]);
  }
  get id() {
    const e2 = this._get("id");
    return e2 ?? c4++;
  }
  set id(e2) {
    this._set("id", e2);
  }
  readLegendUrl(e2, t3) {
    return t3.legendUrl ?? t3.legendURL ?? null;
  }
  get effectiveScaleRange() {
    const { minScale: e2, maxScale: t3 } = this;
    return { minScale: e2, maxScale: t3 };
  }
  castSublayers(e2) {
    return d(V.ofType(h), e2);
  }
  set visible(e2) {
    this._setAndNotifyLayer("visible", e2);
  }
  clone() {
    var _a, _b, _c;
    const e2 = new h();
    return this.hasOwnProperty("description") && (e2.description = this.description), this.hasOwnProperty("fullExtent") && (e2.fullExtent = this.fullExtent.clone()), this.hasOwnProperty("fullExtents") && (e2.fullExtents = ((_a = this.fullExtents) == null ? void 0 : _a.map((e3) => e3.clone())) ?? null), this.hasOwnProperty("legendUrl") && (e2.legendUrl = this.legendUrl), this.hasOwnProperty("legendEnabled") && (e2.legendEnabled = this.legendEnabled), this.hasOwnProperty("layer") && (e2.layer = this.layer), this.hasOwnProperty("name") && (e2.name = this.name), this.hasOwnProperty("parent") && (e2.parent = this.parent), this.hasOwnProperty("queryable") && (e2.queryable = this.queryable), this.hasOwnProperty("sublayers") && (e2.sublayers = (_b = this.sublayers) == null ? void 0 : _b.map((e3) => e3.clone())), this.hasOwnProperty("spatialReferences") && (e2.spatialReferences = (_c = this.spatialReferences) == null ? void 0 : _c.map((e3) => e3)), this.hasOwnProperty("visible") && (e2.visible = this.visible), this.hasOwnProperty("title") && (e2.title = this.title), e2;
  }
  _setAndNotifyLayer(e2, t3) {
    const r2 = this.layer;
    this._get(e2) !== t3 && (this._set(e2, t3), r2 && r2.emit("wms-sublayer-update", { propertyName: e2, id: this.id }));
  }
};
e([y()], m2.prototype, "description", void 0), e([y({ readOnly: true })], m2.prototype, "dimensions", void 0), e([y({ type: M, json: { name: "extent" } })], m2.prototype, "fullExtent", void 0), e([y()], m2.prototype, "fullExtents", void 0), e([y({ type: Number, json: { write: { enabled: false, overridePolicy: () => ({ ignoreOrigin: true, enabled: true }) } } })], m2.prototype, "id", null), e([y({ type: String, json: { name: "legendUrl", write: { ignoreOrigin: true } } })], m2.prototype, "legendUrl", void 0), e([o("legendUrl", ["legendUrl", "legendURL"])], m2.prototype, "readLegendUrl", null), e([y({ type: Boolean, json: { name: "showLegend", origins: { "web-map": { read: false, write: false }, "web-scene": { read: false, write: false } } } })], m2.prototype, "legendEnabled", void 0), e([y()], m2.prototype, "layer", void 0), e([y()], m2.prototype, "maxScale", void 0), e([y()], m2.prototype, "minScale", void 0), e([y({ readOnly: true })], m2.prototype, "effectiveScaleRange", null), e([y({ type: String, json: { write: { ignoreOrigin: true } } })], m2.prototype, "name", void 0), e([y()], m2.prototype, "parent", void 0), e([y({ type: Boolean, json: { read: { source: "showPopup" }, write: { ignoreOrigin: true, target: "showPopup" } } })], m2.prototype, "popupEnabled", void 0), e([y({ type: Boolean, json: { write: { ignoreOrigin: true } } })], m2.prototype, "queryable", void 0), e([y()], m2.prototype, "sublayers", void 0), e([s4("sublayers")], m2.prototype, "castSublayers", null), e([y({ type: [Number], json: { read: { source: "spatialReferences" } } })], m2.prototype, "spatialReferences", void 0), e([y({ type: String, json: { write: { ignoreOrigin: true } } })], m2.prototype, "title", void 0), e([y({ type: Boolean, value: true, json: { read: { source: "defaultVisibility" } } })], m2.prototype, "visible", null), m2 = h = e([c("esri.layers.support.WMSSublayer")], m2);
var f3 = m2;

// node_modules/@arcgis/core/layers/support/wmsUtils.js
var o4 = { 84: 4326, 83: 4269, 27: 4267 };
function l2(n) {
  if (!n)
    return null;
  const i2 = { idCounter: -1 };
  if ("string" == typeof n) {
    n = new DOMParser().parseFromString(n, "text/xml");
  }
  const s6 = n.documentElement;
  if ("ServiceExceptionReport" === s6.nodeName) {
    const e2 = Array.prototype.slice.call(s6.childNodes).map((e3) => e3.textContent).join("\r\n");
    throw new s2("wmslayer:wms-capabilities-xml-is-not-valid", "The server returned errors when the WMS capabilities were requested.", e2);
  }
  const o5 = d5("Capability", s6), l3 = d5("Service", s6), a6 = o5 && d5("Request", o5);
  if (!o5 || !l3 || !a6)
    return null;
  const m4 = d5("Layer", o5);
  if (!m4)
    return null;
  const f5 = "WMS_Capabilities" === s6.nodeName || "WMT_MS_Capabilities" === s6.nodeName ? s6.getAttribute("version") : "1.3.0", p2 = h2("Title", l3, "") || h2("Name", l3, ""), x3 = h2("AccessConstraints", l3, ""), y3 = /^none$/i.test(x3) ? "" : x3, S4 = h2("Abstract", l3, ""), E = parseInt(h2("MaxWidth", l3, "5000"), 10), w2 = parseInt(h2("MaxHeight", l3, "5000"), 10), L = N(a6, "GetMap"), M3 = g2(a6, "GetMap"), C4 = b2(m4, f5, i2);
  if (!C4)
    return null;
  let v3, I3 = 0;
  const R2 = Array.prototype.slice.call(o5.childNodes), U2 = C4.sublayers ?? [], T3 = (e2) => {
    null != e2 && U2.push(e2);
  };
  R2.forEach((e2) => {
    "Layer" === e2.nodeName && (0 === I3 ? v3 = e2 : 1 === I3 ? (C4.name && (C4.name = "", T3(b2(v3, f5, i2))), T3(b2(e2, f5, i2))) : T3(b2(e2, f5, i2)), I3++);
  });
  let V4 = C4.sublayers, O2 = C4.extent;
  const _2 = C4.fullExtents ?? [];
  if (V4 || (V4 = []), 0 === V4.length && V4.push(C4), !O2) {
    const e2 = new M(V4[0].extent);
    C4.extent = e2.toJSON(), O2 = C4.extent;
  }
  const B = C4.spatialReferences.length > 0 ? C4.spatialReferences : u2(C4), D = g2(a6, "GetFeatureInfo"), j3 = D ? N(a6, "GetFeatureInfo") : null, k3 = c5(V4), q = C4.minScale || 0, X2 = C4.maxScale || 0, G = C4.dimensions ?? [], W = k3.reduce((e2, t3) => e2.concat(t3.dimensions ?? []), []), P = G.concat(W).filter(F);
  let $ = null;
  if (P.length) {
    const t3 = P.map((e2) => {
      const { extent: t4 } = e2;
      return A(t4) ? t4.map((e3) => e3.getTime()) : t4 == null ? void 0 : t4.map((e3) => [e3.min.getTime(), e3.max.getTime()]);
    }).flat(2).filter(k);
    $ = { startTimeField: null, endTimeField: null, trackIdField: void 0, timeExtent: [Math.min(...t3), Math.max(...t3)] };
  }
  return { copyright: y3, description: S4, dimensions: G, extent: O2, fullExtents: _2, featureInfoFormats: j3, featureInfoUrl: D, mapUrl: M3, maxWidth: E, maxHeight: w2, maxScale: X2, minScale: q, layers: k3, spatialReferences: B, supportedImageFormatTypes: L, timeInfo: $, title: p2, version: f5 };
}
function a5(e2) {
  const t3 = e2.filter((e3) => e3.popupEnabled && e3.name && e3.queryable);
  return t3.length ? t3.map(({ name: e3 }) => e3).join() : null;
}
function u2(e2) {
  if (e2.spatialReferences.length > 0)
    return e2.spatialReferences;
  if (e2.sublayers)
    for (const t3 of e2.sublayers) {
      const e3 = u2(t3);
      if (e3.length > 0)
        return e3;
    }
  return [];
}
function c5(e2) {
  var _a;
  let t3 = [];
  for (const n of e2)
    t3.push(n), ((_a = n.sublayers) == null ? void 0 : _a.length) && (t3 = t3.concat(c5(n.sublayers)), delete n.sublayers);
  return t3;
}
function m3(e2, t3, n) {
  return t3.getAttribute(e2) ?? n;
}
function f4(e2, t3, n, r2) {
  const i2 = d5(e2, n);
  return i2 ? m3(t3, i2, r2) : r2;
}
function d5(e2, t3) {
  for (let n = 0; n < t3.childNodes.length; n++) {
    const r2 = t3.childNodes[n];
    if (S3(r2) && r2.nodeName === e2)
      return r2;
  }
  return null;
}
function p(e2, t3) {
  if (null == t3)
    return [];
  const n = [];
  for (let r2 = 0; r2 < t3.childNodes.length; r2++) {
    const i2 = t3.childNodes[r2];
    S3(i2) && i2.nodeName === e2 && n.push(i2);
  }
  return n;
}
function h2(e2, t3, n) {
  var _a;
  return ((_a = d5(e2, t3)) == null ? void 0 : _a.textContent) ?? n;
}
function x2(e2, t3, n) {
  if (!e2)
    return null;
  const s6 = parseFloat(e2.getAttribute("minx")), o5 = parseFloat(e2.getAttribute("miny")), l3 = parseFloat(e2.getAttribute("maxx")), a6 = parseFloat(e2.getAttribute("maxy"));
  let u3, c6, m4, f5;
  n ? (u3 = isNaN(o5) ? -Number.MAX_VALUE : o5, c6 = isNaN(s6) ? -Number.MAX_VALUE : s6, m4 = isNaN(a6) ? Number.MAX_VALUE : a6, f5 = isNaN(l3) ? Number.MAX_VALUE : l3) : (u3 = isNaN(s6) ? -Number.MAX_VALUE : s6, c6 = isNaN(o5) ? -Number.MAX_VALUE : o5, m4 = isNaN(l3) ? Number.MAX_VALUE : l3, f5 = isNaN(a6) ? Number.MAX_VALUE : a6);
  const d6 = new f({ wkid: t3 });
  return new M({ xmin: u3, ymin: c6, xmax: m4, ymax: f5, spatialReference: d6 });
}
function g2(e2, t3) {
  const n = d5(t3, e2);
  if (n) {
    const e3 = d5("DCPType", n);
    if (e3) {
      const t4 = d5("HTTP", e3);
      if (t4) {
        const e4 = d5("Get", t4);
        if (e4) {
          let t5 = f4("OnlineResource", "xlink:href", e4, null);
          if (t5)
            return t5.indexOf("&") === t5.length - 1 && (t5 = t5.substring(0, t5.length - 1)), M2(t5, ["service", "request"]);
        }
      }
    }
  }
  return null;
}
function N(t3, n) {
  const r2 = p("Operation", t3);
  if (!r2.length) {
    return p("Format", d5(n, t3)).map(({ textContent: e2 }) => e2).filter(k);
  }
  const i2 = [];
  for (const e2 of r2)
    if (e2.getAttribute("name") === n) {
      const t4 = p("Format", e2);
      for (const { textContent: e3 } of t4)
        null != e3 && i2.push(e3);
    }
  return i2;
}
function y2(e2, t3, n) {
  const r2 = d5(t3, e2);
  if (!r2)
    return n;
  const { textContent: i2 } = r2;
  if (null == i2 || "" === i2)
    return n;
  const s6 = Number(i2);
  return isNaN(s6) ? n : s6;
}
function b2(e2, t3, n) {
  if (!e2)
    return null;
  const l3 = { id: n.idCounter++, fullExtents: [], parentLayerId: null, queryable: "1" === e2.getAttribute("queryable"), spatialReferences: [], sublayers: null }, a6 = d5("LatLonBoundingBox", e2), u3 = d5("EX_GeographicBoundingBox", e2);
  let c6 = null;
  a6 && (c6 = x2(a6, 4326)), u3 && (c6 = new M(0, 0, 0, 0, new f({ wkid: 4326 })), c6.xmin = parseFloat(h2("westBoundLongitude", u3, "0")), c6.ymin = parseFloat(h2("southBoundLatitude", u3, "0")), c6.xmax = parseFloat(h2("eastBoundLongitude", u3, "0")), c6.ymax = parseFloat(h2("northBoundLatitude", u3, "0"))), a6 || u3 || (c6 = new M(-180, -90, 180, 90, new f({ wkid: 4326 }))), l3.minScale = y2(e2, "MaxScaleDenominator", 0), l3.maxScale = y2(e2, "MinScaleDenominator", 0);
  const f5 = ["1.0.0", "1.1.0", "1.1.1"].includes(t3) ? "SRS" : "CRS";
  return Array.prototype.slice.call(e2.childNodes).forEach((e3) => {
    var _a;
    if ("Name" === e3.nodeName)
      l3.name = e3.textContent || "";
    else if ("Title" === e3.nodeName)
      l3.title = e3.textContent || "";
    else if ("Abstract" === e3.nodeName)
      l3.description = e3.textContent || "";
    else if ("BoundingBox" === e3.nodeName) {
      const n2 = e3.getAttribute(f5);
      if (n2 && 0 === n2.indexOf("EPSG:")) {
        const r3 = parseInt(n2.substring(5), 10);
        0 === r3 || isNaN(r3) || c6 || (c6 = "1.3.0" === t3 ? x2(e3, r3, o2(r3)) : x2(e3, r3));
      }
      const r2 = n2 && n2.indexOf(":");
      if (r2 && r2 > -1) {
        let i2 = parseInt(n2.substring(r2 + 1, n2.length), 10);
        0 === i2 || isNaN(i2) || (i2 = o4[i2] ?? i2);
        const a7 = "1.3.0" === t3 ? x2(e3, i2, o2(i2)) : x2(e3, i2);
        a7 && l3.fullExtents && l3.fullExtents.push(a7);
      }
    } else if (e3.nodeName === f5) {
      (((_a = e3.textContent) == null ? void 0 : _a.split(" ")) ?? []).forEach((e4) => {
        const t4 = e4.includes(":") ? parseInt(e4.split(":")[1], 10) : parseInt(e4, 10);
        if (0 !== t4 && !isNaN(t4)) {
          const e5 = o4[t4] ?? t4;
          l3.spatialReferences.includes(e5) || l3.spatialReferences.push(e5);
        }
      });
    } else if ("Style" !== e3.nodeName || l3.legendUrl) {
      if ("Layer" === e3.nodeName) {
        const r2 = b2(e3, t3, n);
        r2 && (r2.parentLayerId = l3.id, l3.sublayers || (l3.sublayers = []), l3.sublayers.push(r2));
      }
    } else {
      const t4 = d5("LegendURL", e3);
      if (t4) {
        const e4 = d5("OnlineResource", t4);
        e4 && (l3.legendUrl = e4.getAttribute("xlink:href"));
      }
    }
  }), l3.extent = c6 == null ? void 0 : c6.toJSON(), l3.dimensions = p("Dimension", e2).filter((e3) => e3.getAttribute("name") && e3.getAttribute("units") && e3.textContent).map((e3) => {
    const t4 = e3.getAttribute("name"), n2 = e3.getAttribute("units"), r2 = e3.textContent, i2 = e3.getAttribute("unitSymbol") ?? void 0, s6 = e3.getAttribute("default") ?? void 0, o5 = "0" !== m3("default", e3, "0"), l4 = "0" !== m3("nearestValue", e3, "0"), a7 = "0" !== m3("current", e3, "0");
    if (F({ name: t4, units: n2 })) {
      return { name: "time", units: "ISO8601", extent: I2(r2), default: I2(s6), multipleValues: o5, nearestValue: l4, current: a7 };
    }
    if (w({ name: t4, units: n2 })) {
      return { name: "elevation", units: n2, extent: C3(r2), unitSymbol: i2, default: C3(s6), multipleValues: o5, nearestValue: l4 };
    }
    return { name: t4, units: n2, extent: v2(r2), unitSymbol: i2, default: v2(s6), multipleValues: o5, nearestValue: l4 };
  }), l3;
}
function A(e2) {
  return Array.isArray(e2) && e2.length > 0 && e2[0] instanceof Date;
}
function S3(e2) {
  return e2.nodeType === Node.ELEMENT_NODE;
}
function w(e2) {
  return /^elevation$/i.test(e2.name) && /^(epsg|crs):\d+$/i.test(e2.units);
}
function F(e2) {
  return /^time$/i.test(e2.name) && /^iso8601$/i.test(e2.units);
}
function M2(e2, t3) {
  const r2 = [], i2 = I(e2);
  for (const n in i2.query)
    i2.query.hasOwnProperty(n) && (t3.includes(n.toLowerCase()) || r2.push(n + "=" + i2.query[n]));
  return i2.path + (r2.length ? "?" + r2.join("&") : "");
}
function C3(t3) {
  if (!t3)
    return;
  const n = t3.includes("/"), r2 = t3.split(",");
  return n ? r2.map((e2) => {
    const t4 = e2.split("/");
    if (t4.length < 2)
      return null;
    return { min: parseFloat(t4[0]), max: parseFloat(t4[1]), resolution: t4.length >= 3 && "0" !== t4[2] ? parseFloat(t4[2]) : void 0 };
  }).filter(k) : r2.map((e2) => parseFloat(e2));
}
function v2(t3) {
  if (!t3)
    return;
  const n = t3.includes("/"), r2 = t3.split(",");
  return n ? r2.map((e2) => {
    const t4 = e2.split("/");
    if (t4.length < 2)
      return null;
    return { min: t4[0], max: t4[1], resolution: t4.length >= 3 && "0" !== t4[2] ? t4[2] : void 0 };
  }).filter(k) : r2;
}
function I2(t3) {
  if (!t3)
    return;
  const n = t3.includes("/"), r2 = t3.split(",");
  return n ? r2.map((e2) => {
    const t4 = e2.split("/");
    if (t4.length < 2)
      return null;
    return { min: new Date(t4[0]), max: new Date(t4[1]), resolution: t4.length >= 3 && "0" !== t4[2] ? R(t4[2]) : void 0 };
  }).filter(k) : r2.map((e2) => new Date(e2));
}
function R(e2) {
  const t3 = /(?:p(\d+y|\d+(?:\.|,)\d+y)?(\d+m|\d+(?:\.|,)\d+m)?(\d+d|\d+(?:\.|,)\d+d)?)?(?:t(\d+h|\d+(?:\.|,)\d+h)?(\d+m|\d+(?:\.|,)\d+m)?(\d+s|\d+(?:\.|,)\d+s)?)?/i, n = e2.match(t3);
  if (!n)
    return null;
  return { years: U(n[1]), months: U(n[2]), days: U(n[3]), hours: U(n[4]), minutes: U(n[5]), seconds: U(n[6]) };
}
function U(e2) {
  if (!e2)
    return 0;
  const t3 = /(?:\d+(?:\.|,)\d+|\d+)/, n = e2.match(t3);
  if (!n)
    return 0;
  const r2 = n[0].replace(",", ".");
  return Number(r2);
}
function T2(e2) {
  return e2.toISOString().replace(/\.[0-9]{3}/, "");
}
var V2 = /* @__PURE__ */ new Set([102100, 3857, 102113, 900913]);
var O = /* @__PURE__ */ new Set([3395, 54004]);
function _(e2, t3) {
  let n = e2.wkid;
  return null == t3 ? n : (null != n && t3.includes(n) || !e2.latestWkid || (n = e2.latestWkid), null != n && V2.has(n) ? t3.find((e3) => V2.has(e3)) || t3.find((e3) => O.has(e3)) || 102100 : n);
}

// node_modules/@arcgis/core/layers/WMSLayer.js
var J = new s3({ bmp: "image/bmp", gif: "image/gif", jpg: "image/jpeg", png: "image/png", svg: "image/svg+xml" }, { ignoreUnknown: false });
function V3(e2) {
  return "text/html" === e2;
}
function z(e2) {
  return "text/plain" === e2;
}
var Q = class extends a3(a4(f2(t(u(j2(m(b))))))) {
  constructor(...e2) {
    super(...e2), this.allSublayers = new l({ getCollections: () => [this.sublayers], getChildrenFunction: (e3) => e3.sublayers }), this.customParameters = null, this.customLayerParameters = null, this.copyright = null, this.description = null, this.dimensions = null, this.fullExtent = null, this.fullExtents = null, this.featureInfoFormats = null, this.featureInfoUrl = null, this.fetchFeatureInfoFunction = null, this.imageFormat = null, this.imageMaxHeight = 2048, this.imageMaxWidth = 2048, this.imageTransparency = true, this.legendEnabled = true, this.mapUrl = null, this.isReference = null, this.operationalLayerType = "WMS", this.spatialReference = null, this.spatialReferences = null, this.sublayers = null, this.type = "wms", this.version = null, this.addHandles([v(() => this.sublayers, "after-add", ({ item: e3 }) => {
      e3.parent = e3.layer = this;
    }, C), v(() => this.sublayers, "after-remove", ({ item: e3 }) => {
      e3.layer = e3.parent = null;
    }, C), d2(() => this.sublayers, (e3, t3) => {
      if (t3)
        for (const r2 of t3)
          r2.layer = r2.parent = null;
      if (e3)
        for (const r2 of e3)
          r2.parent = r2.layer = this;
    }, C)]);
  }
  normalizeCtorArgs(e2, t3) {
    return "string" == typeof e2 ? { url: e2, ...t3 } : e2;
  }
  destroy() {
    this.allSublayers.destroy();
  }
  load(e2) {
    const t3 = null != e2 ? e2.signal : null;
    return this.addResolvingPromise(this.loadFromPortal({ supportedTypes: ["WMS"] }, e2).catch(a2).then(() => this._fetchService(t3))), Promise.resolve(this);
  }
  readFullExtentFromItemOrMap(e2, t3) {
    const r2 = t3.extent;
    return r2 ? new M({ xmin: r2[0][0], ymin: r2[0][1], xmax: r2[1][0], ymax: r2[1][1] }) : null;
  }
  writeFullExtent(e2, t3) {
    t3.extent = [[e2.xmin, e2.ymin], [e2.xmax, e2.ymax]];
  }
  get featureInfoFormat() {
    return null == this.featureInfoFormats ? null : this.featureInfoFormats.find(V3) ?? this.featureInfoFormats.find(z) ?? null;
  }
  set featureInfoFormat(e2) {
    null == e2 ? (this.revert("featureInfoFormat", "service"), this._clearOverride("featureInfoFormat")) : (V3(e2) || z(e2)) && this._override("featureInfoFormat", e2);
  }
  readImageFormat(e2, t3) {
    const r2 = t3.supportedImageFormatTypes;
    return r2 && r2.includes("image/png") ? "image/png" : r2 && r2[0];
  }
  readSpatialReferenceFromItemOrDocument(e2, t3) {
    return new f(t3.spatialReferences[0]);
  }
  writeSpatialReferences(e2, t3) {
    var _a;
    const r2 = (_a = this.spatialReference) == null ? void 0 : _a.wkid;
    e2 && r2 ? (t3.spatialReferences = e2.filter((e3) => e3 !== r2), t3.spatialReferences.unshift(r2)) : t3.spatialReferences = e2;
  }
  readSublayersFromItemOrMap(e2, t3, r2) {
    return X(t3.layers, r2, t3.visibleLayers);
  }
  readSublayers(e2, t3, r2) {
    return X(t3.layers, r2);
  }
  writeSublayers(e2, t3, r2, o5) {
    var _a, _b;
    t3.layers = [];
    const s6 = /* @__PURE__ */ new Map(), i2 = e2.flatten(({ sublayers: e3 }) => e3 ?? []);
    for (const a6 of i2)
      if ("number" == typeof ((_a = a6.parent) == null ? void 0 : _a.id)) {
        const e3 = s6.get(a6.parent.id);
        null != e3 ? e3.push(a6.id) : s6.set(a6.parent.id, [a6.id]);
      }
    for (const a6 of i2) {
      const e3 = { sublayer: a6, ...o5 }, r3 = a6.write({ parentLayerId: "number" == typeof ((_b = a6.parent) == null ? void 0 : _b.id) ? a6.parent.id : -1 }, e3);
      if (s6.has(a6.id) && (r3.sublayerIds = s6.get(a6.id)), !a6.sublayers && a6.name) {
        const r4 = a6.write({}, e3);
        delete r4.id, t3.layers.push(r4);
      }
    }
    t3.visibleLayers = i2.filter(({ visible: e3, sublayers: t4 }) => e3 && !t4).map(({ name: e3 }) => e3).toArray();
  }
  set url(e2) {
    if (!e2)
      return void this._set("url", e2);
    const { path: t3, query: r2 } = I(e2);
    for (const s6 in r2)
      /^(request|service)$/i.test(s6) && delete r2[s6];
    const o5 = Et(t3, r2 ?? {});
    this._set("url", o5);
  }
  createExportImageParameters(e2, t3, r2, o5) {
    const s6 = (o5 == null ? void 0 : o5.pixelRatio) ?? 1, i2 = i({ extent: e2, width: t3 }) * s6, a6 = new o3({ layer: this, scale: i2 }), { xmin: n, ymin: l3, xmax: p2, ymax: m4, spatialReference: u3 } = e2, c6 = _(u3, this.spatialReferences), f5 = "1.3.0" === this.version && o2(c6) ? `${l3},${n},${m4},${p2}` : `${n},${l3},${p2},${m4}`, y3 = a6.toJSON();
    return { bbox: f5, ["1.3.0" === this.version ? "crs" : "srs"]: null == c6 || isNaN(c6) ? void 0 : "EPSG:" + c6, ...y3 };
  }
  async fetchImage(e2, t3, r2, o5) {
    var _a, _b;
    const i2 = this.mapUrl, a6 = this.createExportImageParameters(e2, t3, r2, o5);
    if (!a6.layers) {
      const e3 = document.createElement("canvas");
      return e3.width = t3, e3.height = r2, e3;
    }
    const n = (_a = o5 == null ? void 0 : o5.timeExtent) == null ? void 0 : _a.start, l3 = (_b = o5 == null ? void 0 : o5.timeExtent) == null ? void 0 : _b.end, p2 = null != n && null != l3 ? n.getTime() === l3.getTime() ? T2(n) : `${T2(n)}/${T2(l3)}` : void 0, m4 = { responseType: "image", query: this._mixCustomParameters({ width: t3, height: r2, ...a6, time: p2, ...this.refreshParameters }), signal: o5 == null ? void 0 : o5.signal };
    return j(i2 ?? "", m4).then((e3) => e3.data);
  }
  async fetchImageBitmap(e2, t3, r2, o5) {
    var _a, _b;
    const i2 = this.mapUrl ?? "", a6 = this.createExportImageParameters(e2, t3, r2, o5);
    if (!a6.layers) {
      const e3 = document.createElement("canvas");
      return e3.width = t3, e3.height = r2, e3;
    }
    const n = (_a = o5 == null ? void 0 : o5.timeExtent) == null ? void 0 : _a.start, l3 = (_b = o5 == null ? void 0 : o5.timeExtent) == null ? void 0 : _b.end, p2 = null != n && null != l3 ? n.getTime() === l3.getTime() ? T2(n) : `${T2(n)}/${T2(l3)}` : void 0, m4 = { responseType: "blob", query: this._mixCustomParameters({ width: t3, height: r2, ...a6, time: p2, ...this.refreshParameters }), signal: o5 == null ? void 0 : o5.signal }, { data: u3 } = await j(i2, m4);
    return t2(u3, i2, o5 == null ? void 0 : o5.signal);
  }
  fetchFeatureInfo(e2, t3, r2, o5, s6) {
    const i2 = i({ extent: e2, width: t3 }), a6 = new o3({ layer: this, scale: i2 }), n = a5(a6.visibleSublayers);
    if (null == this.featureInfoUrl || null == n)
      return Promise.resolve([]);
    if (null == this.fetchFeatureInfoFunction && null == this.featureInfoFormat)
      return Promise.resolve([]);
    const l3 = "1.3.0" === this.version ? { I: o5, J: s6 } : { x: o5, y: s6 }, p2 = { query_layers: n, request: "GetFeatureInfo", info_format: this.featureInfoFormat, feature_count: 25, width: t3, height: r2, ...l3 }, m4 = { ...this.createExportImageParameters(e2, t3, r2), ...p2 }, u3 = this._mixCustomParameters(m4);
    return null != this.fetchFeatureInfoFunction ? this.fetchFeatureInfoFunction(u3) : this._defaultFetchFeatureInfoFunction(Et(this.featureInfoUrl, u3));
  }
  findSublayerById(e2) {
    return this.allSublayers.find((t3) => t3.id === e2);
  }
  findSublayerByName(e2) {
    return this.allSublayers.find((t3) => t3.name === e2);
  }
  serviceSupportsSpatialReference(e2) {
    return C2(this.url) || null != this.spatialReferences && this.spatialReferences.some((t3) => {
      const r2 = 900913 === t3 ? f.WebMercator : new f({ wkid: t3 });
      return d3(r2, e2);
    });
  }
  _defaultFetchFeatureInfoFunction(e2) {
    const t3 = document.createElement("iframe");
    t3.src = S(e2), t3.style.border = "none", t3.style.margin = "0", t3.style.width = "100%", t3.setAttribute("sandbox", "");
    const s6 = new k2({ title: this.title, content: t3 }), i2 = new c2({ sourceLayer: this, popupTemplate: s6 });
    return Promise.resolve([i2]);
  }
  async _fetchService(e2) {
    var _a;
    if (!this.resourceInfo && ((_a = this.parsedUrl) == null ? void 0 : _a.path)) {
      const { path: t3, query: r2 } = this.parsedUrl, { data: o5 } = await j(t3, { query: { SERVICE: "WMS", REQUEST: "GetCapabilities", ...r2, ...this.customParameters }, responseType: "xml", signal: e2 });
      this.resourceInfo = l2(o5);
    }
    if (this.parsedUrl) {
      const e3 = new x(this.parsedUrl.path), { httpsDomains: r2 } = s.request;
      "https" !== e3.scheme || e3.port && "443" !== e3.port || !e3.host || r2.includes(e3.host) || r2.push(e3.host);
    }
    this.read(this.resourceInfo, { origin: "service" });
  }
  _mixCustomParameters(e2) {
    if (!this.customLayerParameters && !this.customParameters)
      return e2;
    const t3 = { ...this.customParameters, ...this.customLayerParameters };
    for (const r2 in t3)
      e2[r2.toLowerCase()] = t3[r2];
    return e2;
  }
};
function K(e2, t3) {
  return e2.some((e3) => {
    for (const r2 in e3)
      if (g(e3, r2, null, t3))
        return true;
    return false;
  });
}
function X(e2, t3, r2) {
  e2 = e2 ?? [];
  const o5 = /* @__PURE__ */ new Map();
  e2.every((e3) => null == e3.id) && (e2 = a(e2)).forEach((e3, t4) => e3.id = t4);
  for (const i2 of e2) {
    const e3 = new f3();
    e3.read(i2, t3), r2 && !r2.includes(e3.name) && (e3.visible = false), o5.set(e3.id, e3);
  }
  const s6 = [];
  for (const a6 of e2) {
    const e3 = null != a6.id ? o5.get(a6.id) : null;
    if (e3)
      if (null != a6.parentLayerId && a6.parentLayerId >= 0) {
        const t4 = o5.get(a6.parentLayerId);
        if (!t4)
          continue;
        t4.sublayers || (t4.sublayers = new V()), t4.sublayers.push(e3);
      } else
        s6.push(e3);
  }
  return s6;
}
e([y({ readOnly: true })], Q.prototype, "allSublayers", void 0), e([y({ json: { type: Object, write: true } })], Q.prototype, "customParameters", void 0), e([y({ json: { type: Object, write: true } })], Q.prototype, "customLayerParameters", void 0), e([y({ type: String, json: { write: true } })], Q.prototype, "copyright", void 0), e([y()], Q.prototype, "description", void 0), e([y({ readOnly: true })], Q.prototype, "dimensions", void 0), e([y({ json: { type: [[Number]], read: { source: "extent" }, write: { target: "extent" }, origins: { "web-document": { write: { ignoreOrigin: true } }, "portal-item": { write: { ignoreOrigin: true } } } } })], Q.prototype, "fullExtent", void 0), e([o(["web-document", "portal-item"], "fullExtent", ["extent"])], Q.prototype, "readFullExtentFromItemOrMap", null), e([r(["web-document", "portal-item"], "fullExtent", { extent: { type: [[Number]] } })], Q.prototype, "writeFullExtent", null), e([y()], Q.prototype, "fullExtents", void 0), e([y({ type: String, json: { write: { ignoreOrigin: true } } })], Q.prototype, "featureInfoFormat", null), e([y({ type: [String], readOnly: true })], Q.prototype, "featureInfoFormats", void 0), e([y({ type: String, json: { write: { ignoreOrigin: true } } })], Q.prototype, "featureInfoUrl", void 0), e([y()], Q.prototype, "fetchFeatureInfoFunction", void 0), e([y({ type: String, json: { origins: { "web-document": { default: "image/png", type: J.jsonValues, read: { reader: J.read, source: "format" }, write: { writer: J.write, target: "format" } } } } })], Q.prototype, "imageFormat", void 0), e([o("imageFormat", ["supportedImageFormatTypes"])], Q.prototype, "readImageFormat", null), e([y({ type: Number, json: { read: { source: "maxHeight" }, write: { target: "maxHeight" } } })], Q.prototype, "imageMaxHeight", void 0), e([y({ type: Number, json: { read: { source: "maxWidth" }, write: { target: "maxWidth" } } })], Q.prototype, "imageMaxWidth", void 0), e([y()], Q.prototype, "imageTransparency", void 0), e([y(c3)], Q.prototype, "legendEnabled", void 0), e([y({ type: ["show", "hide", "hide-children"] })], Q.prototype, "listMode", void 0), e([y({ type: String, json: { write: { ignoreOrigin: true } } })], Q.prototype, "mapUrl", void 0), e([y({ type: Boolean, json: { read: false, write: { enabled: true, overridePolicy: () => ({ enabled: false }) } } })], Q.prototype, "isReference", void 0), e([y({ type: ["WMS"] })], Q.prototype, "operationalLayerType", void 0), e([y()], Q.prototype, "resourceInfo", void 0), e([y({ type: f, json: { origins: { service: { read: { source: "extent.spatialReference" } } }, write: false } })], Q.prototype, "spatialReference", void 0), e([o(["web-document", "portal-item"], "spatialReference", ["spatialReferences"])], Q.prototype, "readSpatialReferenceFromItemOrDocument", null), e([y({ type: [T], json: { read: false, origins: { service: { read: true }, "web-document": { read: false, write: { ignoreOrigin: true } }, "portal-item": { read: false, write: { ignoreOrigin: true } } } } })], Q.prototype, "spatialReferences", void 0), e([r(["web-document", "portal-item"], "spatialReferences")], Q.prototype, "writeSpatialReferences", null), e([y({ type: V.ofType(f3), json: { write: { target: "layers", overridePolicy(e2, t3, r2) {
  if (K(this.allSublayers, r2))
    return { ignoreOrigin: true };
} } } })], Q.prototype, "sublayers", void 0), e([o(["web-document", "portal-item"], "sublayers", ["layers", "visibleLayers"])], Q.prototype, "readSublayersFromItemOrMap", null), e([o("service", "sublayers", ["layers"])], Q.prototype, "readSublayers", null), e([r("sublayers", { layers: { type: [f3] }, visibleLayers: { type: [String] } })], Q.prototype, "writeSublayers", null), e([y({ json: { read: false }, readOnly: true, value: "wms" })], Q.prototype, "type", void 0), e([y(d4)], Q.prototype, "url", null), e([y({ type: String, json: { write: { ignoreOrigin: true } } })], Q.prototype, "version", void 0), Q = e([c("esri.layers.WMSLayer")], Q);
var Y = Q;
export {
  Y as default
};
//# sourceMappingURL=WMSLayer-2AJQ22A5.js.map
