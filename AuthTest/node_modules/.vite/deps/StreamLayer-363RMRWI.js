import {
  p
} from "./chunk-3F7Z2GZ4.js";
import "./chunk-BVTDQR4O.js";
import {
  c as c2
} from "./chunk-GBF6I7IL.js";
import "./chunk-KXF4D4TD.js";
import "./chunk-UIN5EOGE.js";
import "./chunk-DT2VHQBL.js";
import {
  l
} from "./chunk-36R5EC6A.js";
import {
  s as s3
} from "./chunk-CB5VOM2Q.js";
import {
  i as i2
} from "./chunk-MJTRXEE4.js";
import {
  C
} from "./chunk-2XWWTLSJ.js";
import {
  o as o4
} from "./chunk-5DLICG33.js";
import {
  a as a4
} from "./chunk-WZZO74UB.js";
import {
  p as p2
} from "./chunk-AYCE4MD7.js";
import {
  m as m2,
  o as o3,
  u
} from "./chunk-LVN3FGME.js";
import "./chunk-F3LMPTMS.js";
import {
  A
} from "./chunk-U4ONWLTG.js";
import {
  j as j2
} from "./chunk-KQ7MCWUF.js";
import {
  f as f3
} from "./chunk-NHWXARIK.js";
import {
  a as a3
} from "./chunk-P5VIVFJT.js";
import "./chunk-SA3C7GIT.js";
import "./chunk-P3R45ANF.js";
import {
  t as t3
} from "./chunk-PIEUUBJ5.js";
import {
  u as u2
} from "./chunk-OTTMOIDW.js";
import {
  m
} from "./chunk-P5GW5DPX.js";
import {
  S,
  T as T2,
  c as c3,
  d,
  m as m3,
  p as p4,
  y as y3
} from "./chunk-WDO2BXGR.js";
import {
  D
} from "./chunk-PHX4PE2G.js";
import "./chunk-E3I4MGUC.js";
import "./chunk-SHFNNIVW.js";
import "./chunk-IYYYQK4Y.js";
import "./chunk-QN7I7LNY.js";
import "./chunk-64EQFPYJ.js";
import "./chunk-HKYMYCLL.js";
import "./chunk-ICVVQFO6.js";
import "./chunk-UTCX6DGX.js";
import {
  t as t2
} from "./chunk-T2S5L26W.js";
import "./chunk-EA6ZJZL6.js";
import "./chunk-VKTTTBW2.js";
import "./chunk-TTZWDXX5.js";
import "./chunk-3RBII4KE.js";
import "./chunk-SEKLTVY5.js";
import "./chunk-7YZ4X2DS.js";
import "./chunk-UPGPT5OX.js";
import "./chunk-S6MJEC4A.js";
import {
  h
} from "./chunk-VA52CKTT.js";
import {
  b
} from "./chunk-45OAWGCA.js";
import "./chunk-X2TA76Q5.js";
import "./chunk-T3Y5GTKO.js";
import {
  y as y2
} from "./chunk-XN6LAULS.js";
import "./chunk-CKGVKMVG.js";
import "./chunk-CSWPLQ7Q.js";
import "./chunk-KWSMYM7P.js";
import "./chunk-RP5SAUAF.js";
import "./chunk-6BFXMZEZ.js";
import "./chunk-AMSVADDY.js";
import "./chunk-6B7VJB6C.js";
import "./chunk-GAJBN4TM.js";
import {
  b as b2
} from "./chunk-WETX22HQ.js";
import "./chunk-B3RXTW72.js";
import {
  k as k2
} from "./chunk-DCYI44X2.js";
import "./chunk-JHJVOI7Q.js";
import "./chunk-TWNBDJHC.js";
import "./chunk-4NU7FZD7.js";
import "./chunk-WYZCKLOR.js";
import "./chunk-S6NERLXF.js";
import "./chunk-MLRHWRJQ.js";
import "./chunk-H4ZZ5S37.js";
import "./chunk-G557TGXY.js";
import "./chunk-2AXFVQBN.js";
import "./chunk-WOGT6UK2.js";
import "./chunk-IRNKV32L.js";
import "./chunk-IATM3RCE.js";
import "./chunk-BEALJUHO.js";
import "./chunk-GRHSIT57.js";
import "./chunk-PJQIAD5D.js";
import {
  g,
  p as p3
} from "./chunk-GAWSWBHO.js";
import "./chunk-SZAJDZCO.js";
import "./chunk-3DSKWYU4.js";
import "./chunk-ZZYUEH57.js";
import {
  o as o2
} from "./chunk-VTWXDFFD.js";
import "./chunk-IPCIO3PX.js";
import "./chunk-EIY2DYTV.js";
import {
  i
} from "./chunk-WJ4LS3YG.js";
import "./chunk-F6MD5VOH.js";
import "./chunk-V2RPSCV3.js";
import "./chunk-AOJ6OCPK.js";
import "./chunk-LMT5JII2.js";
import "./chunk-A43TI6AT.js";
import "./chunk-2D3PORS4.js";
import "./chunk-4HKQSEUR.js";
import "./chunk-V3U4F2NL.js";
import "./chunk-ZB6PGKG5.js";
import "./chunk-OIIDE5GZ.js";
import "./chunk-3XSRVKBX.js";
import "./chunk-WYBZLWIA.js";
import "./chunk-MKW4ORPJ.js";
import "./chunk-YTH6VA7N.js";
import "./chunk-GINTRQSD.js";
import "./chunk-TBSVVR6M.js";
import "./chunk-6TJWLWLO.js";
import "./chunk-H7BKONNV.js";
import "./chunk-K6C6RVSV.js";
import "./chunk-KBJ5Z4R2.js";
import "./chunk-JUZJCTW2.js";
import "./chunk-423VNHLR.js";
import "./chunk-FN47E7YK.js";
import "./chunk-XZS3Q5K4.js";
import "./chunk-WZPOQGKL.js";
import "./chunk-CCXEAKIM.js";
import {
  M
} from "./chunk-Y5D433JZ.js";
import "./chunk-QNOCEWCR.js";
import {
  o
} from "./chunk-WURET5CW.js";
import {
  f as f2
} from "./chunk-QWPLZ3QH.js";
import "./chunk-HLGIRLYQ.js";
import "./chunk-N2K4VRZH.js";
import "./chunk-WL4VPODY.js";
import "./chunk-OMPEZIP5.js";
import "./chunk-EUTNDAIV.js";
import "./chunk-SJZIFARA.js";
import {
  j
} from "./chunk-R5DM4YAB.js";
import {
  f
} from "./chunk-NSRXJNTS.js";
import {
  y2 as y
} from "./chunk-LXXF7K7W.js";
import {
  T,
  c
} from "./chunk-SBW6NNVI.js";
import {
  e
} from "./chunk-62CXLI6S.js";
import {
  a as a2,
  k,
  t
} from "./chunk-RFPH3ZTZ.js";
import "./chunk-WGO3VFQP.js";
import "./chunk-CQS47VN5.js";
import {
  a,
  s2 as s,
  s3 as s2
} from "./chunk-WJ3HJKNC.js";
import "./chunk-4V6374PV.js";
import "./chunk-A34O4XB5.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/layers/support/PurgeOptions.js
var t4;
var i3 = t4 = class extends f {
  constructor() {
    super(...arguments), this.age = null, this.ageReceived = null, this.displayCount = null, this.maxObservations = 1;
  }
  clone() {
    return new t4({ age: this.age, ageReceived: this.ageReceived, displayCount: this.displayCount, maxObservations: this.maxObservations });
  }
};
e([y({ type: Number, json: { write: true } })], i3.prototype, "age", void 0), e([y({ type: Number, json: { write: true } })], i3.prototype, "ageReceived", void 0), e([y({ type: Number, json: { write: true } })], i3.prototype, "displayCount", void 0), e([y({ type: Number, json: { write: true } })], i3.prototype, "maxObservations", void 0), i3 = t4 = e([c("esri.layers.support.PurgeOptions")], i3);
var p5 = i3;

// node_modules/@arcgis/core/layers/StreamLayer.js
var Y = s3();
function Z(e2, t5) {
  return new s2("layer:unsupported", `Layer (${e2.title}, ${e2.id}) of type '${e2.declaredClass}' ${t5}`, { layer: e2 });
}
var ee = class extends c2(p(a3(a4(t3(f3(l(u2(j2(m(o4(i(b2)))))))))))) {
  constructor(...e2) {
    super(...e2), this.copyright = null, this.definitionExpression = null, this.displayField = null, this.elevationInfo = null, this.fields = null, this.fieldsIndex = null, this.geometryDefinition = null, this.geometryType = null, this.labelsVisible = true, this.labelingInfo = null, this.legendEnabled = true, this.maxReconnectionAttempts = 0, this.maxReconnectionInterval = 20, this.maxScale = 0, this.minScale = 0, this.objectIdField = null, this.operationalLayerType = "ArcGISStreamLayer", this.outFields = ["*"], this.popupEnabled = true, this.popupTemplate = null, this.purgeOptions = new p5(), this.refreshInterval = 0, this.screenSizePerspectiveEnabled = true, this.sourceJSON = null, this.spatialReference = f2.WGS84, this.type = "stream", this.url = null, this.updateInterval = 300, this.useViewTime = true, this.webSocketUrl = null, this._debouncedSaveOperations = k(async (e3, t5, r) => {
      const { save: i4, saveAs: o5 } = await import("./streamLayerUtils-A6X4HK3Y.js");
      switch (e3) {
        case A.SAVE:
          return i4(this, t5);
        case A.SAVE_AS:
          return o5(this, r, t5);
      }
    });
  }
  normalizeCtorArgs(e2, t5) {
    return "string" == typeof e2 ? { url: e2, ...t5 } : e2;
  }
  load(e2) {
    if (!("WebSocket" in globalThis))
      return this.addResolvingPromise(Promise.reject(new s2("stream-layer:websocket-unsupported", "WebSocket is not supported in this browser. StreamLayer will not have real-time connection with the stream service."))), Promise.resolve(this);
    const t5 = null != e2 ? e2.signal : null;
    return this.addResolvingPromise(this.loadFromPortal({ supportedTypes: ["Stream Service", "Feed"] }, e2).catch(a2).then(() => this._fetchService(t5))), Promise.resolve(this);
  }
  get defaultPopupTemplate() {
    return this.createPopupTemplate();
  }
  set featureReduction(e2) {
    const t5 = this._normalizeFeatureReduction(e2);
    this._set("featureReduction", t5);
  }
  set renderer(e2) {
    p3(e2, this.fieldsIndex), this._set("renderer", e2);
  }
  readRenderer(e2, t5, i4) {
    var _a;
    t5 = t5.layerDefinition || t5;
    const o5 = (_a = t5.drawingInfo) == null ? void 0 : _a.renderer;
    if (o5) {
      const e3 = o3(o5, t5, i4) || void 0;
      return e3 || s.getLogger(this).error("Failed to create renderer", { rendererDefinition: t5.drawingInfo.renderer, layer: this, context: i4 }), e3;
    }
    return D(t5, i4);
  }
  async connect(e2) {
    const [{ createConnection: t5 }] = await Promise.all([import("./createConnection-B44VIWOZ.js"), this.load()]), r = this.geometryType ? o2.toJSON(this.geometryType) : null, { customParameters: i4 = null, definitionExpression: o5 = null, geometryDefinition: s4 = null, maxReconnectionAttempts: n = 0, maxReconnectionInterval: a5 = 20, spatialReference: l2 = this.spatialReference } = e2 || this.createConnectionParameters(), d2 = t5(this.parsedUrl, this.spatialReference, l2, r, { geometry: s4, where: o5 }, n, a5, i4 ?? void 0), m4 = t([this.on("send-message-to-socket", (e3) => d2.sendMessageToSocket(e3)), this.on("send-message-to-client", (e3) => d2.sendMessageToClient(e3))]);
    return d2.once("destroy", m4.remove), d2;
  }
  createConnectionParameters() {
    return { spatialReference: this.spatialReference, customParameters: this.customParameters, definitionExpression: this.definitionExpression, geometryDefinition: this.geometryDefinition, maxReconnectionAttempts: this.maxReconnectionAttempts, maxReconnectionInterval: this.maxReconnectionInterval };
  }
  createPopupTemplate(e2) {
    return p2(this, e2);
  }
  createQuery() {
    const e2 = new b();
    return e2.returnGeometry = true, e2.outFields = ["*"], e2.where = this.definitionExpression || "1=1", e2;
  }
  getFieldDomain(e2, t5) {
    if (!this.fields)
      return null;
    let r = null;
    return this.fields.some((t6) => (t6.name === e2 && (r = t6.domain), !!r)), r;
  }
  getField(e2) {
    return this.fieldsIndex.get(e2);
  }
  serviceSupportsSpatialReference(e2) {
    return true;
  }
  sendMessageToSocket(e2) {
    this.emit("send-message-to-socket", e2);
  }
  sendMessageToClient(e2) {
    this.emit("send-message-to-client", e2);
  }
  async save(e2) {
    return this._debouncedSaveOperations(A.SAVE, e2);
  }
  async saveAs(e2, t5) {
    return this._debouncedSaveOperations(A.SAVE_AS, t5, e2);
  }
  write(e2, t5) {
    const r = t5 == null ? void 0 : t5.messages;
    return this.webSocketUrl ? (r == null ? void 0 : r.push(Z(this, "using a custom websocket connection cannot be written to web scenes and web maps")), null) : this.parsedUrl ? super.write(e2, t5) : (r == null ? void 0 : r.push(Z(this, "using a client-side only connection without a url cannot be written to web scenes and web maps")), null);
  }
  async _fetchService(e2) {
    var _a, _b, _c;
    if (!!!this.webSocketUrl && this.parsedUrl) {
      if (!this.sourceJSON) {
        const { data: t5 } = await j(this.parsedUrl.path, { query: { f: "json", ...this.customParameters, ...this.parsedUrl.query }, responseType: "json", signal: e2 });
        this.sourceJSON = t5;
      }
    } else {
      if (!((_a = this.timeInfo) == null ? void 0 : _a.trackIdField))
        throw new s2("stream-layer:missing-metadata", "The stream layer trackIdField must be specified.");
      if (!this.objectIdField) {
        const e3 = (_b = this.fields.find((e4) => "oid" === e4.type)) == null ? void 0 : _b.name;
        if (!e3)
          throw new s2("stream-layer:missing-metadata", "The stream layer objectIdField must be specified.");
        this.objectIdField = e3;
      }
      if (!this.fields)
        throw new s2("stream-layer:missing-metadata", "The stream layer fields must be specified.");
      if (this.fields.some((e3) => e3.name === this.objectIdField) || this.fields.push(new y2({ name: this.objectIdField, alias: this.objectIdField, type: "oid" })), !this.geometryType)
        throw new s2("stream-layer:missing-metadata", "The stream layer geometryType must be specified.");
      this.webSocketUrl && (this.url = this.webSocketUrl);
    }
    return this.read(this.sourceJSON, { origin: "service", portalItem: this.portalItem, portal: (_c = this.portalItem) == null ? void 0 : _c.portal, url: this.parsedUrl }), p3(this.renderer, this.fieldsIndex), g(this.timeInfo, this.fieldsIndex), this.objectIdField || (this.objectIdField = "__esri_stream_id__"), t2(this, { origin: "service" });
  }
};
e([y({ type: String })], ee.prototype, "copyright", void 0), e([y({ readOnly: true })], ee.prototype, "defaultPopupTemplate", null), e([y({ type: String, json: { name: "layerDefinition.definitionExpression", write: { enabled: true, allowNull: true } } })], ee.prototype, "definitionExpression", void 0), e([y({ type: String })], ee.prototype, "displayField", void 0), e([y({ type: h })], ee.prototype, "elevationInfo", void 0), e([y({ json: { origins: { "web-map": { read: false, write: false }, "portal-item": { read: false, write: false }, "web-scene": { read: false, write: false } } } })], ee.prototype, "featureReduction", null), e([y(Y.fields)], ee.prototype, "fields", void 0), e([y(Y.fieldsIndex)], ee.prototype, "fieldsIndex", void 0), e([y({ type: M, json: { name: "layerDefinition.definitionGeometry", write: true } })], ee.prototype, "geometryDefinition", void 0), e([y({ type: o2.apiValues, json: { read: { reader: o2.read } } })], ee.prototype, "geometryType", void 0), e([y(m3)], ee.prototype, "labelsVisible", void 0), e([y({ type: [C], json: { name: "layerDefinition.drawingInfo.labelingInfo", read: { reader: i2 }, write: true } })], ee.prototype, "labelingInfo", void 0), e([y(c3)], ee.prototype, "legendEnabled", void 0), e([y({ type: ["show", "hide"], json: { origins: { "portal-item": { read: false, write: false } } } })], ee.prototype, "listMode", void 0), e([y({ type: T })], ee.prototype, "maxReconnectionAttempts", void 0), e([y({ type: T })], ee.prototype, "maxReconnectionInterval", void 0), e([y(S)], ee.prototype, "maxScale", void 0), e([y(T2)], ee.prototype, "minScale", void 0), e([y({ type: String })], ee.prototype, "objectIdField", void 0), e([y({ value: "ArcGISStreamLayer", type: ["ArcGISStreamLayer"] })], ee.prototype, "operationalLayerType", void 0), e([y({ readOnly: true })], ee.prototype, "outFields", void 0), e([y(y3)], ee.prototype, "popupEnabled", void 0), e([y({ type: k2, json: { name: "popupInfo", write: true } })], ee.prototype, "popupTemplate", void 0), e([y({ type: p5 })], ee.prototype, "purgeOptions", void 0), e([y({ json: { read: false, write: false } })], ee.prototype, "refreshInterval", void 0), e([y({ types: m2, json: { origins: { service: { write: { target: "drawingInfo.renderer", enabled: false } }, "web-scene": { name: "layerDefinition.drawingInfo.renderer", types: u, write: true } }, write: { target: "layerDefinition.drawingInfo.renderer" } } })], ee.prototype, "renderer", null), e([o("service", "renderer", ["drawingInfo.renderer", "defaultSymbol"]), o("renderer", ["layerDefinition.drawingInfo.renderer", "layerDefinition.defaultSymbol"])], ee.prototype, "readRenderer", null), e([y((() => {
  const e2 = a(p4);
  return e2.json.origins["portal-item"] = { read: false, write: false }, e2;
})())], ee.prototype, "screenSizePerspectiveEnabled", void 0), e([y()], ee.prototype, "sourceJSON", void 0), e([y({ type: f2, json: { origins: { service: { read: { source: "spatialReference" } } } } })], ee.prototype, "spatialReference", void 0), e([y({ json: { read: false } })], ee.prototype, "type", void 0), e([y(d)], ee.prototype, "url", void 0), e([y({ type: Number })], ee.prototype, "updateInterval", void 0), e([y({ json: { read: false, write: false } })], ee.prototype, "useViewTime", void 0), e([y({ type: String })], ee.prototype, "webSocketUrl", void 0), ee = e([c("esri.layers.StreamLayer")], ee);
var te = ee;
export {
  te as default
};
//# sourceMappingURL=StreamLayer-363RMRWI.js.map
