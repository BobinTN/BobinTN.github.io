{
  "version": 3,
  "sources": ["../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/Normals.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/ComputeNormalTexture.glsl.js", "../../@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/shading/TextureTransformUV.glsl.js", "../../@arcgis/core/chunks/DefaultMaterial.glsl.js"],
  "sourcesContent": ["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{neverReached as a}from\"../../../../../../core/compilerUtils.js\";import{glsl as r}from\"../../shaderModules/interfaces.js\";function e(e,o){const n=e.fragment;switch(n.code.add(r`struct ShadingNormalParameters {\nvec3 normalView;\nvec3 viewDirection;\n} shadingParams;`),o.doubleSidedMode){case i.None:n.code.add(r`vec3 shadingNormal(ShadingNormalParameters params) {\nreturn normalize(params.normalView);\n}`);break;case i.View:n.code.add(r`vec3 shadingNormal(ShadingNormalParameters params) {\nreturn dot(params.normalView, params.viewDirection) > 0.0 ? normalize(-params.normalView) : normalize(params.normalView);\n}`);break;case i.WindingOrder:n.code.add(r`vec3 shadingNormal(ShadingNormalParameters params) {\nreturn gl_FrontFacing ? normalize(params.normalView) : normalize(-params.normalView);\n}`);break;default:a(o.doubleSidedMode);case i.COUNT:}}var i;!function(a){a[a.None=0]=\"None\",a[a.View=1]=\"View\",a[a.WindingOrder=2]=\"WindingOrder\",a[a.COUNT=3]=\"COUNT\"}(i||(i={}));export{e as Normals,i as NormalsDoubleSidedMode};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{TextureCoordinateAttributeType as e}from\"../attributes/TextureCoordinateAttribute.glsl.js\";import{VertexTextureCoordinates as t}from\"../attributes/VertexTextureCoordinates.glsl.js\";import{NormalsDoubleSidedMode as n}from\"./Normals.glsl.js\";import{glsl as a}from\"../../shaderModules/interfaces.js\";import{Texture2DDrawUniform as r}from\"../../shaderModules/Texture2DDrawUniform.js\";import{Texture2DPassUniform as o}from\"../../shaderModules/Texture2DPassUniform.js\";import{BindType as s}from\"../../shaderTechnique/BindType.js\";import{VertexAttribute as d}from\"../../../lib/VertexAttribute.js\";function m(m,c){const i=m.fragment;c.hasVertexTangents?(m.attributes.add(d.TANGENT,\"vec4\"),m.varyings.add(\"vTangent\",\"vec4\"),c.doubleSidedMode===n.WindingOrder?i.code.add(a`mat3 computeTangentSpace(vec3 normal) {\nfloat tangentHeadedness = gl_FrontFacing ? vTangent.w : -vTangent.w;\nvec3 tangent = normalize(gl_FrontFacing ? vTangent.xyz : -vTangent.xyz);\nvec3 bitangent = cross(normal, tangent) * tangentHeadedness;\nreturn mat3(tangent, bitangent, normal);\n}`):i.code.add(a`mat3 computeTangentSpace(vec3 normal) {\nfloat tangentHeadedness = vTangent.w;\nvec3 tangent = normalize(vTangent.xyz);\nvec3 bitangent = cross(normal, tangent) * tangentHeadedness;\nreturn mat3(tangent, bitangent, normal);\n}`)):i.code.add(a`mat3 computeTangentSpace(vec3 normal, vec3 pos, vec2 st) {\nvec3 Q1 = dFdx(pos);\nvec3 Q2 = dFdy(pos);\nvec2 stx = dFdx(st);\nvec2 sty = dFdy(st);\nfloat det = stx.t * sty.s - sty.t * stx.s;\nvec3 T = stx.t * Q2 - sty.t * Q1;\nT = T - normal * dot(normal, T);\nT *= inversesqrt(max(dot(T,T), 1.e-10));\nvec3 B = sign(det) * cross(normal, T);\nreturn mat3(T, B, normal);\n}`),c.textureCoordinateType!==e.None&&(m.include(t,c),i.uniforms.add(c.pbrTextureBindType===s.Pass?new o(\"normalTexture\",(e=>e.textureNormal)):new r(\"normalTexture\",(e=>e.textureNormal))),i.code.add(a`vec3 computeTextureNormal(mat3 tangentSpace, vec2 uv) {\nvec3 rawNormal = textureLookup(normalTexture, uv).rgb * 2.0 - 1.0;\nreturn tangentSpace * rawNormal;\n}`))}export{m as ComputeNormalTexture};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{c as r}from\"../../../../../../chunks/mat3f32.js\";import{glsl as e}from\"../../shaderModules/interfaces.js\";import{Matrix3PassUniform as o}from\"../../shaderModules/Matrix3PassUniform.js\";function a(a){a.vertex.uniforms.add(new o(\"colorTextureTransformMatrix\",(e=>null!=e.colorTextureTransformMatrix?e.colorTextureTransformMatrix:r()))),a.varyings.add(\"colorUV\",\"vec2\"),a.vertex.code.add(e`void forwardColorUV(){\ncolorUV = (colorTextureTransformMatrix * vec3(vuv0, 1.0)).xy;\n}`)}function s(a){a.vertex.uniforms.add(new o(\"normalTextureTransformMatrix\",(e=>null!=e.normalTextureTransformMatrix?e.normalTextureTransformMatrix:r()))),a.varyings.add(\"normalUV\",\"vec2\"),a.vertex.code.add(e`void forwardNormalUV(){\nnormalUV = (normalTextureTransformMatrix * vec3(vuv0, 1.0)).xy;\n}`)}function i(a){a.vertex.uniforms.add(new o(\"emissiveTextureTransformMatrix\",(e=>null!=e.emissiveTextureTransformMatrix?e.emissiveTextureTransformMatrix:r()))),a.varyings.add(\"emissiveUV\",\"vec2\"),a.vertex.code.add(e`void forwardEmissiveUV(){\nemissiveUV = (emissiveTextureTransformMatrix * vec3(vuv0, 1.0)).xy;\n}`)}function n(a){a.vertex.uniforms.add(new o(\"occlusionTextureTransformMatrix\",(e=>null!=e.occlusionTextureTransformMatrix?e.occlusionTextureTransformMatrix:r()))),a.varyings.add(\"occlusionUV\",\"vec2\"),a.vertex.code.add(e`void forwardOcclusionUV(){\nocclusionUV = (occlusionTextureTransformMatrix * vec3(vuv0, 1.0)).xy;\n}`)}function t(a){a.vertex.uniforms.add(new o(\"metallicRoughnessTextureTransformMatrix\",(e=>null!=e.metallicRoughnessTextureTransformMatrix?e.metallicRoughnessTextureTransformMatrix:r()))),a.varyings.add(\"metallicRoughnessUV\",\"vec2\"),a.vertex.code.add(e`void forwardMetallicRoughnessUV(){\nmetallicRoughnessUV = (metallicRoughnessTextureTransformMatrix * vec3(vuv0, 1.0)).xy;\n}`)}export{a as colorTextureUV,i as emissiveTextureUV,t as metallicRoughnessTextureUV,s as normalTextureUV,n as occlusionTextureUV};\n", "/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.28/esri/copyright.txt for details.\n*/\nimport{ForwardLinearDepth as e}from\"../views/3d/webgl-engine/core/shaderLibrary/ForwardLinearDepth.glsl.js\";import{Offset as r}from\"../views/3d/webgl-engine/core/shaderLibrary/Offset.glsl.js\";import{ShaderOutput as o}from\"../views/3d/webgl-engine/core/shaderLibrary/ShaderOutput.js\";import{SliceDraw as a}from\"../views/3d/webgl-engine/core/shaderLibrary/Slice.glsl.js\";import{Transform as i}from\"../views/3d/webgl-engine/core/shaderLibrary/Transform.glsl.js\";import{InstancedDoublePrecision as l}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/InstancedDoublePrecision.glsl.js\";import{NormalAttribute as s,NormalType as t}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/NormalAttribute.glsl.js\";import{PositionAttribute as n}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/PositionAttribute.glsl.js\";import{SymbolColor as d}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/SymbolColor.glsl.js\";import{TextureCoordinateAttribute as c}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl.js\";import{VertexColor as m}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexColor.glsl.js\";import{VertexNormal as g}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VertexNormal.glsl.js\";import{VerticalOffset as u}from\"../views/3d/webgl-engine/core/shaderLibrary/attributes/VerticalOffset.glsl.js\";import{DefaultMaterialAuxiliaryPasses as p}from\"../views/3d/webgl-engine/core/shaderLibrary/default/DefaultMaterialAuxiliaryPasses.glsl.js\";import{ComputeNormalTexture as v}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/ComputeNormalTexture.glsl.js\";import{EvaluateAmbientOcclusion as h}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateAmbientOcclusion.glsl.js\";import{EvaluateSceneLighting as b,addAmbientBoostFactor as f,addLightingGlobalFactor as w}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/EvaluateSceneLighting.glsl.js\";import{addMainLightIntensity as x}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MainLighting.glsl.js\";import{multipassTerrainTest as y}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/MultipassTerrainTest.glsl.js\";import{Normals as C}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/Normals.glsl.js\";import{PhysicallyBasedRendering as T}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRendering.glsl.js\";import{PhysicallyBasedRenderingParameters as L,PBRMode as j}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/PhysicallyBasedRenderingParameters.glsl.js\";import{ReadShadowMapPass as M,ReadShadowMapDraw as O}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/ReadShadowMap.glsl.js\";import{colorTextureUV as P,normalTextureUV as $,emissiveTextureUV as E,occlusionTextureUV as N,metallicRoughnessTextureUV as A}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/TextureTransformUV.glsl.js\";import{VisualVariables as S}from\"../views/3d/webgl-engine/core/shaderLibrary/shading/VisualVariables.glsl.js\";import{symbolAlphaCutoff as V}from\"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaCutoff.js\";import{DiscardOrAdjustAlphaPass as D}from\"../views/3d/webgl-engine/core/shaderLibrary/util/AlphaDiscard.glsl.js\";import{MixExternalColor as _}from\"../views/3d/webgl-engine/core/shaderLibrary/util/MixExternalColor.glsl.js\";import{addProjViewLocalOrigin as U,addCameraPosition as B}from\"../views/3d/webgl-engine/core/shaderLibrary/util/View.glsl.js\";import{Float3PassUniform as F}from\"../views/3d/webgl-engine/core/shaderModules/Float3PassUniform.js\";import{Float4PassUniform as I}from\"../views/3d/webgl-engine/core/shaderModules/Float4PassUniform.js\";import{FloatPassUniform as R}from\"../views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js\";import{glsl as z}from\"../views/3d/webgl-engine/core/shaderModules/interfaces.js\";import{ShaderBuilder as W}from\"../views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js\";import{Texture2DPassUniform as k}from\"../views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js\";import{TransparencyPassType as G}from\"../views/3d/webgl-engine/lib/TransparencyPassType.js\";import{VertexAttribute as q}from\"../views/3d/webgl-engine/lib/VertexAttribute.js\";function H(H){const J=new W,{vertex:K,fragment:Q,varyings:X}=J;if(U(K,H),J.include(n),X.add(\"vpos\",\"vec3\"),J.include(S,H),J.include(l,H),J.include(u,H),H.hasColorTextureTransform&&J.include(P),H.output===o.Color||H.output===o.Alpha){H.hasNormalTextureTransform&&J.include($),H.hasEmissionTextureTransform&&J.include(E),H.hasOcclusionTextureTransform&&J.include(N),H.hasMetallicRoughnessTextureTransform&&J.include(A),B(K,H),J.include(s,H),J.include(i,H);const o=H.normalType===t.Attribute||H.normalType===t.Compressed;o&&H.offsetBackfaces&&J.include(r),J.include(v,H),J.include(g,H),H.instancedColor&&J.attributes.add(q.INSTANCECOLOR,\"vec4\"),X.add(\"vPositionLocal\",\"vec3\"),J.include(c,H),J.include(e,H),J.include(d,H),J.include(m,H),K.uniforms.add(new I(\"externalColor\",(e=>e.externalColor))),X.add(\"vcolorExt\",\"vec4\"),H.multipassEnabled&&X.add(\"depth\",\"float\"),K.code.add(z`\n      void main(void) {\n        forwardNormalizedVertexColor();\n        vcolorExt = externalColor;\n        ${H.instancedColor?\"vcolorExt *= instanceColor * 0.003921568627451;\":\"\"}\n        vcolorExt *= vvColor();\n        vcolorExt *= getSymbolColor();\n        forwardColorMixMode();\n\n        if (vcolorExt.a < ${z.float(V)}) {\n          gl_Position = vec4(1e38, 1e38, 1e38, 1.0);\n        } else {\n          vpos = getVertexInLocalOriginSpace();\n          vPositionLocal = vpos - view[3].xyz;\n          vpos = subtractOrigin(vpos);\n          ${o?z`vNormalWorld = dpNormal(vvLocalNormal(normalModel()));`:\"\"}\n          vpos = addVerticalOffset(vpos, localOrigin);\n          ${H.hasVertexTangents?\"vTangent = dpTransformVertexTangent(tangent);\":\"\"}\n          gl_Position = transformPosition(proj, view, vpos);\n          ${o&&H.offsetBackfaces?\"gl_Position = offsetBackfacingClipPosition(gl_Position, vpos, vNormalWorld, cameraPosition);\":\"\"}\n        }\n\n        ${H.multipassEnabled?\"depth = (view * vec4(vpos, 1.0)).z;\":\"\"}\n        forwardLinearDepth();\n        forwardTextureCoordinates();\n        ${H.hasColorTextureTransform?z`forwardColorUV();`:\"\"}\n        ${H.hasNormalTextureTransform?z`forwardNormalUV();`:\"\"}\n        ${H.hasEmissionTextureTransform?z`forwardEmissiveUV();`:\"\"}\n        ${H.hasOcclusionTextureTransform?z`forwardOcclusionUV();`:\"\"}\n        ${H.hasMetallicRoughnessTextureTransform?z`forwardMetallicRoughnessUV();`:\"\"}\n      }\n    `)}switch(H.output){case o.Alpha:J.include(a,H),J.include(D,H),J.include(y,H),Q.uniforms.add(new R(\"opacity\",(e=>e.opacity)),new R(\"layerOpacity\",(e=>e.layerOpacity))),H.hasColorTexture&&Q.uniforms.add(new k(\"tex\",(e=>e.texture))),Q.include(_),Q.code.add(z`\n      void main() {\n        discardBySlice(vpos);\n        ${H.multipassEnabled?\"terrainDepthTest(depth);\":\"\"}\n        ${H.hasColorTexture?z`\n                vec4 texColor = texture(tex, ${H.hasColorTextureTransform?z`colorUV`:z`vuv0`});\n                ${H.textureAlphaPremultiplied?\"texColor.rgb /= texColor.a;\":\"\"}\n                discardOrAdjustAlpha(texColor);`:z`vec4 texColor = vec4(1.0);`}\n        ${H.hasVertexColors?z`float opacity_ = layerOpacity * mixExternalOpacity(vColor.a * opacity, texColor.a, vcolorExt.a, int(colorMixMode));`:z`float opacity_ = layerOpacity * mixExternalOpacity(opacity, texColor.a, vcolorExt.a, int(colorMixMode));`}\n        fragColor = vec4(opacity_);\n      }\n    `);break;case o.Color:J.include(a,H),J.include(b,H),J.include(h,H),J.include(D,H),J.include(H.instancedDoublePrecision?M:O,H),J.include(y,H),B(Q,H),Q.uniforms.add(K.uniforms.get(\"localOrigin\"),new F(\"ambient\",(e=>e.ambient)),new F(\"diffuse\",(e=>e.diffuse)),new R(\"opacity\",(e=>e.opacity)),new R(\"layerOpacity\",(e=>e.layerOpacity))),H.hasColorTexture&&Q.uniforms.add(new k(\"tex\",(e=>e.texture))),J.include(L,H),J.include(T,H),Q.include(_),J.include(C,H),f(Q),w(Q),x(Q),Q.code.add(z`\n      void main() {\n        discardBySlice(vpos);\n        ${H.multipassEnabled?\"terrainDepthTest(depth);\":\"\"}\n        ${H.hasColorTexture?z`\n                vec4 texColor = texture(tex, ${H.hasColorTextureTransform?z`colorUV`:z`vuv0`});\n                ${H.textureAlphaPremultiplied?\"texColor.rgb /= texColor.a;\":\"\"}\n                discardOrAdjustAlpha(texColor);`:z`vec4 texColor = vec4(1.0);`}\n        shadingParams.viewDirection = normalize(vpos - cameraPosition);\n        ${H.normalType===t.ScreenDerivative?z`\n                vec3 normal = screenDerivativeNormal(vPositionLocal);`:z`\n                shadingParams.normalView = vNormalWorld;\n                vec3 normal = shadingNormal(shadingParams);`}\n        ${H.pbrMode===j.Normal?\"applyPBRFactors();\":\"\"}\n        float ssao = evaluateAmbientOcclusionInverse();\n        ssao *= getBakedOcclusion();\n\n        vec3 posWorld = vpos + localOrigin;\n\n        float additionalAmbientScale = additionalDirectedAmbientLight(posWorld);\n        float shadow = ${H.receiveShadows?\"readShadowMap(vpos, linearDepth)\":H.spherical?\"lightingGlobalFactor * (1.0 - additionalAmbientScale)\":\"0.0\"};\n\n        vec3 matColor = max(ambient, diffuse);\n        ${H.hasVertexColors?z`\n                vec3 albedo = mixExternalColor(vColor.rgb * matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));\n                float opacity_ = layerOpacity * mixExternalOpacity(vColor.a * opacity, texColor.a, vcolorExt.a, int(colorMixMode));`:z`\n                vec3 albedo = mixExternalColor(matColor, texColor.rgb, vcolorExt.rgb, int(colorMixMode));\n                float opacity_ = layerOpacity * mixExternalOpacity(opacity, texColor.a, vcolorExt.a, int(colorMixMode));`}\n        ${H.hasNormalTexture?z`\n                mat3 tangentSpace = ${H.hasVertexTangents?\"computeTangentSpace(normal);\":\"computeTangentSpace(normal, vpos, vuv0);\"}\n                vec3 shadingNormal = computeTextureNormal(tangentSpace, ${H.hasNormalTextureTransform?z`normalUV`:\"vuv0\"});`:z`vec3 shadingNormal = normal;`}\n        vec3 normalGround = ${H.spherical?z`normalize(posWorld);`:z`vec3(0.0, 0.0, 1.0);`}\n\n        ${H.snowCover?z`\n                float snow = smoothstep(0.5, 0.55, dot(normal, normalGround));\n                albedo = mix(albedo, vec3(1), snow);\n                shadingNormal = mix(shadingNormal, normal, snow);\n                ssao = mix(ssao, 1.0, snow);`:\"\"}\n\n        vec3 additionalLight = ssao * mainLightIntensity * additionalAmbientScale * ambientBoostFactor * lightingGlobalFactor;\n\n        ${H.pbrMode===j.Normal||H.pbrMode===j.Schematic?z`\n                float additionalAmbientIrradiance = additionalAmbientIrradianceFactor * mainLightIntensity[2];\n                ${H.snowCover?z`\n                        mrr = mix(mrr, vec3(0.0, 1.0, 0.04), snow);\n                        emission = mix(emission, vec3(0.0), snow);`:\"\"}\n\n                vec3 shadedColor = evaluateSceneLightingPBR(shadingNormal, albedo, shadow, 1.0 - ssao, additionalLight, shadingParams.viewDirection, normalGround, mrr, emission, additionalAmbientIrradiance);`:z`vec3 shadedColor = evaluateSceneLighting(shadingNormal, albedo, shadow, 1.0 - ssao, additionalLight);`}\n        fragColor = highlightSlice(vec4(shadedColor, opacity_), vpos);\n        ${H.transparencyPassType===G.Color?z`fragColor = premultiplyAlpha(fragColor);`:\"\"}\n      }\n    `)}return J.include(p,H),J}const J=Object.freeze(Object.defineProperty({__proto__:null,build:H},Symbol.toStringTag,{value:\"Module\"}));export{J as D,H as b};\n"],
  "mappings": "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",
  "names": ["e", "o", "n", "i", "a", "m", "c", "i", "o", "a", "s", "e", "a", "e", "o", "s", "i", "n", "t", "H", "J", "o", "d", "l", "a", "s", "i", "n", "t", "e", "m", "c", "h"]
}
