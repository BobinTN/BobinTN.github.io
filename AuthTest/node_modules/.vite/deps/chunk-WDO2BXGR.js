import {
  h
} from "./chunk-VA52CKTT.js";
import {
  r
} from "./chunk-S6NERLXF.js";
import {
  c
} from "./chunk-WOGT6UK2.js";
import {
  o
} from "./chunk-BEALJUHO.js";
import {
  p
} from "./chunk-LMT5JII2.js";
import {
  M
} from "./chunk-Y5D433JZ.js";
import {
  f
} from "./chunk-QWPLZ3QH.js";

// node_modules/@arcgis/core/core/accessorSupport/layerContainerType.js
var a = ((a2) => a2)(["operational-layers", "basemap", "ground"]);

// node_modules/@arcgis/core/support/timeUtils.js
function l(e) {
  if (!e)
    return e;
  const { start: i, end: r2 } = e;
  return new c({ start: null != i ? o(i, -i.getTimezoneOffset(), "minutes") : i, end: null != r2 ? o(r2, -r2.getTimezoneOffset(), "minutes") : r2 });
}
function s(e) {
  if (!e)
    return e;
  const { start: i, end: r2 } = e;
  return new c({ start: null != i ? o(i, i.getTimezoneOffset(), "minutes") : i, end: null != r2 ? o(r2, r2.getTimezoneOffset(), "minutes") : r2 });
}

// node_modules/@arcgis/core/layers/support/commonProperties.js
var p2 = { type: Boolean, value: true, json: { origins: { service: { read: false, write: false }, "web-map": { read: false, write: false } }, name: "screenSizePerspective", write: { enabled: true, layerContainerTypes: a } } };
var y = { type: Boolean, value: true, json: { name: "disablePopup", read: { reader: (e, r2) => !r2.disablePopup }, write: { enabled: true, writer(e, r2, n) {
  r2[n] = !e;
} } } };
var m = { type: Boolean, value: true, nonNullable: true, json: { name: "showLabels", write: { enabled: true, layerContainerTypes: a } } };
var d = { type: String, json: { origins: { "portal-item": { write: false } }, write: { isRequired: true, ignoreOrigin: true, writer: p } } };
var c2 = { type: Boolean, value: true, nonNullable: true, json: { origins: { service: { read: { enabled: false } } }, name: "showLegend", write: { enabled: true, layerContainerTypes: a } } };
var f2 = { value: null, type: h, json: { origins: { service: { name: "elevationInfo", write: true } }, name: "layerDefinition.elevationInfo", write: { enabled: true, layerContainerTypes: a } } };
function w(e) {
  return { type: e, readOnly: true, json: { origins: { service: { read: true } }, read: false } };
}
var u = { write: { enabled: true, layerContainerTypes: a }, read: true };
var g = { type: Number, json: { origins: { "web-document": u, "portal-item": { write: true } } } };
var b = { ...g, json: { ...g.json, origins: { "web-document": { ...u, write: { enabled: true, layerContainerTypes: a, target: { opacity: { type: Number }, "layerDefinition.drawingInfo.transparency": { type: Number } } } } }, read: { source: ["layerDefinition.drawingInfo.transparency", "drawingInfo.transparency"], reader: (e, r2, n) => {
  var _a;
  return n && "service" !== n.origin || !r2.drawingInfo || void 0 === r2.drawingInfo.transparency ? ((_a = r2.layerDefinition) == null ? void 0 : _a.drawingInfo) && void 0 !== r2.layerDefinition.drawingInfo.transparency ? r(r2.layerDefinition.drawingInfo.transparency) : void 0 : r(r2.drawingInfo.transparency);
} } } };
var j = { type: c, readOnly: true, get() {
  var _a, _b;
  if (!((_a = this.layer) == null ? void 0 : _a.timeInfo))
    return null;
  const { datesInUnknownTimezone: e, timeOffset: r2, useViewTime: n } = this.layer, i = (_b = this.view) == null ? void 0 : _b.timeExtent;
  let t = this.layer.timeExtent;
  e && (t = s(t));
  let s2 = n ? i && t ? i.intersection(t) : i || t : t;
  if (!s2 || s2.isEmpty || s2.isAllTime)
    return s2;
  r2 && (s2 = s2.offset(-r2.value, r2.unit)), e && (s2 = l(s2));
  const l2 = this._get("timeExtent");
  return s2.equals(l2) ? l2 : s2;
} };
var v = { type: M, readOnly: true, json: { origins: { service: { read: { source: ["fullExtent", "spatialReference"], reader: (e, r2) => {
  const t = M.fromJSON(e);
  return null != r2.spatialReference && "object" == typeof r2.spatialReference && (t.spatialReference = f.fromJSON(r2.spatialReference)), t;
} } } }, read: false } };
var I = { type: String, json: { origins: { service: { read: false }, "portal-item": { read: false } } } };
var T = { type: Number, json: { origins: { service: { write: { enabled: false } }, "web-scene": { name: "layerDefinition.minScale", write: { enabled: true, layerContainerTypes: a } } }, name: "layerDefinition.minScale", write: true } };
var S = { type: Number, json: { origins: { service: { write: { enabled: false } }, "web-scene": { name: "layerDefinition.maxScale", write: { enabled: true, layerContainerTypes: a } } }, name: "layerDefinition.maxScale", write: true } };
var C = { json: { write: { ignoreOrigin: true, layerContainerTypes: a }, origins: { "web-map": { read: false, write: false } } } };

export {
  a,
  p2 as p,
  y,
  m,
  d,
  c2 as c,
  f2 as f,
  w,
  g,
  b,
  j,
  v,
  I,
  T,
  S,
  C
};
//# sourceMappingURL=chunk-WDO2BXGR.js.map
