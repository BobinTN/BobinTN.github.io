import {
  t as t3
} from "./chunk-JZRUQED2.js";
import {
  D
} from "./chunk-3SRIDUXT.js";
import {
  l
} from "./chunk-2SW44O36.js";
import {
  I as I2,
  M as M2,
  P as P2,
  Z,
  z as z2
} from "./chunk-7QTR2TBZ.js";
import {
  t as t2
} from "./chunk-6643GOM6.js";
import {
  N as N2,
  p as p4
} from "./chunk-Z3CHIB6Q.js";
import {
  $,
  E2,
  Ee,
  G2 as G,
  Ge,
  H,
  He,
  I2 as I,
  J2 as J,
  K,
  L,
  Me,
  Ne,
  P2 as P,
  Q,
  Se,
  U,
  Ue,
  Ve,
  W,
  X,
  Y,
  a as a2,
  ae,
  be,
  ce,
  de,
  fe,
  ge,
  h as h2,
  i2 as i,
  k,
  ke,
  ne,
  pe,
  q,
  qe,
  r,
  re,
  t,
  ue,
  v2 as v,
  w,
  z,
  ze
} from "./chunk-24PJGGGS.js";
import {
  p as p3
} from "./chunk-IHXVTF6I.js";
import {
  h,
  m as m2,
  n as n2,
  n2 as n3
} from "./chunk-W4QVNWBV.js";
import {
  p as p2
} from "./chunk-IPCIO3PX.js";
import {
  a,
  j,
  m3 as m,
  u
} from "./chunk-OIIDE5GZ.js";
import {
  DateTime
} from "./chunk-XZS3Q5K4.js";
import {
  j as j2
} from "./chunk-WZPOQGKL.js";
import {
  M
} from "./chunk-Y5D433JZ.js";
import {
  p,
  x2 as x
} from "./chunk-QNOCEWCR.js";
import {
  f
} from "./chunk-QWPLZ3QH.js";
import {
  c
} from "./chunk-WL4VPODY.js";
import {
  N
} from "./chunk-R5DM4YAB.js";
import {
  E
} from "./chunk-RFPH3ZTZ.js";
import {
  n
} from "./chunk-WGO3VFQP.js";

// node_modules/@arcgis/core/arcade/ArcadeModuleLoader.js
var s = class {
  constructor(s4, t6) {
    this._moduleSingletons = s4, this._syntaxModules = t6;
  }
  loadLibrary(s4) {
    if (null == this._syntaxModules)
      return null;
    const t6 = this._syntaxModules[s4.toLowerCase()];
    return t6 ? { syntax: t6.script, uri: t6.uri } : null;
  }
};

// node_modules/@arcgis/core/arcade/treeAnalysis.js
var e = { all: { min: 2, max: 2 }, time: { min: 0, max: 4 }, dateonly: { min: 0, max: 3 }, getenvironment: { min: 0, max: 0 }, none: { min: 2, max: 2 }, any: { min: 2, max: 2 }, reduce: { min: 2, max: 3 }, map: { min: 2, max: 2 }, filter: { min: 2, max: 2 }, fromcodepoint: { min: 1, max: -1 }, fromcharcode: { min: 1, max: -1 }, tocodepoint: { min: 1, max: 2 }, tocharcode: { min: 1, max: 2 }, concatenate: { min: 0, max: -1 }, expects: { min: 1, max: -1 }, getfeatureset: { min: 1, max: 2 }, week: { min: 1, max: 2 }, fromjson: { min: 1, max: 1 }, length3d: { min: 1, max: 2 }, tohex: { min: 1, max: 1 }, hash: { min: 1, max: 1 }, timezone: { min: 1, max: 1 }, timezoneoffset: { min: 1, max: 1 }, changetimezone: { min: 2, max: 2 }, isoweek: { min: 1, max: 1 }, isoweekday: { min: 1, max: 1 }, hasvalue: { min: 2, max: 2 }, isomonth: { min: 1, max: 1 }, isoyear: { min: 1, max: 1 }, resize: { min: 2, max: 3 }, slice: { min: 0, max: -1 }, splice: { min: 0, max: -1 }, push: { min: 2, max: 2 }, pop: { min: 1, max: 1 }, includes: { min: 2, max: 2 }, array: { min: 0, max: 2 }, front: { min: 1, max: 1 }, back: { min: 1, max: 1 }, insert: { min: 3, max: 3 }, erase: { min: 2, max: 2 }, split: { min: 2, max: 4 }, guid: { min: 0, max: 1 }, standardizeguid: { min: 2, max: 2 }, today: { min: 0, max: 0 }, angle: { min: 2, max: 3 }, bearing: { min: 2, max: 3 }, urlencode: { min: 1, max: 1 }, now: { min: 0, max: 0 }, timestamp: { min: 0, max: 0 }, day: { min: 1, max: 1 }, month: { min: 1, max: 1 }, year: { min: 1, max: 1 }, hour: { min: 1, max: 1 }, second: { min: 1, max: 1 }, millisecond: { min: 1, max: 1 }, minute: { min: 1, max: 1 }, weekday: { min: 1, max: 1 }, toutc: { min: 1, max: 1 }, tolocal: { min: 1, max: 1 }, date: { min: 0, max: 8 }, datediff: { min: 2, max: 4 }, dateadd: { min: 2, max: 3 }, trim: { min: 1, max: 1 }, text: { min: 1, max: 2 }, left: { min: 2, max: 2 }, right: { min: 2, max: 2 }, mid: { min: 2, max: 3 }, upper: { min: 1, max: 1 }, proper: { min: 1, max: 2 }, lower: { min: 1, max: 1 }, find: { min: 2, max: 3 }, iif: { min: 3, max: 3 }, decode: { min: 2, max: -1 }, when: { min: 2, max: -1 }, defaultvalue: { min: 2, max: 2 }, isempty: { min: 1, max: 1 }, domaincode: { min: 2, max: 4 }, domainname: { min: 2, max: 4 }, polygon: { min: 1, max: 1 }, point: { min: 1, max: 1 }, polyline: { min: 1, max: 1 }, extent: { min: 1, max: 1 }, multipoint: { min: 1, max: 1 }, ringisclockwise: { min: 1, max: 1 }, geometry: { min: 1, max: 1 }, count: { min: 0, max: -1 }, number: { min: 1, max: 2 }, acos: { min: 1, max: 1 }, asin: { min: 1, max: 1 }, atan: { min: 1, max: 1 }, atan2: { min: 2, max: 2 }, ceil: { min: 1, max: 2 }, floor: { min: 1, max: 2 }, round: { min: 1, max: 2 }, cos: { min: 1, max: 1 }, exp: { min: 1, max: 1 }, log: { min: 1, max: 1 }, min: { min: 0, max: -1 }, constrain: { min: 3, max: 3 }, console: { min: 0, max: -1 }, max: { min: 0, max: -1 }, pow: { min: 2, max: 2 }, random: { min: 0, max: 0 }, sqrt: { min: 1, max: 1 }, sin: { min: 1, max: 1 }, tan: { min: 1, max: 1 }, abs: { min: 1, max: 1 }, isnan: { min: 1, max: 1 }, stdev: { min: 0, max: -1 }, average: { min: 0, max: -1 }, mean: { min: 0, max: -1 }, sum: { min: 0, max: -1 }, variance: { min: 0, max: -1 }, distinct: { min: 0, max: -1 }, first: { min: 1, max: 1 }, top: { min: 2, max: 2 }, boolean: { min: 1, max: 1 }, dictionary: { min: 0, max: -1 }, typeof: { min: 1, max: 1 }, reverse: { min: 1, max: 1 }, replace: { min: 3, max: 4 }, sort: { min: 1, max: 2 }, feature: { min: 1, max: -1 }, haskey: { min: 2, max: 2 }, indexof: { min: 2, max: 2 }, disjoint: { min: 2, max: 2 }, intersects: { min: 2, max: 2 }, touches: { min: 2, max: 2 }, crosses: { min: 2, max: 2 }, within: { min: 2, max: 2 }, contains: { min: 2, max: 2 }, overlaps: { min: 2, max: 2 }, equals: { min: 2, max: 2 }, relate: { min: 3, max: 3 }, intersection: { min: 2, max: 2 }, union: { min: 1, max: 2 }, difference: { min: 2, max: 2 }, symmetricdifference: { min: 2, max: 2 }, clip: { min: 2, max: 2 }, cut: { min: 2, max: 2 }, area: { min: 1, max: 2 }, areageodetic: { min: 1, max: 2 }, length: { min: 1, max: 2 }, lengthgeodetic: { min: 1, max: 2 }, distancegeodetic: { min: 2, max: 3 }, distance: { min: 2, max: 3 }, densify: { min: 2, max: 3 }, densifygeodetic: { min: 2, max: 3 }, generalize: { min: 2, max: 4 }, buffer: { min: 2, max: 3 }, buffergeodetic: { min: 2, max: 3 }, offset: { min: 2, max: 6 }, rotate: { min: 2, max: 3 }, issimple: { min: 1, max: 1 }, simplify: { min: 1, max: 1 }, convexhull: { min: 1, max: 1 }, centroid: { min: 1, max: 1 }, nearestcoordinate: { min: 2, max: 2 }, nearestvertex: { min: 2, max: 2 }, isselfintersecting: { min: 1, max: 1 }, multiparttosinglepart: { min: 1, max: 1 }, setgeometry: { min: 2, max: 2 }, portal: { min: 1, max: 1 }, getuser: { min: 0, max: 2 }, subtypes: { min: 1, max: 1 }, subtypecode: { min: 1, max: 1 }, subtypename: { min: 1, max: 1 }, domain: { min: 2, max: 3 }, convertdirection: { min: 3, max: 3 }, sqltimestamp: { min: 1, max: 3 }, schema: { min: 1, max: 1 } };
var n4 = { functionDefinitions: /* @__PURE__ */ new Map(), constantDefinitions: /* @__PURE__ */ new Map() };
var a3 = { functionDefinitions: /* @__PURE__ */ new Map(), constantDefinitions: /* @__PURE__ */ new Map() };
for (const b2 of ["pi", "infinity"])
  a3.constantDefinitions.set(b2, { type: "constant" }), n4.constantDefinitions.set(b2, { type: "constant" });
a3.constantDefinitions.set("textformatting", { type: "namespace", key: "textformatting", members: [{ key: "backwardslash", type: "constant" }, { key: "doublequote", type: "constant" }, { key: "forwardslash", type: "constant" }, { key: "tab", type: "constant" }, { key: "singlequote", type: "constant" }, { key: "newline", type: "constant" }] }), n4.constantDefinitions.set("textformatting", { type: "namespace", key: "textformatting", members: [{ key: "backwardslash", type: "constant" }, { key: "tab", type: "constant" }, { key: "singlequote", type: "constant" }, { key: "doublequote", type: "constant" }, { key: "forwardslash", type: "constant" }, { key: "newline", type: "constant" }] });
for (const b2 in e) {
  const t6 = e[b2];
  a3.functionDefinitions.set(b2, { overloads: [{ type: "function", parametersInfo: { min: t6.min, max: t6.max } }] }), n4.functionDefinitions.set(b2, { overloads: [{ type: "function", parametersInfo: { min: t6.min, max: t6.max } }] });
}
var t4 = /* @__PURE__ */ new Set(["featureset", "featuresetbyid", "featuresetbyname", "featuresetbyassociation", "featuresetbyrelationshipname", "featuresetbyurl", "getfeatureset", "getuser", "attachments", "featuresetbyportalitem", "getfeaturesetinfo"]);
var m3 = /* @__PURE__ */ new Set(["disjoint", "intersects", "touches", "crosses", "within", "contains", "overlaps", "equals", "relate", "intersection", "nearestvertex", "nearestcoordinate", "union", "difference", "symmetricdifference", "clip", "cut", "area", "areageodetic", "length", "length3d", "lengthgeodetic", "distance", "distancegeodetic", "densify", "densifygeodetic", "generalize", "buffer", "buffergeodetic", "offset", "rotate", "issimple", "convexhull", "simplify", "multiparttosinglepart"]);
function i2(e3) {
  return "string" == typeof e3 || e3 instanceof String;
}
function o(e3, t6) {
  var _a;
  const m6 = "sync" === t6 ? n4 : a3;
  m6.functionDefinitions.has(e3.name.toLowerCase()) ? (_a = m6.functionDefinitions.get(e3.name.toLowerCase())) == null ? void 0 : _a.overloads.push({ type: "function", parametersInfo: { min: e3.min, max: e3.max } }) : m6.functionDefinitions.set(e3.name.toLowerCase(), { overloads: [{ type: "function", parametersInfo: { min: e3.min, max: e3.max } }] });
}
function s2(e3, n6) {
  if (e3)
    for (const a5 of e3)
      r2(a5, n6);
}
function r2(e3, n6) {
  if (e3 && false !== n6(e3))
    switch (e3.type) {
      case "ImportDeclaration":
        s2(e3.specifiers, n6), r2(e3.source, n6);
        break;
      case "ExportNamedDeclaration":
        r2(e3.declaration, n6);
        break;
      case "ArrayExpression":
        s2(e3.elements, n6);
        break;
      case "AssignmentExpression":
      case "BinaryExpression":
      case "LogicalExpression":
        r2(e3.left, n6), r2(e3.right, n6);
        break;
      case "BlockStatement":
      case "Program":
        s2(e3.body, n6);
        break;
      case "BreakStatement":
      case "ContinueStatement":
      case "EmptyStatement":
      case "Identifier":
      case "Literal":
        break;
      case "CallExpression":
        r2(e3.callee, n6), s2(e3.arguments, n6);
        break;
      case "ExpressionStatement":
        r2(e3.expression, n6);
        break;
      case "ForInStatement":
        r2(e3.left, n6), r2(e3.right, n6), r2(e3.body, n6);
        break;
      case "ForStatement":
        r2(e3.init, n6), r2(e3.test, n6), r2(e3.update, n6), r2(e3.body, n6);
        break;
      case "WhileStatement":
        r2(e3.test, n6), r2(e3.body, n6);
        break;
      case "FunctionDeclaration":
        r2(e3.id, n6), s2(e3.params, n6), r2(e3.body, n6);
        break;
      case "IfStatement":
        r2(e3.test, n6), r2(e3.consequent, n6), r2(e3.alternate, n6);
        break;
      case "MemberExpression":
        r2(e3.object, n6), r2(e3.property, n6);
        break;
      case "ObjectExpression":
        s2(e3.properties, n6);
        break;
      case "Property":
        r2(e3.key, n6), r2(e3.value, n6);
        break;
      case "ReturnStatement":
      case "UnaryExpression":
      case "UpdateExpression":
        r2(e3.argument, n6);
        break;
      case "VariableDeclaration":
        s2(e3.declarations, n6);
        break;
      case "VariableDeclarator":
        r2(e3.id, n6), r2(e3.init, n6);
        break;
      case "TemplateLiteral":
        s2(e3.expressions, n6), s2(e3.quasis, n6);
    }
}
function c2(e3, n6) {
  let a5 = false;
  const t6 = n6.toLowerCase();
  return r2(e3, (e4) => !a5 && ("Identifier" === e4.type && e4.name && e4.name.toLowerCase() === t6 && (a5 = true), true)), a5;
}
function x2(e3) {
  const n6 = [];
  return r2(e3, (e4) => ("ImportDeclaration" === e4.type && e4.source && e4.source.value && n6.push({ libname: e4.specifiers[0].local.name.toLowerCase(), source: e4.source.value }), true)), n6;
}
function p5(e3, n6) {
  let a5 = false;
  const t6 = n6.toLowerCase();
  return r2(e3, (e4) => !a5 && ("CallExpression" !== e4.type || "Identifier" !== e4.callee.type || !e4.callee.name || e4.callee.name.toLowerCase() !== t6 || (a5 = true, false))), a5;
}
function l2(e3) {
  const n6 = [];
  return r2(e3, (e4) => {
    var _a;
    return "MemberExpression" !== e4.type || "Identifier" !== e4.object.type || (false === e4.computed && e4.object && e4.object.name && e4.property && "Identifier" === e4.property.type && e4.property.name ? n6.push(e4.object.name.toLowerCase() + "." + e4.property.name.toLowerCase()) : e4.object && e4.object.name && e4.property && "Literal" === e4.property.type && "string" == typeof e4.property.value && n6.push(e4.object.name.toLowerCase() + "." + ((_a = e4.property.value) == null ? void 0 : _a.toString().toLowerCase())), false);
  }), n6;
}
function u2(e3) {
  const n6 = [];
  return r2(e3, (e4) => {
    var _a;
    if ("CallExpression" === e4.type) {
      if ("Identifier" === e4.callee.type && "expects" === e4.callee.name.toLowerCase()) {
        let a5 = "";
        for (let t6 = 0; t6 < (e4.arguments || []).length; t6++)
          0 === t6 ? "Identifier" === e4.arguments[t6].type && (a5 = e4.arguments[t6].name.toLowerCase()) : a5 && "Literal" === e4.arguments[t6].type && i2(e4.arguments[t6].value) && n6.push(a5 + "." + e4.arguments[t6].value.toLowerCase());
        return false;
      }
      if ("Identifier" === e4.callee.type && ["domainname", "domaincode", "domain", "haskey"].includes(e4.callee.name.toLowerCase()) && e4.arguments.length >= 2) {
        let a5 = "";
        return "Identifier" === e4.arguments[0].type && (a5 = e4.arguments[0].name.toLowerCase()), a5 && "Literal" === e4.arguments[1].type && i2(e4.arguments[1].value) && n6.push(a5 + "." + e4.arguments[1].value.toLowerCase()), false;
      }
    }
    return "MemberExpression" !== e4.type || "Identifier" !== e4.object.type || (false === e4.computed && e4.object && e4.object.name && e4.property && "Identifier" === e4.property.type && e4.property.name ? n6.push(e4.object.name.toLowerCase() + "." + e4.property.name.toLowerCase()) : e4.object && e4.object.name && e4.property && "Literal" === e4.property.type && "string" == typeof e4.property.value && n6.push(e4.object.name.toLowerCase() + "." + ((_a = e4.property.value) == null ? void 0 : _a.toString().toLowerCase())), false);
  }), n6;
}
function y(e3) {
  const n6 = [];
  return r2(e3, (e4) => ("CallExpression" === e4.type && "Identifier" === e4.callee.type && n6.push(e4.callee.name.toLowerCase()), true)), n6;
}
function d(e3, n6 = []) {
  let a5 = null;
  if (void 0 === e3.usesFeatureSet) {
    null === a5 && (a5 = y(e3)), e3.usesFeatureSet = false;
    for (let n7 = 0; n7 < a5.length; n7++)
      t4.has(a5[n7]) && (e3.usesFeatureSet = true, e3.isAsync = true);
    if (false === e3.usesFeatureSet && n6 && n6.length > 0) {
      for (const a6 of n6)
        if (c2(e3, a6)) {
          e3.usesFeatureSet = true, e3.isAsync = true;
          break;
        }
    }
  }
  if (void 0 === e3.usesModules) {
    e3.usesModules = false;
    x2(e3).length > 0 && (e3.usesModules = true);
  }
  if (void 0 === e3.usesGeometry) {
    e3.usesGeometry = false, null === a5 && (a5 = y(e3));
    for (let n7 = 0; n7 < a5.length; n7++)
      m3.has(a5[n7]) && (e3.usesGeometry = true);
  }
}

// node_modules/@arcgis/core/chunks/array.js
function F(F3) {
  function p9(n6, o2, u3) {
    if (n6 instanceof t)
      return n6.toArray();
    if (q(n6))
      return n6;
    throw new a2(o2, r.InvalidParameter, u3);
  }
  function y3(n6, t6) {
    const r4 = n6.length, e3 = Math.floor(r4 / 2);
    return 0 === r4 ? [] : 1 === r4 ? [n6[0]] : v3(y3(n6.slice(0, e3), t6), y3(n6.slice(e3, r4), t6), t6);
  }
  function v3(n6, t6, r4) {
    const e3 = [];
    for (; n6.length > 0 || t6.length > 0; )
      if (n6.length > 0 && t6.length > 0) {
        let o2 = r4(n6[0], t6[0]);
        isNaN(o2) && (o2 = 0), o2 <= 0 ? (e3.push(n6[0]), n6 = n6.slice(1)) : (e3.push(t6[0]), t6 = t6.slice(1));
      } else
        n6.length > 0 ? (e3.push(n6[0]), n6 = n6.slice(1)) : t6.length > 0 && (e3.push(t6[0]), t6 = t6.slice(1));
    return e3;
  }
  async function P5(n6, t6) {
    const r4 = n6.length, e3 = Math.floor(r4 / 2);
    if (0 === r4)
      return [];
    if (1 === r4)
      return [n6[0]];
    const o2 = [await P5(n6.slice(0, e3), t6), await P5(n6.slice(e3, r4), t6)];
    return I4(o2[0], o2[1], t6, []);
  }
  async function I4(n6, t6, r4, e3) {
    const o2 = e3;
    if (!(n6.length > 0 || t6.length > 0))
      return e3;
    if (n6.length > 0 && t6.length > 0) {
      let i4 = await r4(n6[0], t6[0]);
      return isNaN(i4) && (i4 = 1), i4 <= 0 ? (o2.push(n6[0]), n6 = n6.slice(1)) : (o2.push(t6[0]), t6 = t6.slice(1)), I4(n6, t6, r4, e3);
    }
    return n6.length > 0 ? (o2.push(n6[0]), I4(n6 = n6.slice(1), t6, r4, e3)) : t6.length > 0 ? (o2.push(t6[0]), I4(n6, t6 = t6.slice(1), r4, e3)) : void 0;
  }
  function N4(n6, e3, u3, a5) {
    ne(u3, 1, 2, n6, e3);
    let s4 = u3[0];
    if ($(s4) && (s4 = s4.toArray()), false === q(s4))
      throw new a2(n6, r.InvalidParameter, e3);
    if (u3.length > 1) {
      if (false === v(u3[1]))
        throw new a2(n6, r.InvalidParameter, e3);
      let o2 = s4;
      const i4 = u3[1].createFunction(n6);
      return a5 ? P5(o2, i4) : (o2 = y3(o2, (n7, t6) => i4(n7, t6)), o2);
    }
    let l4 = s4;
    if (0 === l4.length)
      return [];
    const d3 = {};
    for (let t6 = 0; t6 < l4.length; t6++) {
      const n7 = Y(l4[t6]);
      "" !== n7 && (d3[n7] = true);
    }
    if (true === d3.Array || true === d3.Dictionary || true === d3.Feature || true === d3.Point || true === d3.Polygon || true === d3.Polyline || true === d3.Multipoint || true === d3.Extent || true === d3.Function)
      return l4.slice(0);
    let m6 = 0, F4 = "";
    for (const t6 in d3)
      m6++, F4 = t6;
    return l4 = m6 > 1 || "String" === F4 ? y3(l4, (n7, t6) => {
      if (null == n7 || n7 === w)
        return null == t6 || t6 === w ? 0 : 1;
      if (null == t6 || t6 === w)
        return -1;
      const r4 = ce(n7), e4 = ce(t6);
      return r4 < e4 ? -1 : r4 === e4 ? 0 : 1;
    }) : "Number" === F4 ? y3(l4, (n7, t6) => n7 - t6) : "Boolean" === F4 ? y3(l4, (n7, t6) => n7 === t6 ? 0 : t6 ? -1 : 1) : "Date" === F4 ? y3(l4, (n7, t6) => t6 - n7) : l4.slice(0), l4;
  }
  F3.functions.array = function(e3, f3) {
    return F3.standardFunction(e3, f3, (d3, h5, w3) => {
      if (ne(w3, 0, 2, e3, f3), 0 === w3.length)
        return new Array();
      if (1 === w3.length && null === w3[0])
        return new Array();
      if (q(w3[0])) {
        if (2 === w3.length && false === G(w3[1]))
          throw new a2(e3, r.InvalidParameter, f3);
        return true === L(w3[1], false) ? p4(w3[0]) : w3[0].slice(0);
      }
      if ($(w3[0])) {
        if (2 === w3.length && false === G(w3[1]))
          throw new a2(e3, r.InvalidParameter, f3);
        return true === L(w3[1], false) ? p4(w3[0]) : w3[0].toArray().slice(0);
      }
      const g2 = pe(w3[0]);
      if (isNaN(g2) || false === E2(g2))
        throw new a2(e3, r.InvalidParameter, f3);
      const m6 = L(w3[1], null), F4 = new Array(g2);
      return F4.fill(m6), F4;
    });
  }, F3.functions.front = function(n6, e3) {
    return F3.standardFunction(n6, e3, (u3, a5, s4) => {
      if (ne(s4, 1, 1, n6, e3), $(s4[0])) {
        if (s4[0].length() <= 0)
          throw new a2(n6, r.OutOfBounds, e3);
        return s4[0].get(0);
      }
      if (q(s4[0])) {
        if (s4[0].length <= 0)
          throw new a2(n6, r.OutOfBounds, e3);
        return s4[0][0];
      }
      throw new a2(n6, r.InvalidParameter, e3);
    });
  }, F3.functions.back = function(n6, e3) {
    return F3.standardFunction(n6, e3, (u3, a5, s4) => {
      if (ne(s4, 1, 1, n6, e3), $(s4[0])) {
        if (s4[0].length() <= 0)
          throw new a2(n6, r.OutOfBounds, e3);
        return s4[0].get(s4[0].length() - 1);
      }
      if (q(s4[0])) {
        if (s4[0].length <= 0)
          throw new a2(n6, r.OutOfBounds, e3);
        return s4[0][s4[0].length - 1];
      }
      throw new a2(n6, r.InvalidParameter, e3);
    });
  }, F3.functions.push = function(n6, e3) {
    return F3.standardFunction(n6, e3, (u3, a5, c3) => {
      if (ne(c3, 1, 2, n6, e3), q(c3[0]))
        return c3[0][c3[0].length] = c3[1], c3[0].length;
      throw new a2(n6, r.InvalidParameter, e3);
    });
  }, F3.functions.pop = function(n6, e3) {
    return F3.standardFunction(n6, e3, (u3, a5, c3) => {
      if (ne(c3, 1, 1, n6, e3), q(c3[0])) {
        if (c3[0].length <= 0)
          throw new a2(n6, r.OutOfBounds, e3);
        const o2 = c3[0][c3[0].length - 1];
        return c3[0].length = c3[0].length - 1, o2;
      }
      throw new a2(n6, r.InvalidParameter, e3);
    });
  }, F3.functions.erase = function(n6, e3) {
    return F3.standardFunction(n6, e3, (u3, a5, c3) => {
      if (ne(c3, 2, 2, n6, e3), q(c3[0])) {
        let o2 = pe(c3[1]);
        if (isNaN(o2) || false === E2(o2))
          throw new a2(n6, r.InvalidParameter, e3);
        const i4 = c3[0];
        if (i4.length <= 0)
          throw new a2(n6, r.OutOfBounds, e3);
        if (o2 < 0 && (o2 = i4.length + o2), o2 < 0)
          throw new a2(n6, r.OutOfBounds, e3);
        if (o2 >= i4.length)
          throw new a2(n6, r.OutOfBounds, e3);
        return i4.splice(o2, 1), w;
      }
      throw new a2(n6, r.InvalidParameter, e3);
    });
  }, F3.functions.insert = function(n6, e3) {
    return F3.standardFunction(n6, e3, (u3, a5, c3) => {
      if (ne(c3, 3, 3, n6, e3), q(c3[0])) {
        const o2 = pe(c3[1]);
        if (isNaN(o2) || false === E2(o2))
          throw new a2(n6, r.InvalidParameter, e3);
        const i4 = c3[2], u4 = c3[0];
        if (o2 > u4.length)
          throw new a2(n6, r.OutOfBounds, e3);
        if (o2 < 0 && o2 < -1 * u4.length)
          throw new a2(n6, r.OutOfBounds, e3);
        return o2 === u4.length ? (u4[o2] = i4, w) : (u4.splice(o2, 0, i4), w);
      }
      throw new a2(n6, r.InvalidParameter, e3);
    });
  }, F3.functions.resize = function(n6, e3) {
    return F3.standardFunction(n6, e3, (u3, c3, d3) => {
      if (ne(d3, 2, 3, n6, e3), q(d3[0])) {
        const o2 = pe(d3[1]);
        if (isNaN(o2) || false === E2(o2))
          throw new a2(n6, r.InvalidParameter, e3);
        if (o2 < 0)
          throw new a2(n6, r.InvalidParameter, e3);
        const i4 = L(d3[2], null), u4 = d3[0];
        if (u4.length >= o2)
          return u4.length = o2, w;
        const c4 = u4.length;
        u4.length = o2;
        for (let n7 = c4; n7 < u4.length; n7++)
          u4[n7] = i4;
        return w;
      }
      throw new a2(n6, r.InvalidParameter, e3);
    });
  }, F3.functions.includes = function(n6, e3) {
    return F3.standardFunction(n6, e3, (u3, a5, s4) => {
      if (ne(s4, 2, 2, n6, e3), q(s4[0])) {
        const n7 = s4[1];
        return s4[0].findIndex((t6) => fe(t6, n7)) > -1;
      }
      if ($(s4[0])) {
        const n7 = s4[1];
        return s4[0].toArray().findIndex((t6) => fe(t6, n7)) > -1;
      }
      throw new a2(n6, r.InvalidParameter, e3);
    });
  }, F3.functions.slice = function(n6, e3) {
    return F3.standardFunction(n6, e3, (u3, f3, d3) => {
      if (ne(d3, 1, 3, n6, e3), q(d3[0])) {
        const o2 = pe(L(d3[1], 0)), i4 = pe(L(d3[2], d3[0].length));
        if (isNaN(o2) || false === E2(o2))
          throw new a2(n6, r.InvalidParameter, e3);
        if (isNaN(i4) || false === E2(i4))
          throw new a2(n6, r.InvalidParameter, e3);
        return d3[0].slice(o2, i4);
      }
      if ($(d3[0])) {
        const o2 = d3[0], i4 = pe(L(d3[1], 0)), u4 = pe(L(d3[2], o2.length()));
        if (isNaN(i4) || false === E2(i4))
          throw new a2(n6, r.InvalidParameter, e3);
        if (isNaN(u4) || false === E2(u4))
          throw new a2(n6, r.InvalidParameter, e3);
        return o2.toArray().slice(i4, u4);
      }
      throw new a2(n6, r.InvalidParameter, e3);
    });
  }, F3.functions.splice = function(n6, t6) {
    return F3.standardFunction(n6, t6, (n7, t7, r4) => {
      const e3 = [];
      for (let o2 = 0; o2 < r4.length; o2++)
        q(r4[o2]) ? e3.push(...r4[o2]) : $(r4[o2]) ? e3.push(...r4[o2].toArray()) : e3.push(r4[o2]);
      return e3;
    });
  }, F3.functions.top = function(n6, e3) {
    return F3.standardFunction(n6, e3, (u3, a5, l4) => {
      if (ne(l4, 2, 2, n6, e3), q(l4[0]))
        return pe(l4[1]) >= l4[0].length ? l4[0].slice(0) : l4[0].slice(0, pe(l4[1]));
      if ($(l4[0]))
        return pe(l4[1]) >= l4[0].length() ? l4[0].slice(0) : l4[0].slice(0, pe(l4[1]));
      throw new a2(n6, r.InvalidParameter, e3);
    });
  }, F3.functions.first = function(n6, t6) {
    return F3.standardFunction(n6, t6, (r4, e3, u3) => (ne(u3, 1, 1, n6, t6), q(u3[0]) ? 0 === u3[0].length ? null : u3[0][0] : $(u3[0]) ? 0 === u3[0].length() ? null : u3[0].get(0) : null));
  }, "sync" === F3.mode && (F3.functions.sort = function(n6, t6) {
    return F3.standardFunction(n6, t6, (r4, e3, o2) => N4(n6, t6, o2, false));
  }, F3.functions.any = function(n6, t6) {
    return F3.standardFunction(n6, t6, (r4, e3, i4) => {
      ne(i4, 2, 2, n6, t6);
      const a5 = i4[1].createFunction(n6), c3 = p9(i4[0], n6, t6);
      for (const n7 of c3) {
        const t7 = a5(n7);
        if (G(t7) && true === t7)
          return true;
      }
      return false;
    });
  }, F3.functions.all = function(n6, t6) {
    return F3.standardFunction(n6, t6, (r4, e3, i4) => {
      ne(i4, 2, 2, n6, t6);
      const u3 = i4[1].createFunction(n6), a5 = p9(i4[0], n6, t6);
      for (const n7 of a5) {
        if (true !== u3(n7))
          return false;
      }
      return true;
    });
  }, F3.functions.none = function(n6, t6) {
    return F3.standardFunction(n6, t6, (r4, e3, i4) => {
      ne(i4, 2, 2, n6, t6);
      const u3 = i4[1].createFunction(n6), a5 = p9(i4[0], n6, t6);
      for (const n7 of a5) {
        if (true === u3(n7))
          return false;
      }
      return true;
    });
  }, F3.functions.reduce = function(n6, t6) {
    return F3.standardFunction(n6, t6, (r4, e3, i4) => {
      ne(i4, 2, 3, n6, t6);
      const u3 = i4[1].createFunction(n6), a5 = p9(i4[0], n6, t6);
      return 2 === i4.length ? 0 === a5.length ? null : a5.reduce((n7, t7) => {
        const r5 = u3(n7, t7);
        return n7 = void 0 !== r5 && r5 !== w ? r5 : null;
      }) : a5.reduce((n7, t7) => {
        const r5 = u3(n7, t7);
        return n7 = void 0 !== r5 && r5 !== w ? r5 : null;
      }, i4[2]);
    });
  }, F3.functions.map = function(n6, t6) {
    return F3.standardFunction(n6, t6, (r4, e3, i4) => {
      ne(i4, 2, 2, n6, t6);
      const u3 = i4[1].createFunction(n6), a5 = p9(i4[0], n6, t6), c3 = [];
      for (const n7 of a5) {
        const t7 = u3(n7);
        void 0 !== t7 && t7 !== w ? c3.push(t7) : c3.push(null);
      }
      return c3;
    });
  }, F3.functions.filter = function(n6, t6) {
    return F3.standardFunction(n6, t6, (r4, e3, i4) => {
      ne(i4, 2, 2, n6, t6);
      const u3 = i4[1].createFunction(n6), a5 = p9(i4[0], n6, t6), c3 = [];
      for (const n7 of a5) {
        true === u3(n7) && c3.push(n7);
      }
      return c3;
    });
  }), "async" === F3.mode && (F3.functions.sort = function(n6, t6) {
    return F3.standardFunctionAsync(n6, t6, (r4, e3, o2) => N4(n6, t6, o2, true));
  }, F3.functions.any = function(n6, t6) {
    return F3.standardFunctionAsync(n6, t6, async (r4, e3, i4) => {
      ne(i4, 2, 2, n6, t6);
      const a5 = i4[1].createFunction(n6), c3 = p9(i4[0], n6, t6);
      for (const n7 of c3) {
        const t7 = await a5(n7);
        let r5 = null;
        if (r5 = E(r5) ? await t7 : t7, G(r5) && true === r5)
          return true;
      }
      return false;
    });
  }, F3.functions.all = function(n6, t6) {
    return F3.standardFunctionAsync(n6, t6, async (r4, e3, i4) => {
      ne(i4, 2, 2, n6, t6);
      const u3 = i4[1].createFunction(n6), a5 = p9(i4[0], n6, t6);
      for (const n7 of a5) {
        const t7 = await u3(n7);
        let r5 = null;
        if (r5 = E(r5) ? await t7 : t7, true !== r5)
          return false;
      }
      return true;
    });
  }, F3.functions.none = function(n6, t6) {
    return F3.standardFunctionAsync(n6, t6, async (r4, e3, i4) => {
      ne(i4, 2, 2, n6, t6);
      const u3 = i4[1].createFunction(n6), a5 = p9(i4[0], n6, t6);
      for (const n7 of a5) {
        const t7 = await u3(n7);
        let r5 = null;
        if (r5 = E(r5) ? await t7 : t7, true === r5)
          return false;
      }
      return true;
    });
  }, F3.functions.filter = function(n6, t6) {
    return F3.standardFunctionAsync(n6, t6, async (r4, e3, i4) => {
      ne(i4, 2, 2, n6, t6);
      const u3 = i4[1].createFunction(n6), a5 = p9(i4[0], n6, t6), c3 = [];
      for (const n7 of a5) {
        const t7 = await u3(n7);
        let r5 = null;
        r5 = E(r5) ? await t7 : t7, true === r5 && c3.push(n7);
      }
      return c3;
    });
  }, F3.functions.reduce = function(n6, t6) {
    return F3.standardFunctionAsync(n6, t6, (r4, e3, i4) => {
      ne(i4, 2, 3, n6, t6);
      const u3 = i4[1].createFunction(n6), c3 = p9(i4[0], n6, t6);
      let s4 = null;
      if (i4.length > 2) {
        const n7 = L(i4[2], null);
        s4 = c3.reduce(async (n8, t7) => {
          let r5 = await n8;
          return void 0 !== r5 && r5 !== w || (r5 = null), u3(r5, t7);
        }, Promise.resolve(n7));
      } else {
        if (0 === c3.length)
          return null;
        s4 = c3.reduce(async (n7, t7, r5) => {
          if (r5 <= 1)
            return u3(n7, t7);
          let e4 = await n7;
          return void 0 !== e4 && e4 !== w || (e4 = null), u3(e4, t7);
        });
      }
      return s4.then((n7) => void 0 !== n7 && n7 !== w ? n7 : null);
    });
  }, F3.functions.map = function(n6, t6) {
    return F3.standardFunctionAsync(n6, t6, async (r4, e3, i4) => {
      ne(i4, 2, 2, n6, t6);
      const u3 = i4[1].createFunction(n6), a5 = p9(i4[0], n6, t6), c3 = [];
      for (const n7 of a5) {
        const t7 = await u3(n7);
        let r5 = null;
        r5 = E(r5) ? await t7 : t7, void 0 !== r5 && r5 !== w ? c3.push(r5) : c3.push(null);
      }
      return c3;
    });
  });
}
var p6 = Object.freeze(Object.defineProperty({ __proto__: null, registerFunctions: F }, Symbol.toStringTag, { value: "Module" }));

// node_modules/@arcgis/core/arcade/functions/date.js
function k2(n6, e3, r4) {
  return n6 + (T(r4) ? P3 : D2)[e3];
}
function T(n6) {
  return n6 % 4 == 0 && (n6 % 100 != 0 || n6 % 400 == 0);
}
var D2 = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];
var P3 = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335];
function S(n6) {
  return null === n6 ? n6 : false === n6.isValid ? null : n6;
}
function Z2(n6, e3) {
  return "" === n6 || "default" === n6.toLowerCase().trim() ? qe(e3) : "z" === n6 || "Z" === n6 ? "UTC" : n6;
}
function p7(n6, e3) {
  return X(n6) ? n6.toArcadeDate() : ge(n6, qe(e3));
}
function C(T3, D4) {
  T3.today = function(e3, r4) {
    return D4(e3, r4, (t6, a5, s4) => {
      ne(s4, 0, 0, e3, r4);
      const i4 = /* @__PURE__ */ new Date();
      return i4.setHours(0, 0, 0, 0), m2.dateJSAndZoneToArcadeDate(i4, qe(e3));
    });
  }, T3.time = function(e3, f3) {
    return D4(e3, f3, (m6, d3, h5) => {
      switch (ne(h5, 0, 4, e3, f3), h5.length) {
        case 0: {
          const r4 = m2.nowToArcadeDate(qe(e3));
          return new n3(r4.hour, r4.minute, r4.second, r4.millisecond);
        }
        case 1: {
          if (K(h5[0]))
            return h5[0].clone();
          if (Q(h5[0]))
            return new n3(h5[0].hour, h5[0].minute, h5[0].second, h5[0].millisecond);
          if (X(h5[0]))
            return new n3(0, 0, 0, 0);
          if (P(h5[0]))
            return n3.fromString(h5[0]);
          const n6 = pe(h5[0]);
          return false === isNaN(n6) ? n3.fromMilliseconds(n6) : null;
        }
        case 2:
          return P(h5[0]) && P(h5[1]) ? n3.fromString(h5[0], h5[1]) : n3.fromParts(pe(h5[0]), pe(h5[1]), 0, 0);
        case 3:
          return n3.fromParts(pe(h5[0]), pe(h5[1]), pe(h5[2]), 0);
        case 4:
          return n3.fromParts(pe(h5[0]), pe(h5[1]), pe(h5[2]), pe(h5[3]));
      }
      throw new a2(e3, r.InvalidParameter, f3);
    });
  }, T3.dateonly = function(e3, r4) {
    return D4(e3, r4, (t6, i4, m6) => {
      if (ne(m6, 0, 3, e3, r4), 3 === m6.length)
        return n2.fromParts(pe(m6[0]), pe(m6[1]) + 1, pe(m6[2]));
      if (2 === m6.length) {
        const n6 = ce(m6[1]);
        return "" === n6 ? null : "X" === n6 ? n2.fromSeconds(pe(m6[0])) : "x" === n6 ? n2.fromMilliseconds(pe(m6[0])) : n2.fromString(ce(m6[0]), n6);
      }
      if (1 === m6.length) {
        if (P(m6[0])) {
          if ("" === m6[0].replaceAll(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, ""))
            return null;
          if (true === /^[0-9][0-9][0-9][0-9]$/.test(m6[0]))
            return n2.fromString(m6[0] + "-01-01");
        }
        if (X(m6[0]))
          return m6[0].clone();
        if (Q(m6[0]))
          return n2.fromParts(m6[0].year, m6[0].monthJS + 1, m6[0].day);
        const n6 = pe(m6[0]);
        return false === isNaN(n6) ? n2.fromMilliseconds(n6) : P(m6[0]) ? n2.fromString(m6[0]) : null;
      }
      if (0 === m6.length) {
        const r5 = m2.nowToArcadeDate(qe(e3));
        return false === r5.isValid ? null : n2.fromParts(r5.year, r5.monthJS + 1, r5.day);
      }
      return null;
    });
  }, T3.changetimezone = function(a5, s4) {
    return D4(a5, s4, (i4, l4, d3) => {
      if (ne(d3, 2, 2, a5, s4), null === d3[0])
        return null;
      if (X(d3[0]))
        throw new a2(a5, r.CannotChangeTimeZoneDateOnly, s4);
      if (X(d3[0]))
        throw new a2(a5, r.CannotChangeTimeZoneTime, s4);
      const h5 = ge(d3[0], qe(a5));
      if (null === h5)
        throw new a2(a5, r.InvalidParameter, s4);
      const y3 = h(Z2(ce(d3[1]), a5), false);
      if (null === y3)
        return null;
      const N4 = m2.arcadeDateAndZoneToArcadeDate(h5, y3);
      return false === N4.isValid ? null : N4;
    });
  }, T3.timezone = function(e3, r4) {
    return D4(e3, r4, (t6, a5, s4) => {
      if (ne(s4, 1, 2, e3, r4), K(s4[0]))
        return "Unknown";
      if (X(s4[0]))
        return "Unknown";
      const l4 = ge(s4[0], qe(e3));
      if (null === l4)
        return null;
      const f3 = l4.timeZone;
      return "system" === f3 ? m2.systemTimeZoneCanonicalName : "utc" === f3.toLowerCase() ? "UTC" : "unknown" === f3.toLowerCase() ? "Unknown" : f3;
    });
  }, T3.timezoneoffset = function(n6, e3) {
    return D4(n6, e3, (r4, t6, a5) => {
      ne(a5, 1, 1, n6, e3);
      const s4 = ge(a5[0], qe(n6));
      return null === s4 ? null : 60 * s4.timeZoneOffset * 1e3;
    });
  }, T3.now = function(e3, r4) {
    return D4(e3, r4, (t6, a5, s4) => {
      ne(s4, 0, 0, e3, r4);
      const i4 = m2.nowToArcadeDate(qe(e3));
      return false === i4.isValid ? null : i4;
    });
  }, T3.timestamp = function(e3, r4) {
    return D4(e3, r4, (t6, u3, a5) => {
      ne(a5, 0, 0, e3, r4);
      const s4 = m2.nowUTCToArcadeDate();
      return false === s4.isValid ? null : s4;
    });
  }, T3.toutc = function(n6, e3) {
    return D4(n6, e3, (r4, t6, a5) => {
      ne(a5, 1, 1, n6, e3);
      const s4 = ge(a5[0], qe(n6));
      return null === s4 ? null : s4.toUTC();
    });
  }, T3.tolocal = function(n6, e3) {
    return D4(n6, e3, (r4, t6, a5) => {
      ne(a5, 1, 1, n6, e3);
      const s4 = ge(a5[0], qe(n6));
      return null === s4 ? null : s4.toLocal();
    });
  }, T3.day = function(n6, e3) {
    return D4(n6, e3, (r4, t6, a5) => {
      ne(a5, 1, 1, n6, e3);
      const s4 = p7(a5[0], qe(n6));
      return null === s4 ? NaN : s4.day;
    });
  }, T3.month = function(n6, e3) {
    return D4(n6, e3, (r4, t6, a5) => {
      ne(a5, 1, 1, n6, e3);
      const s4 = p7(a5[0], qe(n6));
      return null === s4 ? NaN : s4.monthJS;
    });
  }, T3.year = function(n6, e3) {
    return D4(n6, e3, (r4, t6, a5) => {
      ne(a5, 1, 1, n6, e3);
      const s4 = p7(a5[0], qe(n6));
      return null === s4 ? NaN : s4.year;
    });
  }, T3.hour = function(n6, e3) {
    return D4(n6, e3, (r4, t6, a5) => {
      if (ne(a5, 1, 1, n6, e3), K(a5[0]))
        return a5[0].hour;
      const s4 = ge(a5[0], qe(n6));
      return null === s4 ? NaN : s4.hour;
    });
  }, T3.second = function(n6, e3) {
    return D4(n6, e3, (r4, t6, a5) => {
      if (ne(a5, 1, 1, n6, e3), K(a5[0]))
        return a5[0].second;
      const s4 = ge(a5[0], qe(n6));
      return null === s4 ? NaN : s4.second;
    });
  }, T3.millisecond = function(n6, e3) {
    return D4(n6, e3, (r4, t6, a5) => {
      if (ne(a5, 1, 1, n6, e3), K(a5[0]))
        return a5[0].millisecond;
      const s4 = ge(a5[0], qe(n6));
      return null === s4 ? NaN : s4.millisecond;
    });
  }, T3.minute = function(n6, e3) {
    return D4(n6, e3, (r4, t6, a5) => {
      if (ne(a5, 1, 1, n6, e3), K(a5[0]))
        return a5[0].minute;
      const s4 = ge(a5[0], qe(n6));
      return null === s4 ? NaN : s4.minute;
    });
  }, T3.week = function(n6, e3) {
    return D4(n6, e3, (s4, i4, l4) => {
      ne(l4, 1, 2, n6, e3);
      const c3 = p7(l4[0], qe(n6));
      if (null === c3)
        return NaN;
      const f3 = pe(L(l4[1], 0));
      if (f3 < 0 || f3 > 6)
        throw new a2(n6, r.InvalidParameter, e3);
      const m6 = c3.day, h5 = c3.monthJS, y3 = c3.year, N4 = c3.dayOfWeekJS, w3 = k2(m6, h5, y3) - 1, g2 = Math.floor(w3 / 7);
      return N4 - f3 + (N4 - f3 < 0 ? 7 : 0) < w3 - 7 * g2 ? g2 + 1 : g2;
    });
  }, T3.weekday = function(n6, e3) {
    return D4(n6, e3, (r4, t6, a5) => {
      ne(a5, 1, 1, n6, e3);
      const s4 = p7(a5[0], qe(n6));
      return null === s4 ? NaN : s4.dayOfWeekJS;
    });
  }, T3.isoweekday = function(n6, e3) {
    return D4(n6, e3, (r4, t6, a5) => {
      ne(a5, 1, 1, n6, e3);
      const s4 = p7(a5[0], qe(n6));
      return null === s4 ? NaN : s4.dayOfWeekISO;
    });
  }, T3.isomonth = function(n6, e3) {
    return D4(n6, e3, (r4, t6, a5) => {
      ne(a5, 1, 1, n6, e3);
      const s4 = p7(a5[0], qe(n6));
      return null === s4 ? NaN : s4.monthISO;
    });
  }, T3.isoweek = function(n6, e3) {
    return D4(n6, e3, (r4, t6, a5) => {
      ne(a5, 1, 1, n6, e3);
      const s4 = p7(a5[0], qe(n6));
      return null === s4 ? NaN : s4.weekISO;
    });
  }, T3.isoyear = function(n6, e3) {
    return D4(n6, e3, (r4, t6, a5) => {
      ne(a5, 1, 1, n6, e3);
      const s4 = p7(a5[0], qe(n6));
      return null === s4 ? NaN : s4.yearISO;
    });
  }, T3.date = function(r4, t6) {
    return D4(r4, t6, (l4, d3, y3) => {
      if (ne(y3, 0, 8, r4, t6), 3 === y3.length) {
        if (X(y3[0]) && K(y3[1]) && P(y3[2])) {
          const t7 = h(Z2(ce(y3[2]) ?? "unknown", r4), false);
          return null === t7 ? null : S(m2.fromParts(y3[0].year, y3[0].month, y3[0].day, y3[1].hour, y3[1].minute, y3[1].second, y3[1].millisecond, t7));
        }
        return S(m2.fromParts(pe(y3[0]), pe(y3[1]) + 1, pe(y3[2]), 0, 0, 0, 0, qe(r4)));
      }
      if (4 === y3.length)
        return S(m2.fromParts(pe(y3[0]), pe(y3[1]) + 1, pe(y3[2]), pe(y3[3]), 0, 0, 0, qe(r4)));
      if (5 === y3.length)
        return S(m2.fromParts(pe(y3[0]), pe(y3[1]) + 1, pe(y3[2]), pe(y3[3]), pe(y3[4]), 0, 0, qe(r4)));
      if (6 === y3.length)
        return S(m2.fromParts(pe(y3[0]), pe(y3[1]) + 1, pe(y3[2]), pe(y3[3]), pe(y3[4]), pe(y3[5]), 0, qe(r4)));
      if (7 === y3.length)
        return S(m2.fromParts(pe(y3[0]), pe(y3[1]) + 1, pe(y3[2]), pe(y3[3]), pe(y3[4]), pe(y3[5]), pe(y3[6]), qe(r4)));
      if (8 === y3.length) {
        const t7 = h(Z2(ce(y3[7]) ?? "unknown", r4), false);
        return null === t7 ? null : S(m2.fromParts(pe(y3[0]), pe(y3[1]) + 1, pe(y3[2]), pe(y3[3]), pe(y3[4]), pe(y3[5]), pe(y3[6]), t7));
      }
      if (2 === y3.length) {
        if (X(y3[0]) && P(y3[1])) {
          const t8 = h(Z2(ce(y3[1]) ?? "unknown", r4), false);
          return null === t8 ? null : S(m2.fromParts(y3[0].year, y3[0].month, y3[0].day, 0, 0, 0, 0, t8));
        }
        if (X(y3[0]) && K(y3[1]))
          return S(m2.fromParts(y3[0].year, y3[0].month, y3[0].day, y3[1].hour, y3[1].minute, y3[1].second, y3[1].millisecond, "unknown"));
        let t7, o2 = ce(y3[1]);
        return "" === o2 ? null : (o2 = ue(o2, true), t7 = "X" === o2 ? DateTime.fromSeconds(pe(y3[0])) : "x" === o2 ? DateTime.fromMillis(pe(y3[0])) : DateTime.fromFormat(ce(y3[0]), o2, { locale: c(), numberingSystem: "latn" }), t7.isValid ? m2.dateTimeToArcadeDate(t7) : null);
      }
      if (1 === y3.length) {
        if (X(y3[0]))
          return S(m2.fromParts(y3[0].year, y3[0].month, y3[0].day, 0, 0, 0, 0, "unknown"));
        if (P(y3[0])) {
          if ("" === y3[0].replaceAll(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, ""))
            return null;
          if (true === /^[0-9][0-9][0-9][0-9]$/.test(y3[0]))
            return ge(y3[0] + "-01-01", qe(r4));
        }
        const e3 = pe(y3[0]);
        if (false === isNaN(e3)) {
          const t7 = DateTime.fromMillis(e3);
          return t7.isValid ? m2.dateTimeAndZoneToArcadeDate(t7, qe(r4)) : null;
        }
        return ge(y3[0], qe(r4));
      }
      return 0 === y3.length ? m2.nowToArcadeDate(qe(r4)) : null;
    });
  }, T3.datediff = function(e3, r4) {
    return D4(e3, r4, (t6, a5, s4) => {
      if (ne(s4, 2, 4, e3, r4), K(s4[0]))
        return K(s4[1]) ? s4[0].difference(s4[1], ce(s4[2])) : NaN;
      if (K(s4[1]))
        return NaN;
      if (X(s4[0]))
        return X(s4[1]) ? s4[0].difference(s4[1], ce(s4[2])) : NaN;
      if (X(s4[1]))
        return NaN;
      let l4 = ge(s4[0], qe(e3)), h5 = ge(s4[1], qe(e3));
      if (null === l4 || null === h5)
        return NaN;
      let y3 = L(s4[3], "");
      switch ("" !== y3 && null !== y3 ? (y3 = Z2(ce(y3), e3), l4 = m2.arcadeDateAndZoneToArcadeDate(l4, y3), h5 = m2.arcadeDateAndZoneToArcadeDate(h5, y3)) : l4.timeZone !== h5.timeZone && (l4.isUnknownTimeZone ? l4 = m2.arcadeDateAndZoneToArcadeDate(l4, h5.timeZone) : h5 = (h5.isUnknownTimeZone, m2.arcadeDateAndZoneToArcadeDate(h5, l4.timeZone))), ce(s4[2]).toLowerCase()) {
        case "days":
        case "day":
        case "d":
          return l4.diff(h5, "days");
        case "months":
        case "month":
          return l4.diff(h5, "months");
        case "minutes":
        case "minute":
        case "m":
          return "M" === s4[2] ? l4.diff(h5, "months") : l4.diff(h5, "minutes");
        case "seconds":
        case "second":
        case "s":
          return l4.diff(h5, "seconds");
        case "milliseconds":
        case "millisecond":
        case "ms":
        default:
          return l4.diff(h5);
        case "hours":
        case "hour":
        case "h":
          return l4.diff(h5, "hours");
        case "years":
        case "year":
        case "y":
          return l4.diff(h5, "years");
      }
    });
  }, T3.dateadd = function(n6, e3) {
    return D4(n6, e3, (r4, t6, s4) => {
      ne(s4, 2, 3, n6, e3);
      let l4 = pe(s4[1]);
      if (isNaN(l4) || l4 === 1 / 0 || l4 === -1 / 0)
        return K(s4[0]) || X(s4[0]) ? s4[0].clone() : ge(s4[0], qe(n6));
      let d3 = "milliseconds";
      switch (ce(s4[2]).toLowerCase()) {
        case "days":
        case "day":
        case "d":
          d3 = "days", l4 = X(s4[0]) ? l4 : re(l4);
          break;
        case "months":
        case "month":
          d3 = "months", l4 = X(s4[0]) ? l4 : re(l4);
          break;
        case "minutes":
        case "minute":
        case "m":
          d3 = "M" === s4[2] ? "months" : "minutes";
          break;
        case "seconds":
        case "second":
        case "s":
          d3 = "seconds";
          break;
        case "milliseconds":
        case "millisecond":
        case "ms":
          d3 = "milliseconds";
          break;
        case "hours":
        case "hour":
        case "h":
          d3 = "hours";
          break;
        case "years":
        case "year":
        case "y":
          d3 = "years";
      }
      if (K(s4[0]))
        return s4[0].plus(d3, l4);
      if (X(s4[0]))
        return s4[0].plus(d3, l4);
      const h5 = ge(s4[0], qe(n6));
      return null === h5 ? null : h5.plus({ [d3]: l4 });
    });
  };
}

// node_modules/@arcgis/core/arcade/functions/geometry.js
function A(e3) {
  return e3 && "esri.arcade.Feature" === e3.arcadeDeclaredClass;
}
function W2(a5, W4) {
  a5.ringisclockwise = function(e3, r4) {
    return W4(e3, r4, (a6, c3, f3) => {
      ne(f3, 1, 1, e3, r4);
      let u3 = [];
      if (null === f3[0])
        return false;
      if (q(f3[0]))
        for (const i4 of f3[0]) {
          if (!(i4 instanceof x))
            throw new a2(e3, r.InvalidParameter, r4);
          u3.push(i4.hasZ ? i4.hasM ? [i4.x, i4.y, i4.z, i4.m] : [i4.x, i4.y, i4.z] : [i4.x, i4.y]);
        }
      else if (f3[0] instanceof i)
        u3 = f3[0]._elements;
      else {
        if (!$(f3[0]))
          throw new a2(e3, r.InvalidParameter, r4);
        for (const a7 of f3[0].toArray()) {
          if (!(a7 instanceof x))
            throw new a2(e3, r.InvalidParameter, r4);
          u3.push(a7.hasZ ? a7.hasM ? [a7.x, a7.y, a7.z, a7.m] : [a7.x, a7.y, a7.z] : [a7.x, a7.y]);
        }
      }
      return !(u3.length < 3) && a(u3);
    });
  }, a5.polygon = function(a6, i4) {
    return W4(a6, i4, (s4, l4, u3) => {
      ne(u3, 1, 1, a6, i4);
      let m6 = null;
      if (u3[0] instanceof N2) {
        if (m6 = Ne(D.parseGeometryFromDictionary(u3[0]), a6.spatialReference), m6 instanceof j == false)
          throw new a2(a6, r.InvalidParameter, i4);
      } else
        m6 = u3[0] instanceof j ? p2(u3[0].toJSON()) : Ne(new j(JSON.parse(u3[0])), a6.spatialReference);
      if (null !== m6 && false === m6.spatialReference.equals(a6.spatialReference))
        throw new a2(a6, r.WrongSpatialReference, i4);
      return Se(m6);
    });
  }, a5.polyline = function(a6, i4) {
    return W4(a6, i4, (s4, l4, u3) => {
      ne(u3, 1, 1, a6, i4);
      let m6 = null;
      if (u3[0] instanceof N2) {
        if (m6 = Ne(D.parseGeometryFromDictionary(u3[0]), a6.spatialReference), m6 instanceof m == false)
          throw new a2(a6, r.InvalidParameter, i4);
      } else
        m6 = u3[0] instanceof m ? p2(u3[0].toJSON()) : Ne(new m(JSON.parse(u3[0])), a6.spatialReference);
      if (null !== m6 && false === m6.spatialReference.equals(a6.spatialReference))
        throw new a2(a6, r.WrongSpatialReference, i4);
      return Se(m6);
    });
  }, a5.point = function(a6, i4) {
    return W4(a6, i4, (s4, l4, u3) => {
      ne(u3, 1, 1, a6, i4);
      let m6 = null;
      if (u3[0] instanceof N2) {
        if (m6 = Ne(D.parseGeometryFromDictionary(u3[0]), a6.spatialReference), m6 instanceof x == false)
          throw new a2(a6, r.InvalidParameter, i4);
      } else
        m6 = u3[0] instanceof x ? p2(u3[0].toJSON()) : Ne(new x(JSON.parse(u3[0])), a6.spatialReference);
      if (null !== m6 && false === m6.spatialReference.equals(a6.spatialReference))
        throw new a2(a6, r.WrongSpatialReference, i4);
      return Se(m6);
    });
  }, a5.multipoint = function(a6, i4) {
    return W4(a6, i4, (s4, l4, u3) => {
      ne(u3, 1, 1, a6, i4);
      let m6 = null;
      if (u3[0] instanceof N2) {
        if (m6 = Ne(D.parseGeometryFromDictionary(u3[0]), a6.spatialReference), m6 instanceof u == false)
          throw new a2(a6, r.InvalidParameter, i4);
      } else
        m6 = u3[0] instanceof u ? p2(u3[0].toJSON()) : Ne(new u(JSON.parse(u3[0])), a6.spatialReference);
      if (null !== m6 && false === m6.spatialReference.equals(a6.spatialReference))
        throw new a2(a6, r.WrongSpatialReference, i4);
      return Se(m6);
    });
  }, a5.extent = function(a6, i4) {
    return W4(a6, i4, (s4, l4, m6) => {
      var _a;
      m6 = ke(m6), ne(m6, 1, 1, a6, i4);
      let h5 = null;
      if (m6[0] instanceof N2)
        h5 = Ne(D.parseGeometryFromDictionary(m6[0]), a6.spatialReference);
      else if (m6[0] instanceof x) {
        const e3 = { xmin: m6[0].x, ymin: m6[0].y, xmax: m6[0].x, ymax: m6[0].y, spatialReference: m6[0].spatialReference.toJSON() }, t6 = m6[0];
        t6.hasZ ? (e3.zmin = t6.z, e3.zmax = t6.z) : t6.hasM && (e3.mmin = t6.m, e3.mmax = t6.m), h5 = p2(e3);
      } else
        h5 = m6[0] instanceof j || m6[0] instanceof m || m6[0] instanceof u ? p2((_a = m6[0].extent) == null ? void 0 : _a.toJSON()) : m6[0] instanceof M ? p2(m6[0].toJSON()) : Ne(new M(JSON.parse(m6[0])), a6.spatialReference);
      if (null !== h5 && false === h5.spatialReference.equals(a6.spatialReference))
        throw new a2(a6, r.WrongSpatialReference, i4);
      return Se(h5);
    });
  }, a5.geometry = function(a6, i4) {
    return W4(a6, i4, (s4, l4, u3) => {
      ne(u3, 1, 1, a6, i4);
      let m6 = null;
      if (null === u3[0])
        return null;
      if (m6 = A(u3[0]) ? Ne(u3[0].geometry(), a6.spatialReference) : u3[0] instanceof N2 ? Ne(D.parseGeometryFromDictionary(u3[0]), a6.spatialReference) : Ne(p2(JSON.parse(u3[0])), a6.spatialReference), null !== m6 && false === m6.spatialReference.equals(a6.spatialReference))
        throw new a2(a6, r.WrongSpatialReference, i4);
      return Se(m6);
    });
  }, a5.setgeometry = function(e3, r4) {
    return W4(e3, r4, (a6, i4, s4) => {
      if (ne(s4, 2, 2, e3, r4), !A(s4[0]))
        throw new a2(e3, r.InvalidParameter, r4);
      if (true === s4[0].immutable)
        throw new a2(e3, r.Immutable, r4);
      if (!(s4[1] instanceof p || null === s4[1]))
        throw new a2(e3, r.InvalidParameter, r4);
      return s4[0]._geometry = s4[1], w;
    });
  }, a5.feature = function(a6, i4) {
    return W4(a6, i4, (o2, s4, l4) => {
      if (0 === l4.length)
        throw new a2(a6, r.WrongNumberOfParameters, i4);
      let f3 = null;
      if (1 === l4.length)
        if (P(l4[0]))
          f3 = D.fromJson(JSON.parse(l4[0]), a6.timeZone);
        else if (A(l4[0]))
          f3 = D.createFromArcadeFeature(l4[0]);
        else if (l4[0] instanceof p)
          f3 = D.createFromGraphicLikeObject(l4[0], null, null, a6.timeZone);
        else {
          if (!(l4[0] instanceof N2))
            throw new a2(a6, r.InvalidParameter, i4);
          {
            let t6 = l4[0].hasField("geometry") ? l4[0].field("geometry") : null, n6 = l4[0].hasField("attributes") ? l4[0].field("attributes") : null;
            null !== t6 && t6 instanceof N2 && (t6 = D.parseGeometryFromDictionary(t6)), null !== n6 && (n6 = D.parseAttributesFromDictionary(n6)), f3 = D.createFromGraphicLikeObject(t6, n6, null, a6.timeZone);
          }
        }
      else if (2 === l4.length) {
        let o3 = null, s5 = null;
        if (null !== l4[0])
          if (l4[0] instanceof p)
            o3 = l4[0];
          else {
            if (!(o3 instanceof N2))
              throw new a2(a6, r.InvalidParameter, i4);
            o3 = D.parseGeometryFromDictionary(l4[0]);
          }
        if (null !== l4[1]) {
          if (!(l4[1] instanceof N2))
            throw new a2(a6, r.InvalidParameter, i4);
          s5 = D.parseAttributesFromDictionary(l4[1]);
        }
        f3 = D.createFromGraphicLikeObject(o3, s5, null, a6.timeZone);
      } else {
        let o3 = null;
        const s5 = {};
        if (null !== l4[0])
          if (l4[0] instanceof p)
            o3 = l4[0];
          else {
            if (!(o3 instanceof N2))
              throw new a2(a6, r.InvalidParameter, i4);
            o3 = D.parseGeometryFromDictionary(l4[0]);
          }
        for (let e3 = 1; e3 < l4.length; e3 += 2) {
          const r4 = ce(l4[e3]), o4 = l4[e3 + 1];
          if (!(null == o4 || P(o4) || isNaN(o4) || Q(o4) || z(o4) || K(o4) || X(o4) || G(o4)))
            throw new a2(a6, r.InvalidParameter, i4);
          if (v(o4) || false === J(o4))
            throw new a2(a6, r.InvalidParameter, i4);
          s5[r4] = o4 === w ? null : o4;
        }
        f3 = D.createFromGraphicLikeObject(o3, s5, null, a6.timeZone);
      }
      return f3._geometry = Ne(f3.geometry(), a6.spatialReference), f3.immutable = false, f3;
    });
  }, a5.dictionary = function(r4, a6) {
    return W4(r4, a6, (i4, o2, c3) => {
      if (0 === c3.length || 1 === c3.length && null === c3[0]) {
        const t6 = new N2();
        return t6.immutable = false, t6;
      }
      if (1 === c3.length && P(c3[0]))
        try {
          const t6 = JSON.parse(c3[0]), n6 = N2.convertObjectToArcadeDictionary(t6, qe(r4), false);
          return n6.immutable = false, n6;
        } catch (v3) {
          throw new a2(r4, r.InvalidParameter, a6);
        }
      if (1 === c3.length && c3[0] instanceof p)
        try {
          const t6 = c3[0].toJSON();
          t6.hasZ = true === c3[0].hasZ, t6.hasM = true === c3[0].hasM;
          const n6 = N2.convertObjectToArcadeDictionary(t6, qe(r4), false);
          return n6.immutable = false, n6;
        } catch (v3) {
          throw new a2(r4, r.InvalidParameter, a6);
        }
      if (1 === c3.length && U(c3[0]))
        try {
          const t6 = new N2();
          t6.immutable = false, t6.setField("geometry", c3[0].geometry());
          const n6 = new N2();
          n6.immutable = false, t6.setField("attributes", n6);
          for (const e3 of c3[0].keys())
            n6.setField(e3, c3[0].field(e3));
          return t6;
        } catch (v3) {
          throw new a2(r4, r.InvalidParameter, a6);
        }
      if (1 === c3.length && c3[0] instanceof N2)
        try {
          const t6 = new N2();
          t6.immutable = false;
          for (const e3 of c3[0].keys())
            t6.setField(e3, c3[0].field(e3));
          return t6;
        } catch (v3) {
          throw new a2(r4, r.InvalidParameter, a6);
        }
      if (2 === c3.length && c3[0] instanceof N2 && G(c3[1]))
        try {
          if (!(true === c3[1])) {
            const t6 = new N2();
            t6.immutable = false;
            for (const e3 of c3[0].keys())
              t6.setField(e3, c3[0].field(e3));
            return t6;
          }
          return c3[0].deepClone();
        } catch (v3) {
          throw new a2(r4, r.InvalidParameter, a6);
        }
      if (c3.length % 2 != 0)
        throw new a2(r4, r.WrongNumberOfParameters, a6);
      const f3 = {};
      for (let e3 = 0; e3 < c3.length; e3 += 2) {
        const i5 = ce(c3[e3]), o3 = c3[e3 + 1];
        if (!(null == o3 || P(o3) || isNaN(o3) || Q(o3) || z(o3) || G(o3) || X(o3) || K(o3) || q(o3) || $(o3)))
          throw new a2(r4, r.InvalidParameter, a6);
        if (v(o3))
          throw new a2(r4, r.InvalidParameter, a6);
        f3[i5] = o3 === w ? null : o3;
      }
      const u3 = new N2(f3);
      return u3.immutable = false, u3;
    });
  }, a5.haskey = function(r4, a6) {
    return W4(r4, a6, (i4, s4, l4) => {
      ne(l4, 2, 2, r4, a6);
      const c3 = ce(l4[1]);
      if (A(l4[0]))
        return l4[0].hasField(c3);
      if (l4[0] instanceof N2)
        return l4[0].hasField(c3);
      if (l4[0] instanceof p) {
        const e3 = L2(l4[0], c3, null, null, 2);
        return !e3 || "notfound" !== e3.keystate;
      }
      throw new a2(r4, r.InvalidParameter, a6);
    });
  }, a5.hasvalue = function(t6, n6) {
    return W4(t6, n6, (r4, a6, i4) => {
      if (ne(i4, 2, 2, t6, n6), null === i4[0] || null === i4[1])
        return false;
      const s4 = ce(i4[1]);
      if (U(i4[0]))
        return !!i4[0].hasField(s4) && null !== i4[0].field(s4);
      if (i4[0] instanceof N2)
        return !!i4[0].hasField(s4) && null !== i4[0].field(s4);
      if (i4[0] instanceof p) {
        return null !== L2(i4[0], s4, null, null, 0);
      }
      return false;
    });
  }, a5.indexof = function(e3, r4) {
    return W4(e3, r4, (a6, i4, c3) => {
      ne(c3, 2, 2, e3, r4);
      const f3 = c3[1];
      if (q(c3[0])) {
        for (let e4 = 0; e4 < c3[0].length; e4++)
          if (fe(f3, c3[0][e4]))
            return e4;
        return -1;
      }
      if ($(c3[0])) {
        const e4 = c3[0].length();
        for (let t6 = 0; t6 < e4; t6++)
          if (fe(f3, c3[0].get(t6)))
            return t6;
        return -1;
      }
      throw new a2(e3, r.InvalidParameter, r4);
    });
  }, a5.angle = function(e3, r4) {
    return W4(e3, r4, (a6, i4, s4) => {
      if (s4 = ke(s4), ne(s4, 2, 3, e3, r4), !(s4[0] instanceof x))
        throw new a2(e3, r.InvalidParameter, r4);
      if (!(s4[1] instanceof x))
        throw new a2(e3, r.InvalidParameter, r4);
      if (s4.length > 2 && !(s4[2] instanceof x))
        throw new a2(e3, r.InvalidParameter, r4);
      return 2 === s4.length ? M2(s4[0], s4[1]) : P2(s4[0], s4[1], s4[2]);
    });
  }, a5.bearing = function(e3, r4) {
    return W4(e3, r4, (a6, i4, s4) => {
      if (s4 = ke(s4), ne(s4, 2, 3, e3, r4), !(s4[0] instanceof x))
        throw new a2(e3, r.InvalidParameter, r4);
      if (!(s4[1] instanceof x))
        throw new a2(e3, r.InvalidParameter, r4);
      if (s4.length > 2 && !(s4[2] instanceof x))
        throw new a2(e3, r.InvalidParameter, r4);
      return 2 === s4.length ? z2(s4[0], s4[1]) : Z(s4[0], s4[1], s4[2]);
    });
  }, a5.isselfintersecting = function(e3, t6) {
    return W4(e3, t6, (n6, r4, a6) => {
      a6 = ke(a6), ne(a6, 1, 1, e3, t6);
      let i4 = a6[0];
      if (i4 instanceof j)
        return i4.isSelfIntersecting;
      if (i4 instanceof m)
        return i4 = i4.paths, I2(i4);
      if (i4 instanceof u) {
        const e4 = i4.points;
        for (let t7 = 0; t7 < e4.length; t7++)
          for (let n7 = 0; n7 < e4.length; n7++)
            if (n7 !== t7) {
              let r5 = true;
              for (let a7 = 0; a7 < e4[t7].length; a7++)
                if (e4[t7][a7] !== e4[n7][a7]) {
                  r5 = false;
                  break;
                }
              if (true === r5)
                return true;
            }
      }
      return !(!q(i4) && !$(i4)) && (i4 = Me(i4, e3.spatialReference), null !== i4 && (i4 = i4.paths), I2(i4));
    });
  };
}
var q2 = 0;
function L2(r4, o2, s4, l4, c3 = 1) {
  let f3;
  switch (o2 = o2.toLowerCase()) {
    case "hasz": {
      const e3 = r4.hasZ;
      return void 0 !== e3 && e3;
    }
    case "hasm": {
      const e3 = r4.hasM;
      return void 0 !== e3 && e3;
    }
    case "spatialreference": {
      let t6 = r4.spatialReference._arcadeCacheId;
      if (void 0 === t6) {
        let e3 = true;
        Object.freeze && Object.isFrozen(r4.spatialReference) && (e3 = false), e3 && (q2++, r4.spatialReference._arcadeCacheId = q2, t6 = q2);
      }
      const n6 = new N2({ wkt: r4.spatialReference.wkt, wkid: r4.spatialReference.wkid });
      return void 0 !== t6 && (n6._arcadeCacheId = "SPREF" + t6.toString()), n6;
    }
  }
  switch (r4.type) {
    case "extent":
      switch (o2) {
        case "xmin":
        case "xmax":
        case "ymin":
        case "ymax":
        case "zmin":
        case "zmax":
        case "mmin":
        case "mmax": {
          const e3 = r4[o2];
          return void 0 !== e3 ? e3 : null;
        }
        case "type":
          return "Extent";
      }
      break;
    case "polygon":
      switch (o2) {
        case "rings":
          f3 = r4.cache._arcadeCacheId, void 0 === f3 && (q2++, f3 = q2, r4.cache._arcadeCacheId = f3);
          return new h2(r4.rings, r4.spatialReference, true === r4.hasZ, true === r4.hasM, f3);
        case "type":
          return "Polygon";
      }
      break;
    case "point":
      switch (o2) {
        case "x":
        case "y":
        case "z":
        case "m":
          return void 0 !== r4[o2] ? r4[o2] : null;
        case "type":
          return "Point";
      }
      break;
    case "polyline":
      switch (o2) {
        case "paths":
          f3 = r4.cache._arcadeCacheId, void 0 === f3 && (q2++, f3 = q2, r4.cache._arcadeCacheId = f3);
          return new h2(r4.paths, r4.spatialReference, true === r4.hasZ, true === r4.hasM, f3);
        case "type":
          return "Polyline";
      }
      break;
    case "multipoint":
      switch (o2) {
        case "points":
          f3 = r4.cache._arcadeCacheId, void 0 === f3 && (q2++, f3 = q2, r4.cache._arcadeCacheId = f3);
          return new i(r4.points, r4.spatialReference, true === r4.hasZ, true === r4.hasM, f3, 1);
        case "type":
          return "Multipoint";
      }
  }
  if (1 === c3)
    throw new a2(s4, r.InvalidIdentifier, l4);
  return 2 === c3 ? { keystate: "notfound" } : null;
}

// node_modules/@arcgis/core/arcade/functions/maths.js
function h3(n6, t6, r4) {
  return void 0 === r4 || 0 == +r4 ? Math[n6](t6) : (t6 = +t6, r4 = +r4, isNaN(t6) || "number" != typeof r4 || r4 % 1 != 0 ? NaN : (t6 = t6.toString().split("e"), +((t6 = (t6 = Math[n6](+(t6[0] + "e" + (t6[1] ? +t6[1] - r4 : -r4)))).toString().split("e"))[0] + "e" + (t6[1] ? +t6[1] + r4 : r4))));
}
function m4(m6, M4) {
  function b2(n6, t6, r4) {
    const u3 = pe(n6);
    return isNaN(u3) ? u3 : isNaN(t6) || isNaN(r4) || t6 > r4 ? NaN : u3 < t6 ? t6 : u3 > r4 ? r4 : u3;
  }
  m6.number = function(s4, c3) {
    return M4(s4, c3, (l4, h5, m7) => {
      ne(m7, 1, 2, s4, c3);
      const M5 = m7[0];
      if (z(M5))
        return M5;
      if (null === M5)
        return 0;
      if (Q(M5) || K(M5) || X(M5))
        return M5.toNumber();
      if (G(M5))
        return Number(M5);
      if (q(M5))
        return NaN;
      if ("" === M5)
        return Number(M5);
      if (void 0 === M5)
        return Number(M5);
      if (P(M5)) {
        if (void 0 !== m7[1]) {
          let n6 = I(m7[1], "‰", "");
          return n6 = I(n6, "¤", ""), p3(M5, { pattern: n6 });
        }
        return Number(M5.trim());
      }
      return Number(M5);
    });
  }, m6.abs = function(t6, r4) {
    return M4(t6, r4, (u3, e3, o2) => (ne(o2, 1, 1, t6, r4), Math.abs(pe(o2[0]))));
  }, m6.acos = function(t6, r4) {
    return M4(t6, r4, (u3, e3, o2) => (ne(o2, 1, 1, t6, r4), Math.acos(pe(o2[0]))));
  }, m6.asin = function(t6, r4) {
    return M4(t6, r4, (u3, e3, o2) => (ne(o2, 1, 1, t6, r4), Math.asin(pe(o2[0]))));
  }, m6.atan = function(t6, r4) {
    return M4(t6, r4, (u3, e3, o2) => (ne(o2, 1, 1, t6, r4), Math.atan(pe(o2[0]))));
  }, m6.atan2 = function(t6, r4) {
    return M4(t6, r4, (u3, e3, o2) => (ne(o2, 2, 2, t6, r4), Math.atan2(pe(o2[0]), pe(o2[1]))));
  }, m6.ceil = function(t6, r4) {
    return M4(t6, r4, (u3, e3, o2) => {
      if (ne(o2, 1, 2, t6, r4), 2 === o2.length) {
        let n6 = pe(o2[1]);
        return isNaN(n6) && (n6 = 0), h3("ceil", pe(o2[0]), -1 * n6);
      }
      return Math.ceil(pe(o2[0]));
    });
  }, m6.round = function(t6, r4) {
    return M4(t6, r4, (u3, e3, o2) => {
      if (ne(o2, 1, 2, t6, r4), 2 === o2.length) {
        let n6 = pe(o2[1]);
        return isNaN(n6) && (n6 = 0), h3("round", pe(o2[0]), -1 * n6);
      }
      return Math.round(pe(o2[0]));
    });
  }, m6.floor = function(t6, r4) {
    return M4(t6, r4, (u3, e3, o2) => {
      if (ne(o2, 1, 2, t6, r4), 2 === o2.length) {
        let n6 = pe(o2[1]);
        return isNaN(n6) && (n6 = 0), h3("floor", pe(o2[0]), -1 * n6);
      }
      return Math.floor(pe(o2[0]));
    });
  }, m6.cos = function(t6, r4) {
    return M4(t6, r4, (u3, e3, o2) => (ne(o2, 1, 1, t6, r4), Math.cos(pe(o2[0]))));
  }, m6.isnan = function(t6, r4) {
    return M4(t6, r4, (u3, e3, o2) => (ne(o2, 1, 1, t6, r4), "number" == typeof o2[0] && isNaN(o2[0])));
  }, m6.exp = function(t6, r4) {
    return M4(t6, r4, (u3, e3, o2) => (ne(o2, 1, 1, t6, r4), Math.exp(pe(o2[0]))));
  }, m6.log = function(t6, r4) {
    return M4(t6, r4, (u3, e3, o2) => (ne(o2, 1, 1, t6, r4), Math.log(pe(o2[0]))));
  }, m6.pow = function(t6, r4) {
    return M4(t6, r4, (u3, e3, o2) => (ne(o2, 2, 2, t6, r4), pe(o2[0]) ** pe(o2[1])));
  }, m6.random = function(t6, r4) {
    return M4(t6, r4, (u3, e3, o2) => (ne(o2, 0, 0, t6, r4), Math.random()));
  }, m6.sin = function(t6, r4) {
    return M4(t6, r4, (u3, e3, o2) => (ne(o2, 1, 1, t6, r4), Math.sin(pe(o2[0]))));
  }, m6.sqrt = function(t6, r4) {
    return M4(t6, r4, (u3, e3, o2) => (ne(o2, 1, 1, t6, r4), Math.sqrt(pe(o2[0]))));
  }, m6.tan = function(t6, r4) {
    return M4(t6, r4, (u3, e3, o2) => (ne(o2, 1, 1, t6, r4), Math.tan(pe(o2[0]))));
  }, m6.defaultvalue = function(t6, r4) {
    return M4(t6, r4, (u3, e3, o2) => (ne(o2, 2, 2, t6, r4), null === o2[0] || "" === o2[0] || void 0 === o2[0] ? o2[1] : o2[0]));
  }, m6.isempty = function(t6, r4) {
    return M4(t6, r4, (u3, e3, o2) => (ne(o2, 1, 1, t6, r4), null === o2[0] || ("" === o2[0] || void 0 === o2[0])));
  }, m6.boolean = function(t6, r4) {
    return M4(t6, r4, (u3, e3, o2) => {
      ne(o2, 1, 1, t6, r4);
      const i4 = o2[0];
      return be(i4);
    });
  }, m6.constrain = function(t6, r4) {
    return M4(t6, r4, (u3, e3, o2) => {
      ne(o2, 3, 3, t6, r4);
      const a5 = pe(o2[1]), f3 = pe(o2[2]);
      if (q(o2[0])) {
        const n6 = [];
        for (const t7 of o2[0])
          n6.push(b2(t7, a5, f3));
        return n6;
      }
      if ($(o2[0])) {
        const n6 = [];
        for (let t7 = 0; t7 < o2[0].length(); t7++)
          n6.push(b2(o2[0].get(t7), a5, f3));
        return n6;
      }
      return b2(o2[0], a5, f3);
    });
  };
}

// node_modules/@arcgis/core/arcade/functions/stats.js
function a4(n6, r4, t6, i4) {
  if (1 === i4.length) {
    if (q(i4[0]))
      return l(n6, i4[0], -1);
    if ($(i4[0]))
      return l(n6, i4[0].toArray(), -1);
  }
  return l(n6, i4, -1);
}
function f2(o2, f3) {
  o2.stdev = function(n6, r4) {
    return f3(n6, r4, (n7, r5, t6) => a4("stdev", n7, r5, t6));
  }, o2.variance = function(n6, r4) {
    return f3(n6, r4, (n7, r5, t6) => a4("variance", n7, r5, t6));
  }, o2.average = function(n6, r4) {
    return f3(n6, r4, (n7, r5, t6) => a4("mean", n7, r5, t6));
  }, o2.mean = function(n6, r4) {
    return f3(n6, r4, (n7, r5, t6) => a4("mean", n7, r5, t6));
  }, o2.sum = function(n6, r4) {
    return f3(n6, r4, (n7, r5, t6) => a4("sum", n7, r5, t6));
  }, o2.min = function(n6, r4) {
    return f3(n6, r4, (n7, r5, t6) => a4("min", n7, r5, t6));
  }, o2.max = function(n6, r4) {
    return f3(n6, r4, (n7, r5, t6) => a4("max", n7, r5, t6));
  }, o2.distinct = function(n6, r4) {
    return f3(n6, r4, (n7, r5, t6) => a4("distinct", n7, r5, t6));
  }, o2.count = function(o3, a5) {
    return f3(o3, a5, (f4, c3, m6) => {
      if (ne(m6, 1, 1, o3, a5), q(m6[0]) || P(m6[0]))
        return m6[0].length;
      if ($(m6[0]))
        return m6[0].length();
      throw new a2(o3, r.InvalidParameter, a5);
    });
  };
}

// node_modules/@arcgis/core/arcade/functions/convertdirection.js
var l3 = (e3) => (n6, t6, r4) => (r4 = r4 || 14, +e3(n6, t6).toFixed(r4));
var d2 = (e3, n6) => e3 + n6;
var m5 = (e3, n6) => e3 * n6;
var g = (e3, n6) => e3 / n6;
var _ = (e3, n6, t6) => l3(d2)(e3, n6, t6);
var w2 = (e3, n6, t6) => l3(m5)(e3, n6, t6);
var A2 = (e3, n6, t6) => l3(g)(e3, n6, t6);
var D3 = 360;
var p8 = 400;
var E3 = 2 * Math.PI;
var T2 = 3600;
var S2 = 3240;
var R = 60;
var M3 = 60;
var F2 = 180 * T2 / Math.PI;
var v2 = D3 * R * M3;
var L3 = 90 * T2;
var U2 = 180 * T2;
var N3 = 270 * T2;
var x3 = String.fromCharCode(7501);
var z3 = "°";
function O(e3) {
  if (false === P(e3))
    throw new a2(null, r.InvalidParameter, null);
  return e3;
}
function G2(e3, n6) {
  const t6 = 10 ** n6;
  return Math.round(e3 * t6) / t6;
}
function I3(e3, n6) {
  return e3 % n6;
}
function b(e3) {
  const n6 = parseFloat(e3.toString().replace(Math.trunc(e3).toString(), "0")) * Math.sign(e3);
  if (e3 < 0) {
    return { fraction: n6, integer: Math.ceil(e3) };
  }
  return { fraction: n6, integer: Math.floor(e3) };
}
var H2;
var y2;
var q3;
var k3;
function C2(e3, n6) {
  switch (e3) {
    case H2.north:
      return "SHORT" === n6 ? "N" : "North";
    case H2.east:
      return "SHORT" === n6 ? "E" : "East";
    case H2.south:
      return "SHORT" === n6 ? "S" : "South";
    case H2.west:
      return "SHORT" === n6 ? "W" : "West";
  }
}
function P4(e3, n6) {
  return e3 - Math.floor(e3 / n6) * n6;
}
function Q2(e3) {
  switch (e3) {
    case y2.truncated_degrees:
    case y2.decimal_degrees:
      return D3;
    case y2.radians:
      return E3;
    case y2.gradians:
      return p8;
    case y2.seconds:
      return v2;
    case y2.fractional_degree_minutes:
      return R;
    case y2.fractional_minute_seconds:
      return M3;
    default:
      throw new a2(null, r.LogicError, null, { reason: "unsupported evaluations" });
  }
}
function j3(e3) {
  switch (e3.toUpperCase().trim()) {
    case "NORTH":
    case "NORTHAZIMUTH":
    case "NORTH AZIMUTH":
      return q3.north_azimuth;
    case "POLAR":
      return q3.polar;
    case "QUADRANT":
      return q3.quadrant;
    case "SOUTH":
    case "SOUTHAZIMUTH":
    case "SOUTH AZIMUTH":
      return q3.south_azimuth;
  }
  throw new a2(null, r.LogicError, null, { reason: "unsupported directionType" });
}
function W3(e3) {
  switch (e3.toUpperCase().trim()) {
    case "D":
    case "DD":
    case "DECIMALDEGREE":
    case "DECIMAL DEGREE":
    case "DEGREE":
    case "DECIMALDEGREES":
    case "DECIMAL DEGREES":
    case "DEGREES":
      return y2.decimal_degrees;
    case "DMS":
    case "DEGREESMINUTESSECONDS":
    case "DEGREES MINUTES SECONDS":
      return y2.degrees_minutes_seconds;
    case "R":
    case "RAD":
    case "RADS":
    case "RADIAN":
    case "RADIANS":
      return y2.radians;
    case "G":
    case "GON":
    case "GONS":
    case "GRAD":
    case "GRADS":
    case "GRADIAN":
    case "GRADIANS":
      return y2.gradians;
  }
  throw new a2(null, r.LogicError, null, { reason: "unsupported units" });
}
!function(e3) {
  e3[e3.north = 0] = "north", e3[e3.east = 1] = "east", e3[e3.south = 2] = "south", e3[e3.west = 3] = "west";
}(H2 || (H2 = {})), function(e3) {
  e3[e3.decimal_degrees = 1] = "decimal_degrees", e3[e3.seconds = 2] = "seconds", e3[e3.degrees_minutes_seconds = 3] = "degrees_minutes_seconds", e3[e3.radians = 4] = "radians", e3[e3.gradians = 5] = "gradians", e3[e3.truncated_degrees = 6] = "truncated_degrees", e3[e3.fractional_degree_minutes = 7] = "fractional_degree_minutes", e3[e3.fractional_minute_seconds = 8] = "fractional_minute_seconds";
}(y2 || (y2 = {})), function(e3) {
  e3[e3.north_azimuth = 1] = "north_azimuth", e3[e3.polar = 2] = "polar", e3[e3.quadrant = 3] = "quadrant", e3[e3.south_azimuth = 4] = "south_azimuth";
}(q3 || (q3 = {})), function(e3) {
  e3[e3.meridian = 0] = "meridian", e3[e3.direction = 1] = "direction";
}(k3 || (k3 = {}));
var Z3 = class _Z {
  constructor(e3, n6, t6) {
    this.m_degrees = e3, this.m_minutes = n6, this.m_seconds = t6;
  }
  getField(e3) {
    switch (e3) {
      case y2.decimal_degrees:
      case y2.truncated_degrees:
        return this.m_degrees;
      case y2.fractional_degree_minutes:
        return this.m_minutes;
      case y2.seconds:
      case y2.fractional_minute_seconds:
        return this.m_seconds;
      default:
        throw new a2(null, r.LogicError, null, { reason: "unexpected evaluation" });
    }
  }
  static secondsToDMS(e3) {
    const n6 = b(e3).fraction;
    let t6 = b(e3).integer;
    const r4 = Math.floor(t6 / T2);
    t6 -= r4 * T2;
    const s4 = Math.floor(t6 / M3);
    return t6 -= s4 * M3, new _Z(r4, s4, t6 + n6);
  }
  static numberToDms(e3) {
    const n6 = b(e3).fraction, t6 = b(e3).integer, r4 = w2(b(100 * n6).fraction, 100), s4 = b(100 * n6).integer;
    return new _Z(t6, s4, r4);
  }
  format(e3, n6) {
    let t6 = G2(this.m_seconds, n6), r4 = this.m_minutes, s4 = this.m_degrees;
    if (e3 === y2.seconds || e3 === y2.fractional_minute_seconds)
      M3 <= t6 && (t6 -= M3, ++r4), R <= r4 && (r4 = 0, ++s4), D3 <= s4 && (s4 = 0);
    else if (e3 === y2.fractional_degree_minutes)
      t6 = 0, r4 = 30 <= this.m_seconds ? this.m_minutes + 1 : this.m_minutes, s4 = this.m_degrees, R <= r4 && (r4 = 0, ++s4), D3 <= s4 && (s4 = 0);
    else if (e3 === y2.decimal_degrees || e3 === y2.truncated_degrees) {
      const e4 = A2(this.m_seconds, T2), n7 = A2(this.m_minutes, R);
      s4 = Math.round(this.m_degrees + n7 + e4), r4 = 0, t6 = 0;
    }
    return new _Z(s4, r4, t6);
  }
  static dmsToSeconds(e3, n6, t6) {
    return e3 * T2 + n6 * M3 + t6;
  }
};
var B = class {
  constructor(e3, n6, t6) {
    this.meridian = e3, this.angle = n6, this.direction = t6;
  }
  fetchAzimuth(e3) {
    return e3 === k3.meridian ? this.meridian : this.direction;
  }
};
var V = class _V {
  constructor(e3) {
    this._angle = e3;
  }
  static createFromAngleAndDirection(e3, n6) {
    return new _V(new J2(_V._convertDirectionFormat(e3.extractAngularUnits(y2.seconds), n6, q3.north_azimuth)));
  }
  getAngle(e3) {
    const n6 = this._angle.extractAngularUnits(y2.seconds);
    switch (e3) {
      case q3.north_azimuth:
      case q3.south_azimuth:
      case q3.polar:
        return new J2(_V._convertDirectionFormat(n6, q3.north_azimuth, e3));
      case q3.quadrant: {
        const e4 = _V.secondsNorthAzimuthToQuadrant(n6);
        return new J2(e4.angle);
      }
    }
  }
  getMeridian(e3) {
    const n6 = this._angle.extractAngularUnits(y2.seconds);
    switch (e3) {
      case q3.north_azimuth:
        return H2.north;
      case q3.south_azimuth:
        return H2.south;
      case q3.polar:
        return H2.east;
      case q3.quadrant:
        return _V.secondsNorthAzimuthToQuadrant(n6).meridian;
    }
  }
  getDirection(e3) {
    const n6 = this._angle.extractAngularUnits(y2.seconds);
    switch (e3) {
      case q3.north_azimuth:
        return H2.east;
      case q3.south_azimuth:
        return H2.west;
      case q3.polar:
        return H2.north;
      case q3.quadrant:
        return _V.secondsNorthAzimuthToQuadrant(n6).direction;
    }
  }
  static secondsNorthAzimuthToQuadrant(e3) {
    const n6 = e3 <= L3 || e3 >= N3 ? H2.north : H2.south, t6 = n6 === H2.north ? Math.min(v2 - e3, e3) : Math.abs(e3 - U2), r4 = e3 > U2 ? H2.west : H2.east;
    return new B(n6, t6, r4);
  }
  static createFromAngleMeridianAndDirection(e3, n6, t6) {
    return new _V(new J2(_V.secondsQuadrantToNorthAzimuth(e3.extractAngularUnits(y2.seconds), n6, t6)));
  }
  static secondsQuadrantToNorthAzimuth(e3, n6, t6) {
    return n6 === H2.north ? t6 === H2.east ? e3 : v2 - e3 : t6 === H2.east ? U2 - e3 : U2 + e3;
  }
  static _convertDirectionFormat(e3, r4, s4) {
    let a5 = 0;
    switch (r4) {
      case q3.north_azimuth:
        a5 = e3;
        break;
      case q3.polar:
        a5 = L3 - e3;
        break;
      case q3.quadrant:
        throw new a2(null, r.LogicError, null, { reason: "unexpected evaluation" });
      case q3.south_azimuth:
        a5 = e3 + U2;
    }
    let i4 = 0;
    switch (s4) {
      case q3.north_azimuth:
        i4 = a5;
        break;
      case q3.polar:
        i4 = L3 - a5;
        break;
      case q3.quadrant:
        throw new a2(null, r.LogicError, null, { reason: "unexpected evaluation" });
      case q3.south_azimuth:
        i4 = a5 - U2;
    }
    return i4 = I3(i4, v2), i4 < 0 ? v2 + i4 : i4;
  }
};
function X2(e3, r4, s4) {
  let a5 = null;
  switch (r4) {
    case y2.decimal_degrees:
      a5 = w2(e3, T2);
      break;
    case y2.seconds:
      a5 = e3;
      break;
    case y2.gradians:
      a5 = w2(e3, S2);
      break;
    case y2.radians:
      a5 = w2(e3, F2);
      break;
    default:
      throw new a2(null, r.LogicError, null, { reason: "unexpected evaluation" });
  }
  switch (s4) {
    case y2.decimal_degrees:
      return A2(a5, T2);
    case y2.seconds:
      return a5;
    case y2.gradians:
      return A2(a5, S2);
    case y2.radians:
      return a5 / F2;
    default:
      throw new a2(null, r.LogicError, null, { reason: "unexpected evaluation" });
  }
}
var J2 = class _J {
  constructor(e3) {
    this._seconds = e3;
  }
  static createFromAngleAndUnits(e3, n6) {
    return new _J(X2(e3, n6, y2.seconds));
  }
  extractAngularUnits(e3) {
    return X2(this._seconds, y2.seconds, K2(e3));
  }
  static createFromDegreesMinutesSeconds(e3, n6, t6) {
    return new _J(_(_(w2(e3, T2), w2(n6, M3)), t6));
  }
};
function K2(e3) {
  switch (n(e3), e3) {
    case y2.decimal_degrees:
    case y2.truncated_degrees:
    case y2.degrees_minutes_seconds:
      return y2.decimal_degrees;
    case y2.gradians:
      return y2.gradians;
    case y2.fractional_degree_minutes:
      return y2.fractional_degree_minutes;
    case y2.radians:
      return y2.radians;
    case y2.seconds:
    case y2.fractional_minute_seconds:
      return y2.seconds;
  }
}
var Y2 = class _Y {
  constructor(e3, n6, t6, r4) {
    this.view = e3, this.angle = n6, this.merdian = t6, this.direction = r4, this._dms = null, this._formattedDms = null;
  }
  static createFromStringAndBearing(e3, n6, t6) {
    return new _Y(e3, n6.getAngle(t6), n6.getMeridian(t6), n6.getDirection(t6));
  }
  fetchAngle() {
    return this.angle;
  }
  fetchMeridian() {
    return this.merdian;
  }
  fetchDirection() {
    return this.direction;
  }
  fetchView() {
    return this.view;
  }
  fetchDms() {
    return null === this._dms && this._calculateDms(), this._dms;
  }
  fetchFormattedDms() {
    return null === this._formattedDms && this._calculateDms(), this._formattedDms;
  }
  _calculateDms() {
    let e3 = null, n6 = y2.truncated_degrees, t6 = 0;
    for (let r4 = 0; r4 < this.view.length; r4++) {
      const s4 = this.view[r4];
      switch (s4) {
        case "m":
          e3 = le(this.view, r4, s4), n6 = n6 === y2.truncated_degrees ? y2.fractional_degree_minutes : n6, r4 = e3.newpos;
          continue;
        case "s":
          e3 = le(this.view, r4, s4), n6 = y2.fractional_minute_seconds, t6 = t6 < e3.rounding ? e3.rounding : t6, r4 = e3.newpos;
          continue;
        default:
          continue;
      }
    }
    this._dms = Z3.secondsToDMS(this.angle.extractAngularUnits(y2.seconds)), this._formattedDms = Z3.secondsToDMS(this.angle.extractAngularUnits(y2.seconds)).format(n6, t6);
  }
};
function $2(e3, r4, s4, a5, i4) {
  let o2 = null;
  switch (r4) {
    case y2.decimal_degrees:
    case y2.radians:
    case y2.gradians:
      return o2 = P4(G2(e3.extractAngularUnits(r4), a5), Q2(r4)), o2.toFixed(a5).padStart(s4 + a5 + (a5 > 0 ? 1 : 0), "0");
    case y2.truncated_degrees:
    case y2.fractional_degree_minutes:
      return o2 = P4(i4.fetchFormattedDms().getField(r4), Q2(r4)), o2.toFixed(a5).padStart(s4 + a5 + (a5 > 0 ? 1 : 0), "0");
    case y2.fractional_minute_seconds:
      return o2 = P4(G2(i4.fetchDms().getField(r4), a5), Q2(r4)), o2.toFixed(a5).padStart(s4 + a5 + (a5 > 0 ? 1 : 0), "0");
    default:
      throw new a2(null, r.LogicError, null, { reason: "unexpected evaluation" });
  }
}
function ee(e3, r4, s4) {
  if (s4 === q3.quadrant)
    throw new a2(null, r.LogicError, null, { reason: "conversion error" });
  if (r4 === y2.degrees_minutes_seconds) {
    const n6 = Z3.numberToDms(e3);
    return V.createFromAngleAndDirection(J2.createFromDegreesMinutesSeconds(n6.m_degrees, n6.m_minutes, n6.m_seconds), s4);
  }
  return V.createFromAngleAndDirection(J2.createFromAngleAndUnits(e3, K2(r4)), s4);
}
function ne2(e3) {
  switch (pe(e3)) {
    case 1:
      return { first: H2.north, second: H2.east };
    case 2:
      return { first: H2.south, second: H2.east };
    case 3:
      return { first: H2.south, second: H2.west };
    case 4:
      return { first: H2.north, second: H2.west };
  }
  return null;
}
function te(e3) {
  switch (e3.toUpperCase().trim()) {
    case "N":
    case "NORTH":
      return H2.north;
    case "E":
    case "EAST":
      return H2.east;
    case "S":
    case "SOUTH":
      return H2.south;
    case "W":
    case "WEST":
      return H2.west;
  }
  return null;
}
function re2(e3) {
  const r4 = parseFloat(e3);
  if (z(r4)) {
    if (isNaN(r4))
      throw new a2(null, r.LogicError, null, { reason: "invalid conversion" });
    return r4;
  }
  throw new a2(null, r.LogicError, null, { reason: "invalid conversion" });
}
function se(e3, s4, a5) {
  const i4 = a5 === q3.quadrant;
  let o2 = null, c3 = null, u3 = 0, l4 = 0, d3 = 0;
  if (i4) {
    if (e3.length < 2)
      throw new a2(null, r.LogicError, null, { reason: "conversion error" });
    d3 = 1;
    const s5 = ne2(ce(e3[e3.length - 1]));
    if (s5 ? (o2 = s5.first, c3 = s5.second) : (u3 = 1, o2 = te(ce(e3[0])), c3 = te(ce(e3[e3.length - 1]))), null === o2 || null === c3)
      throw new a2(null, r.LogicError, null, { reason: "invalid conversion" });
  }
  switch (s4) {
    case y2.decimal_degrees:
    case y2.radians:
    case y2.gradians:
      if (0 === e3.length)
        throw new a2(null, r.LogicError, null, { reason: "invalid conversion" });
      return i4 ? V.createFromAngleMeridianAndDirection(J2.createFromAngleAndUnits(re2(e3[u3]), K2(s4)), o2, c3) : V.createFromAngleAndDirection(J2.createFromAngleAndUnits(re2(e3[u3]), K2(s4)), a5);
    case y2.degrees_minutes_seconds:
      if (l4 = e3.length - d3 - u3, 3 === l4) {
        const n6 = J2.createFromDegreesMinutesSeconds(re2(e3[u3]), re2(e3[u3 + 1]), re2(e3[u3 + 2]));
        return i4 ? V.createFromAngleMeridianAndDirection(n6, o2, c3) : V.createFromAngleAndDirection(n6, a5);
      }
      if (1 === l4) {
        const n6 = re2(e3[u3]), t6 = Z3.numberToDms(n6), r4 = J2.createFromDegreesMinutesSeconds(t6.m_degrees, t6.m_minutes, t6.m_seconds);
        return i4 ? V.createFromAngleMeridianAndDirection(r4, o2, c3) : V.createFromAngleAndDirection(r4, a5);
      }
  }
  throw new a2(null, r.LogicError, null, { reason: "invalid conversion" });
}
function ae2(e3) {
  const n6 = /* @__PURE__ */ new Set([" ", "-", "/", "'", '"', "\\", "^", z3, x3, "	", "\r", "\n", "*"]);
  let t6 = "";
  for (let r4 = 0; r4 < e3.length; r4++) {
    const s4 = e3.charAt(r4);
    n6.has(s4) ? t6 += "RRSPLITRRSPLITRR" : t6 += s4;
  }
  return t6.split("RRSPLITRRSPLITRR").filter((e4) => "" !== e4);
}
function ie(e3, r4, u3) {
  if (z(e3))
    return ee(pe(e3), r4, u3);
  if (P(e3))
    return se(ae2(e3), r4, u3);
  if (q(e3))
    return se(e3, r4, u3);
  if ($(e3))
    return se(e3.toArray(), r4, u3);
  throw new a2(null, r.LogicError, null, { reason: "conversion error" });
}
function oe(e3, r4, s4) {
  const a5 = K2(s4);
  if (a5 && s4 !== y2.degrees_minutes_seconds) {
    return e3.getAngle(r4).extractAngularUnits(a5);
  }
  throw new a2(null, r.LogicError, null, { reason: "conversion error" });
}
function ce2(e3, n6, t6) {
  const r4 = e3.getAngle(n6);
  if (n6 === q3.quadrant && t6 === y2.degrees_minutes_seconds) {
    const t7 = Z3.secondsToDMS(r4.extractAngularUnits(y2.seconds));
    return [C2(e3.getMeridian(n6), "SHORT"), t7.m_degrees, t7.m_minutes, t7.m_seconds, C2(e3.getDirection(n6), "SHORT")];
  }
  if (t6 === y2.degrees_minutes_seconds) {
    const e4 = Z3.secondsToDMS(r4.extractAngularUnits(y2.seconds));
    return [e4.m_degrees, e4.m_minutes, e4.m_seconds];
  }
  return n6 === q3.quadrant ? [C2(e3.getMeridian(n6), "SHORT"), r4.extractAngularUnits(t6), C2(e3.getDirection(n6), "SHORT")] : [r4.extractAngularUnits(t6)];
}
function ue2(e3, r4) {
  let s4 = "";
  switch (e3) {
    case y2.decimal_degrees:
      s4 = r4 === q3.quadrant ? "DD.DD" + z3 : "DDD.DD" + z3;
      break;
    case y2.degrees_minutes_seconds:
      s4 = r4 === q3.quadrant ? "dd" + z3 + ` mm' ss"` : "ddd" + z3 + ` mm' ss.ss"`;
      break;
    case y2.radians:
      s4 = "R.RR";
      break;
    case y2.gradians:
      s4 = "GGG.GG" + x3;
      break;
    default:
      throw new a2(null, r.LogicError, null, { reason: "conversion error" });
  }
  return r4 === q3.quadrant && (s4 = "p " + s4 + " b"), s4;
}
function le(e3, n6, t6) {
  const r4 = { padding: 0, rounding: 0, newpos: n6 };
  let s4 = false;
  for (; n6 < e3.length; ) {
    const a5 = e3[n6];
    if (a5 === t6)
      s4 ? r4.rounding++ : r4.padding++, n6++;
    else {
      if ("." !== a5)
        break;
      s4 = true, n6++;
    }
  }
  return r4.newpos = n6 - 1, r4;
}
function de2(e3, n6, t6) {
  const r4 = { escaped: "", newpos: n6 };
  for (n6++; n6 < e3.length; ) {
    const t7 = e3[n6];
    if (n6++, "]" === t7)
      break;
    r4.escaped += t7;
  }
  return r4.newpos = n6 - 1, r4;
}
function he(e3, n6, t6) {
  let r4 = "", s4 = null, a5 = null;
  const i4 = Y2.createFromStringAndBearing(n6, e3, t6), o2 = { D: y2.decimal_degrees, d: y2.truncated_degrees, m: y2.fractional_degree_minutes, s: y2.fractional_minute_seconds, R: y2.radians, G: y2.gradians };
  for (let c3 = 0; c3 < n6.length; c3++) {
    const u3 = n6[c3];
    switch (u3) {
      case "[":
        s4 = de2(n6, c3), r4 += s4.escaped, c3 = s4.newpos;
        continue;
      case "D":
      case "d":
      case "m":
      case "s":
      case "R":
      case "G":
        s4 = le(n6, c3, u3), a5 = e3.getAngle(t6), r4 += $2(a5, o2[u3], s4.padding, s4.rounding, i4), c3 = s4.newpos;
        continue;
      case "P":
      case "p":
        r4 += C2(i4.fetchMeridian(), "p" === u3 ? "SHORT" : "LONG");
        continue;
      case "B":
      case "b":
        r4 += C2(i4.fetchDirection(), "b" === u3 ? "SHORT" : "LONG");
        continue;
      default:
        r4 += u3;
    }
  }
  return r4;
}
function me(s4, a5, i4) {
  if (!(a5 instanceof N2))
    throw new a2(null, r.InvalidParameter, null);
  if (false === a5.hasField("directionType"))
    throw new a2(null, r.LogicError, null, { reason: "missing directionType" });
  if (false === a5.hasField("angleType"))
    throw new a2(null, r.LogicError, null, { reason: "missing angleType" });
  const o2 = j3(O(a5.field("directiontype"))), c3 = ie(s4, W3(O(a5.field("angletype"))), o2);
  if (!(i4 instanceof N2))
    throw new a2(null, r.InvalidParameter, null);
  if (false === i4.hasField("directionType"))
    throw new a2(null, r.LogicError, null, { reason: "missing directionType" });
  if (false === i4.hasField("outputType"))
    throw new a2(null, r.LogicError, null, { reason: "missing angleType" });
  const u3 = j3(O(i4.field("directiontype"))), l4 = i4.hasField("angleType") ? W3(O(i4.field("angletype"))) : null, d3 = O(i4.field("outputType")).toUpperCase().trim();
  if (!u3 || !d3)
    throw new a2(null, r.LogicError, null, { reason: "conversion error" });
  if (!(l4 || "TEXT" === d3 && i4.hasField("format")))
    throw new a2(null, r.LogicError, null, { reason: "invalid unit" });
  switch (d3) {
    case "VALUE":
      return u3 === q3.quadrant || l4 === y2.degrees_minutes_seconds ? ce2(c3, u3, l4) : oe(c3, u3, l4);
    case "TEXT": {
      let e3 = "";
      return i4.hasField("format") && (e3 = ce(i4.field("format"))), null !== e3 && "" !== e3 || (e3 = ue2(l4, u3)), he(c3, e3, u3);
    }
    default:
      throw new a2(null, r.InvalidParameter, null);
  }
}

// node_modules/@arcgis/core/arcade/functions/hash.js
var t5 = 2654435761;
var s3 = 2246822519;
var n5 = 3266489917;
var e2 = 668265263;
var r3 = 374761393;
function h4(t6) {
  const s4 = [];
  for (let n6 = 0, e3 = t6.length; n6 < e3; n6++) {
    let e4 = t6.charCodeAt(n6);
    e4 < 128 ? s4.push(e4) : e4 < 2048 ? s4.push(192 | e4 >> 6, 128 | 63 & e4) : e4 < 55296 || e4 >= 57344 ? s4.push(224 | e4 >> 12, 128 | e4 >> 6 & 63, 128 | 63 & e4) : (n6++, e4 = 65536 + ((1023 & e4) << 10 | 1023 & t6.charCodeAt(n6)), s4.push(240 | e4 >> 18, 128 | e4 >> 12 & 63, 128 | e4 >> 6 & 63, 128 | 63 & e4));
  }
  return new Uint8Array(s4);
}
var i3 = class {
  constructor(t6) {
    this._seed = t6, this._totallen = 0, this._bufs = [], this.init();
  }
  init() {
    return this._bufs = [], this._totallen = 0, this;
  }
  updateFloatArray(t6) {
    const s4 = [];
    for (const n6 of t6)
      isNaN(n6) ? s4.push("NaN") : n6 === 1 / 0 ? s4.push("Infinity") : n6 === -1 / 0 ? s4.push("-Infinity") : 0 === n6 ? s4.push("0") : s4.push(n6.toString(16));
    this.update(h4(s4.join("")));
  }
  updateIntArray(t6) {
    const s4 = Int32Array.from(t6);
    this.update(new Uint8Array(s4.buffer));
  }
  updateUint8Array(t6) {
    this.update(Uint8Array.from(t6));
  }
  updateWithString(t6) {
    return this.update(h4(t6));
  }
  update(t6) {
    return this._bufs.push(t6), this._totallen += t6.length, this;
  }
  digest() {
    const t6 = new Uint8Array(this._totallen);
    let s4 = 0;
    for (const n6 of this._bufs)
      t6.set(n6, s4), s4 += n6.length;
    return this.init(), this._xxHash32(t6, this._seed);
  }
  _xxHash32(h5, i4 = 0) {
    const o2 = h5;
    let u3 = i4 + r3 & 4294967295, a5 = 0;
    if (o2.length >= 16) {
      const n6 = [i4 + t5 + s3 & 4294967295, i4 + s3 & 4294967295, i4 + 0 & 4294967295, i4 - t5 & 4294967295], e3 = h5, r4 = e3.length - 16;
      let o3 = 0;
      for (a5 = 0; (4294967280 & a5) <= r4; a5 += 4) {
        const r5 = a5, h6 = e3[r5] + (e3[r5 + 1] << 8), i5 = e3[r5 + 2] + (e3[r5 + 3] << 8), u4 = h6 * s3 + (i5 * s3 << 16);
        let l5 = n6[o3] + u4 & 4294967295;
        l5 = l5 << 13 | l5 >>> 19;
        const f3 = 65535 & l5, p9 = l5 >>> 16;
        n6[o3] = f3 * t5 + (p9 * t5 << 16) & 4294967295, o3 = o3 + 1 & 3;
      }
      u3 = (n6[0] << 1 | n6[0] >>> 31) + (n6[1] << 7 | n6[1] >>> 25) + (n6[2] << 12 | n6[2] >>> 20) + (n6[3] << 18 | n6[3] >>> 14) & 4294967295;
    }
    u3 = u3 + h5.length & 4294967295;
    const l4 = h5.length - 4;
    for (; a5 <= l4; a5 += 4) {
      const t6 = a5, s4 = o2[t6] + (o2[t6 + 1] << 8), r4 = o2[t6 + 2] + (o2[t6 + 3] << 8);
      u3 = u3 + (s4 * n5 + (r4 * n5 << 16)) & 4294967295, u3 = u3 << 17 | u3 >>> 15, u3 = (65535 & u3) * e2 + ((u3 >>> 16) * e2 << 16) & 4294967295;
    }
    for (; a5 < o2.length; ++a5) {
      u3 += o2[a5] * r3, u3 = u3 << 11 | u3 >>> 21, u3 = (65535 & u3) * t5 + ((u3 >>> 16) * t5 << 16) & 4294967295;
    }
    return u3 ^= u3 >>> 15, u3 = ((65535 & u3) * s3 & 4294967295) + ((u3 >>> 16) * s3 << 16), u3 ^= u3 >>> 13, u3 = ((65535 & u3) * n5 & 4294967295) + ((u3 >>> 16) * n5 << 16), u3 ^= u3 >>> 16, u3 < 0 ? u3 + 4294967296 : u3;
  }
};

// node_modules/@arcgis/core/arcade/functions/string.js
function B2(t6) {
  var _a;
  if ("loaded" === t6.loadStatus && ((_a = t6.user) == null ? void 0 : _a.sourceJSON)) {
    return t6.user.sourceJSON;
  }
  return null;
}
function q4(t6, e3) {
  return !!t6 && N(t6, (e3 == null ? void 0 : e3.restUrl) || "");
}
function X3(t6, e3) {
  if (!t6 || !e3)
    return t6 === e3;
  if (t6.x === e3.x && t6.y === e3.y) {
    if (t6.hasZ) {
      if (t6.z !== e3.z)
        return false;
    } else if (e3.hasZ)
      return false;
    if (t6.hasM) {
      if (t6.m !== e3.m)
        return false;
    } else if (e3.hasM)
      return false;
    return true;
  }
  return false;
}
function Y3(o2, i4, u3) {
  if (null !== o2)
    if (q(o2)) {
      if (i4.updateUint8Array([61]), u3.map.has(o2)) {
        const t6 = u3.map.get(o2);
        i4.updateIntArray([61237541 ^ t6]);
      } else {
        u3.map.set(o2, u3.currentLength++);
        for (const t6 of o2)
          Y3(t6, i4, u3);
        u3.map.delete(o2), u3.currentLength--;
      }
      i4.updateUint8Array([199]);
    } else if ($(o2)) {
      if (i4.updateUint8Array([61]), u3.map.has(o2)) {
        const t6 = u3.map.get(o2);
        i4.updateIntArray([61237541 ^ t6]);
      } else {
        u3.map.set(o2, u3.currentLength++);
        for (const t6 of o2.toArray())
          Y3(t6, i4, u3);
        u3.map.delete(o2), u3.currentLength--;
      }
      i4.updateUint8Array([199]);
    } else {
      if (Q(o2))
        return i4.updateIntArray([o2.toNumber()]), void i4.updateUint8Array([241]);
      if (X(o2))
        return i4.updateIntArray([o2.toNumber()]), void i4.updateIntArray([257]);
      if (K(o2))
        return i4.updateIntArray([o2.toNumber()]), void i4.updateIntArray([263]);
      if (P(o2))
        return i4.updateIntArray([o2.length]), i4.updateWithString(o2), void i4.updateUint8Array([41]);
      if (G(o2))
        i4.updateUint8Array([true === o2 ? 1 : 0, 113]);
      else {
        if (z(o2))
          return i4.updateFloatArray([o2]), void i4.updateUint8Array([173]);
        if (o2 instanceof t3)
          throw new a2(u3.context, r.UnsupportedHashType, u3.node);
        if (o2 instanceof t2)
          throw new a2(u3.context, r.UnsupportedHashType, u3.node);
        if (!(o2 instanceof N2)) {
          if (U(o2))
            throw new a2(u3.context, r.UnsupportedHashType, u3.node);
          if (o2 instanceof x)
            return i4.updateIntArray([3833836621]), i4.updateIntArray([0]), i4.updateFloatArray([o2.x]), i4.updateIntArray([1]), i4.updateFloatArray([o2.y]), o2.hasZ && (i4.updateIntArray([2]), i4.updateFloatArray([o2.z])), o2.hasM && (i4.updateIntArray([3]), i4.updateFloatArray([o2.m])), i4.updateIntArray([3765347959]), void Y3(o2.spatialReference.wkid, i4, u3);
          if (o2 instanceof j) {
            i4.updateIntArray([1266616829]);
            for (let t6 = 0; t6 < o2.rings.length; t6++) {
              const e3 = o2.rings[t6], r4 = [];
              let n6 = null, a5 = null;
              for (let i5 = 0; i5 < e3.length; i5++) {
                const u4 = o2.getPoint(t6, i5);
                if (0 === i5)
                  n6 = u4;
                else if (X3(a5, u4))
                  continue;
                a5 = u4, i5 === e3.length - 1 && X3(n6, u4) || r4.push(u4);
              }
              i4.updateIntArray([1397116793, r4.length]);
              for (let t7 = 0; t7 < r4.length; t7++) {
                const e4 = r4[t7];
                i4.updateIntArray([3962308117, t7]), Y3(e4, i4, u3), i4.updateIntArray([2716288009]);
              }
              i4.updateIntArray([2278822459]);
            }
            return i4.updateIntArray([3878477243]), void Y3(o2.spatialReference.wkid, i4, u3);
          }
          if (o2 instanceof m) {
            i4.updateIntArray([4106883559]);
            for (let t6 = 0; t6 < o2.paths.length; t6++) {
              const e3 = o2.paths[t6];
              i4.updateIntArray([1397116793, e3.length]);
              for (let r4 = 0; r4 < e3.length; r4++)
                i4.updateIntArray([3962308117, r4]), Y3(o2.getPoint(t6, r4), i4, u3), i4.updateIntArray([2716288009]);
              i4.updateIntArray([2278822459]);
            }
            return i4.updateIntArray([2568784753]), void Y3(o2.spatialReference.wkid, i4, u3);
          }
          if (o2 instanceof u) {
            i4.updateIntArray([588535921, o2.points.length]);
            for (let t6 = 0; t6 < o2.points.length; t6++) {
              const e3 = o2.getPoint(t6);
              i4.updateIntArray([t6]), Y3(e3, i4, u3);
            }
            return i4.updateIntArray([1700171621]), void Y3(o2.spatialReference.wkid, i4, u3);
          }
          if (o2 instanceof M)
            return i4.updateIntArray([3483648373]), i4.updateIntArray([0]), i4.updateFloatArray([o2.xmax]), i4.updateIntArray([1]), i4.updateFloatArray([o2.xmin]), i4.updateIntArray([2]), i4.updateFloatArray([o2.ymax]), i4.updateIntArray([3]), i4.updateFloatArray([o2.ymin]), o2.hasZ && (i4.updateIntArray([4]), i4.updateFloatArray([o2.zmax]), i4.updateIntArray([5]), i4.updateFloatArray([o2.zmin])), o2.hasM && (i4.updateIntArray([6]), i4.updateFloatArray([o2.mmax]), i4.updateIntArray([7]), i4.updateFloatArray([o2.mmin])), i4.updateIntArray([3622027469]), void Y3(o2.spatialReference.wkid, i4, u3);
          if (o2 instanceof f)
            return i4.updateIntArray([14]), void 0 !== o2.wkid && null !== o2.wkid && i4.updateIntArray([o2.wkid]), o2.wkt && i4.updateWithString(o2.wkt), void (o2.wkt2 && i4.updateWithString(o2.wkt2));
          if (v(o2))
            throw new a2(u3.context, r.UnsupportedHashType, u3.node);
          if (H(o2))
            throw new a2(u3.context, r.UnsupportedHashType, u3.node);
          if (W(o2))
            throw new a2(u3.context, r.UnsupportedHashType, u3.node);
          if (o2 === w)
            throw new a2(u3.context, r.UnsupportedHashType, u3.node);
          throw new a2(u3.context, r.UnsupportedHashType, u3.node);
        }
        if (i4.updateUint8Array([223]), u3.map.has(o2)) {
          const t6 = u3.map.get(o2);
          i4.updateIntArray([61237541 ^ t6]);
        } else {
          u3.map.set(o2, u3.currentLength++);
          for (const t6 of o2.keys()) {
            i4.updateIntArray([t6.length]), i4.updateWithString(t6), i4.updateUint8Array([251]);
            Y3(o2.field(t6), i4, u3), i4.updateUint8Array([239]);
          }
          u3.map.delete(o2), u3.currentLength--;
        }
        i4.updateUint8Array([73]);
      }
    }
  else
    i4.updateUint8Array([0, 139]);
}
function $3(e3, N4) {
  e3.portal = function(e4, r4) {
    return N4(e4, r4, (n6, a5, u3) => (ne(u3, 1, 1, e4, r4), new t2(ce(u3[0]))));
  }, e3.typeof = function(t6, e4) {
    return N4(t6, e4, (r4, i4, s4) => {
      ne(s4, 1, 1, t6, e4);
      const l4 = Y(s4[0]);
      if ("Unrecognized Type" === l4)
        throw new a2(t6, r.UnrecognizedType, e4);
      return l4;
    });
  }, e3.trim = function(t6, e4) {
    return N4(t6, e4, (r4, n6, a5) => (ne(a5, 1, 1, t6, e4), ce(a5[0]).trim()));
  }, e3.tohex = function(t6, e4) {
    return N4(t6, e4, (r4, n6, a5) => {
      ne(a5, 1, 1, t6, e4);
      const i4 = pe(a5[0]);
      return isNaN(i4) ? i4 : i4.toString(16);
    });
  }, e3.upper = function(t6, e4) {
    return N4(t6, e4, (r4, n6, a5) => (ne(a5, 1, 1, t6, e4), ce(a5[0]).toUpperCase()));
  }, e3.proper = function(t6, e4) {
    return N4(t6, e4, (r4, n6, a5) => {
      ne(a5, 1, 2, t6, e4);
      let u3 = 1;
      2 === a5.length && "firstword" === ce(a5[1]).toLowerCase() && (u3 = 2);
      const s4 = /\s/, l4 = ce(a5[0]);
      let d3 = "", p9 = true;
      for (let t7 = 0; t7 < l4.length; t7++) {
        let e5 = l4[t7];
        if (s4.test(e5))
          1 === u3 && (p9 = true);
        else {
          e5.toUpperCase() !== e5.toLowerCase() && (p9 ? (e5 = e5.toUpperCase(), p9 = false) : e5 = e5.toLowerCase());
        }
        d3 += e5;
      }
      return d3;
    });
  }, e3.lower = function(t6, e4) {
    return N4(t6, e4, (r4, n6, a5) => (ne(a5, 1, 1, t6, e4), ce(a5[0]).toLowerCase()));
  }, e3.guid = function(t6, e4) {
    return N4(t6, e4, (r4, n6, a5) => {
      if (ne(a5, 0, 1, t6, e4), a5.length > 0)
        switch (ce(a5[0]).toLowerCase()) {
          case "digits":
            return ae().replace("-", "").replace("-", "").replace("-", "").replace("-", "");
          case "digits-hyphen":
            return ae();
          case "digits-hyphen-braces":
            return "{" + ae() + "}";
          case "digits-hyphen-parentheses":
            return "(" + ae() + ")";
        }
      return "{" + ae() + "}";
    });
  }, e3.standardizeguid = function(t6, e4) {
    return N4(t6, e4, (r4, n6, a5) => {
      ne(a5, 2, 2, t6, e4);
      let u3 = ce(a5[0]);
      if ("" === u3 || null === u3)
        return "";
      const s4 = /^(\{|\()?(?<partA>[0-9a-z]{8})(\-?)(?<partB>[0-9a-z]{4})(\-?)(?<partC>[0-9a-z]{4})(\-?)(?<partD>[0-9a-z]{4})(\-?)(?<partE>[0-9a-z]{12})(\}|\))?$/gim.exec(u3);
      if (!s4)
        return "";
      const l4 = s4.groups;
      switch (u3 = l4.partA + "-" + l4.partB + "-" + l4.partC + "-" + l4.partD + "-" + l4.partE, ce(a5[1]).toLowerCase()) {
        case "digits":
          return u3.replace("-", "").replace("-", "").replace("-", "").replace("-", "");
        case "digits-hyphen":
          return u3;
        case "digits-hyphen-braces":
          return "{" + u3 + "}";
        case "digits-hyphen-parentheses":
          return "(" + u3 + ")";
      }
      return "{" + u3 + "}";
    });
  }, e3.console = function(t6, e4) {
    return N4(t6, e4, (e5, r4, n6) => (0 === n6.length || (1 === n6.length ? t6.console(ce(n6[0])) : t6.console(ce(n6))), w));
  }, e3.mid = function(t6, e4) {
    return N4(t6, e4, (r4, n6, a5) => {
      ne(a5, 2, 3, t6, e4);
      let u3 = pe(a5[1]);
      if (isNaN(u3))
        return "";
      if (u3 < 0 && (u3 = 0), 2 === a5.length)
        return ce(a5[0]).substr(u3);
      let l4 = pe(a5[2]);
      return isNaN(l4) ? "" : (l4 < 0 && (l4 = 0), ce(a5[0]).substr(u3, l4));
    });
  }, e3.find = function(t6, e4) {
    return N4(t6, e4, (r4, n6, a5) => {
      ne(a5, 2, 3, t6, e4);
      let u3 = 0;
      if (a5.length > 2) {
        if (u3 = pe(L(a5[2], 0)), isNaN(u3))
          return -1;
        u3 < 0 && (u3 = 0);
      }
      return ce(a5[1]).indexOf(ce(a5[0]), u3);
    });
  }, e3.left = function(t6, e4) {
    return N4(t6, e4, (r4, n6, a5) => {
      ne(a5, 2, 2, t6, e4);
      let u3 = pe(a5[1]);
      return isNaN(u3) ? "" : (u3 < 0 && (u3 = 0), ce(a5[0]).substr(0, u3));
    });
  }, e3.right = function(t6, e4) {
    return N4(t6, e4, (r4, n6, a5) => {
      ne(a5, 2, 2, t6, e4);
      let u3 = pe(a5[1]);
      return isNaN(u3) ? "" : (u3 < 0 && (u3 = 0), ce(a5[0]).substr(-1 * u3, u3));
    });
  }, e3.split = function(t6, e4) {
    return N4(t6, e4, (r4, n6, a5) => {
      let u3;
      ne(a5, 2, 4, t6, e4);
      let l4 = pe(L(a5[2], -1));
      const d3 = be(L(a5[3], false));
      if (-1 === l4 || null === l4 || true === d3 ? u3 = ce(a5[0]).split(ce(a5[1])) : (isNaN(l4) && (l4 = -1), l4 < -1 && (l4 = -1), u3 = ce(a5[0]).split(ce(a5[1]), l4)), false === d3)
        return u3;
      const f3 = [];
      for (let t7 = 0; t7 < u3.length && !(-1 !== l4 && f3.length >= l4); t7++)
        "" !== u3[t7] && void 0 !== u3[t7] && f3.push(u3[t7]);
      return f3;
    });
  }, e3.text = function(t6, e4) {
    return N4(t6, e4, (r4, n6, a5) => (ne(a5, 1, 2, t6, e4), de(a5[0], a5[1])));
  }, e3.concatenate = function(t6, e4) {
    return N4(t6, e4, (t7, e5, r4) => {
      const n6 = [];
      if (r4.length < 1)
        return "";
      if (q(r4[0])) {
        const t8 = L(r4[2], "");
        for (let e6 = 0; e6 < r4[0].length; e6++)
          n6[e6] = de(r4[0][e6], t8);
        return r4.length > 1 ? n6.join(r4[1]) : n6.join("");
      }
      if ($(r4[0])) {
        const t8 = L(r4[2], "");
        for (let e6 = 0; e6 < r4[0].length(); e6++)
          n6[e6] = de(r4[0].get(e6), t8);
        return r4.length > 1 ? n6.join(r4[1]) : n6.join("");
      }
      for (let a5 = 0; a5 < r4.length; a5++)
        n6[a5] = de(r4[a5]);
      return n6.join("");
    });
  }, e3.reverse = function(t6, e4) {
    return N4(t6, e4, (r4, i4, u3) => {
      if (ne(u3, 1, 1, t6, e4), q(u3[0])) {
        const t7 = u3[0].slice(0);
        return t7.reverse(), t7;
      }
      if ($(u3[0])) {
        const t7 = u3[0].toArray().slice(0);
        return t7.reverse(), t7;
      }
      throw new a2(t6, r.InvalidParameter, e4);
    });
  }, e3.replace = function(t6, e4) {
    return N4(t6, e4, (r4, n6, a5) => {
      ne(a5, 3, 4, t6, e4);
      const u3 = ce(a5[0]), s4 = ce(a5[1]), l4 = ce(a5[2]);
      return 4 !== a5.length || be(a5[3]) ? I(u3, s4, l4) : u3.replace(s4, l4);
    });
  }, e3.schema = function(t6, e4) {
    return N4(t6, e4, (o2, i4, u3) => {
      if (U(u3[0])) {
        const e5 = Ue(u3[0]);
        return e5 ? N2.convertObjectToArcadeDictionary(e5, qe(t6)) : null;
      }
      throw new a2(t6, r.InvalidParameter, e4);
    });
  }, e3.subtypes = function(t6, e4) {
    return N4(t6, e4, (i4, u3, s4) => {
      if (ne(s4, 1, 1, t6, e4), U(s4[0])) {
        const e5 = ze(s4[0]);
        return e5 ? N2.convertObjectToArcadeDictionary(e5, qe(t6)) : null;
      }
      throw new a2(t6, r.InvalidParameter, e4);
    });
  }, e3.subtypecode = function(t6, e4) {
    return N4(t6, e4, (r4, i4, u3) => {
      if (ne(u3, 1, 1, t6, e4), U(u3[0])) {
        const t7 = ze(u3[0]);
        if (!t7)
          return null;
        if (t7.subtypeField && u3[0].hasField(t7.subtypeField)) {
          const e5 = u3[0].field(t7.subtypeField);
          for (const r5 of t7.subtypes)
            if (r5.code === e5)
              return r5.code;
          return null;
        }
        return null;
      }
      throw new a2(t6, r.InvalidParameter, e4);
    });
  }, e3.subtypename = function(t6, e4) {
    return N4(t6, e4, (r4, i4, u3) => {
      if (ne(u3, 1, 1, t6, e4), U(u3[0])) {
        const t7 = ze(u3[0]);
        if (!t7)
          return "";
        if (t7.subtypeField && u3[0].hasField(t7.subtypeField)) {
          const e5 = u3[0].field(t7.subtypeField);
          for (const r5 of t7.subtypes)
            if (r5.code === e5)
              return r5.name;
          return "";
        }
        return "";
      }
      throw new a2(t6, r.InvalidParameter, e4);
    });
  }, e3.gdbversion = function(t6, e4) {
    return N4(t6, e4, (r4, i4, u3) => {
      if (ne(u3, 1, 1, t6, e4), U(u3[0]))
        return u3[0].gdbVersion();
      throw new a2(t6, r.InvalidParameter, e4);
    });
  }, e3.domain = function(t6, e4) {
    return N4(t6, e4, (u3, s4, l4) => {
      if (ne(l4, 2, 3, t6, e4), U(l4[0])) {
        const e5 = Ge(l4[0], ce(l4[1]), void 0 === l4[2] ? void 0 : l4[2]);
        return e5 && e5.domain ? "coded-value" === e5.domain.type || "codedValue" === e5.domain.type ? N2.convertObjectToArcadeDictionary({ type: "codedValue", name: e5.domain.name, dataType: k[e5.field.type], codedValues: e5.domain.codedValues.map((t7) => ({ name: t7.name, code: t7.code })) }, qe(t6)) : N2.convertObjectToArcadeDictionary({ type: "range", name: e5.domain.name, dataType: k[e5.field.type], min: e5.domain.min, max: e5.domain.max }, qe(t6)) : null;
      }
      throw new a2(t6, r.InvalidParameter, e4);
    });
  }, e3.domainname = function(t6, e4) {
    return N4(t6, e4, (r4, u3, s4) => {
      if (ne(s4, 2, 4, t6, e4), U(s4[0]))
        return Ee(s4[0], ce(s4[1]), s4[2], void 0 === s4[3] ? void 0 : s4[3]);
      throw new a2(t6, r.InvalidParameter, e4);
    });
  }, e3.domaincode = function(t6, e4) {
    return N4(t6, e4, (r4, u3, s4) => {
      if (ne(s4, 2, 4, t6, e4), U(s4[0]))
        return Ve(s4[0], ce(s4[1]), s4[2], void 0 === s4[3] ? void 0 : s4[3]);
      throw new a2(t6, r.InvalidParameter, e4);
    });
  }, e3.urlencode = function(t6, e4) {
    return N4(t6, e4, (n6, a5, u3) => {
      if (ne(u3, 1, 1, t6, e4), null === u3[0])
        return "";
      if (u3[0] instanceof N2) {
        let t7 = "";
        for (const e5 of u3[0].keys()) {
          const r4 = u3[0].field(e5);
          "" !== t7 && (t7 += "&"), t7 += null === r4 ? encodeURIComponent(e5) + "=" : encodeURIComponent(e5) + "=" + encodeURIComponent(r4);
        }
        return t7;
      }
      return encodeURIComponent(ce(u3[0]));
    });
  }, e3.hash = function(t6, e4) {
    return N4(t6, e4, (r4, n6, a5) => {
      ne(a5, 1, 1, t6, e4);
      const i4 = new i3(0);
      return Y3(a5[0], i4, { context: t6, node: e4, map: /* @__PURE__ */ new Map(), currentLength: 0 }), i4.digest();
    });
  }, e3.convertdirection = function(t6, e4) {
    return N4(t6, e4, (r4, n6, a5) => (ne(a5, 3, 3, t6, e4), me(a5[0], a5[1], a5[2])));
  }, e3.fromjson = function(t6, e4) {
    return N4(t6, e4, (u3, s4, l4) => {
      if (ne(l4, 1, 1, t6, e4), false === P(l4[0]))
        throw new a2(t6, r.InvalidParameter, e4);
      return N2.convertJsonToArcade(JSON.parse(ce(l4[0])), qe(t6));
    });
  }, e3.expects = function(t6, e4) {
    return N4(t6, e4, (r4, o2, i4) => {
      if (i4.length < 1)
        throw new a2(t6, r.WrongNumberOfParameters, e4);
      return w;
    });
  }, e3.tocharcode = function(t6, e4) {
    return N4(t6, e4, (r4, u3, l4) => {
      ne(l4, 1, 2, t6, e4);
      const d3 = pe(L(l4[1], 0)), c3 = ce(l4[0]);
      if (0 === c3.length && 1 === l4.length)
        return null;
      if (c3.length <= d3 || d3 < 0)
        throw new a2(t6, r.OutOfBounds, e4);
      return c3.charCodeAt(d3);
    });
  }, e3.tocodepoint = function(t6, e4) {
    return N4(t6, e4, (r4, u3, l4) => {
      ne(l4, 1, 2, t6, e4);
      const d3 = pe(L(l4[1], 0)), c3 = ce(l4[0]);
      if (0 === c3.length && 1 === l4.length)
        return null;
      if (c3.length <= d3 || d3 < 0)
        throw new a2(t6, r.OutOfBounds, e4);
      return c3.codePointAt(d3);
    });
  }, e3.fromcharcode = function(t6, e4) {
    return N4(t6, e4, (r4, o2, i4) => {
      if (i4.length < 1)
        throw new a2(t6, r.WrongNumberOfParameters, e4);
      const u3 = i4.map((t7) => Math.trunc(pe(t7))).filter((t7) => t7 >= 0 && t7 <= 65535);
      return 0 === u3.length ? null : String.fromCharCode.apply(null, u3);
    });
  }, e3.fromcodepoint = function(t6, e4) {
    return N4(t6, e4, (r4, o2, i4) => {
      if (i4.length < 1)
        throw new a2(t6, r.WrongNumberOfParameters, e4);
      let u3;
      try {
        u3 = i4.map((t7) => Math.trunc(pe(t7))).filter((t7) => t7 <= 1114111 && t7 >>> 0 === t7);
      } catch (l4) {
        return null;
      }
      return 0 === u3.length ? null : String.fromCodePoint.apply(null, u3);
    });
  }, e3.getuser = function(e4, u3) {
    return N4(e4, u3, (s4, l4, d3) => {
      var _a;
      ne(d3, 0, 2, e4, u3);
      let c3 = L(d3[1], "");
      if (c3 = true === c3 || false === c3 ? "" : ce(c3), null !== c3 && "" !== c3)
        return null;
      if (0 === d3.length || d3[0] instanceof t2) {
        let t6 = null;
        if (t6 = ((_a = e4.services) == null ? void 0 : _a.portal) ? e4.services.portal : j2.getDefault(), d3.length > 0) {
          if (!q4(d3[0].field("url"), t6))
            return null;
        }
        if (!t6)
          return null;
        if ("" === c3) {
          const n6 = B2(t6);
          if (n6) {
            const t7 = JSON.parse(JSON.stringify(n6));
            for (const e5 of ["lastLogin", "created", "modified"])
              void 0 !== t7[e5] && null !== t7[e5] && (t7[e5] = new Date(t7[e5]));
            return N2.convertObjectToArcadeDictionary(t7, qe(e4));
          }
        }
        return null;
      }
      throw new a2(e4, r.InvalidParameter, u3);
    });
  }, e3.getenvironment = function(t6, e4) {
    return N4(t6, e4, (n6, a5, i4) => (ne(i4, 0, 0, t6, e4), N2.convertObjectToArcadeDictionary(He(qe(t6), t6.spatialReference), qe(t6), true)));
  };
}

export {
  s,
  o,
  c2 as c,
  x2 as x,
  p5 as p,
  l2 as l,
  u2 as u,
  y,
  d,
  p6 as p2,
  C,
  W2 as W,
  L2 as L,
  m4 as m,
  f2 as f,
  $3 as $
};
//# sourceMappingURL=chunk-W24NOO6R.js.map
