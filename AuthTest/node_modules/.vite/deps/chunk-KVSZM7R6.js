import {
  R,
  s as s3
} from "./chunk-KX2F2CD3.js";
import {
  _,
  x
} from "./chunk-R5DM4YAB.js";
import {
  d
} from "./chunk-SBW6NNVI.js";
import {
  u
} from "./chunk-WGO3VFQP.js";
import {
  s,
  s2
} from "./chunk-WJ3HJKNC.js";

// node_modules/@arcgis/core/support/basemapUtils.js
var p = s2.getLogger("esri.support.basemapUtils");
function y() {
  return {};
}
function m(e) {
  for (const r2 in e) {
    const t = e[r2];
    u(t), delete e[r2];
  }
}
function b(t, n) {
  let a;
  if ("string" == typeof t) {
    const i = t in s3, l = !i && t.includes("/");
    if (!i && !l) {
      const e = Object.entries(s3).filter(([e2, t2]) => s.apiKey && !t2.classic || !s.apiKey && (t2.classic || t2.is3d)).map(([e2]) => `"${e2}"`).sort().join(", ");
      return p.warn(`Unable to find basemap definition for: ${t}. Try one of these: ${e}`), null;
    }
    n && (a = n[t]), a || (a = i ? R.fromId(t) : new R({ style: { id: t } }), n && (n[t] = a));
  } else
    a = d(R, t);
  return (a == null ? void 0 : a.destroyed) && (p.warn("The provided basemap is already destroyed", { basemap: a }), a = null), a;
}
function w(e) {
  return !!(e == null ? void 0 : e.baseLayers.concat(e.referenceLayers).some(j));
}
function j(e) {
  if (x2(e.url))
    return true;
  if ("vector-tile" === e.type)
    for (const r2 in e.sourceNameToSource) {
      const t = e.sourceNameToSource[r2];
      if (x2(t == null ? void 0 : t.sourceUrl))
        return true;
    }
  return false;
}
function U(e, r2) {
  var _a;
  if (null == r2 || null == e)
    return { spatialReference: null, updating: false };
  if ("not-loaded" === r2.loadStatus)
    return r2.load(), { spatialReference: null, updating: true };
  if (r2.spatialReference)
    return { spatialReference: r2.spatialReference, updating: false };
  if (0 === r2.baseLayers.length)
    return { spatialReference: null, updating: false };
  const t = r2.baseLayers.at(0);
  switch (t.loadStatus) {
    case "not-loaded":
      t.load();
    case "loading":
      return { spatialReference: null, updating: true };
    case "failed":
      return { spatialReference: null, updating: false };
  }
  const n = (("supportedSpatialReferences" in t ? t.supportedSpatialReferences : null) || ["tileInfo" in t ? (_a = t.tileInfo) == null ? void 0 : _a.spatialReference : t.spatialReference]).filter(Boolean), a = e.spatialReference;
  return a ? { spatialReference: n.find((e2) => a.equals(e2)) ?? n[0] ?? null, updating: false } : { spatialReference: n[0], updating: false };
}
var q = /^(basemaps|ibasemaps).*-api\.arcgis\.com$/i;
function x2(e) {
  if (!e)
    return false;
  const r2 = new x(_(e));
  return !!r2.authority && q.test(r2.authority);
}

export {
  y,
  m,
  b,
  w,
  j,
  U
};
//# sourceMappingURL=chunk-KVSZM7R6.js.map
