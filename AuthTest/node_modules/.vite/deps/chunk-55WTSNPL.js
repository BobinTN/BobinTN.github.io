import {
  o
} from "./chunk-RN5RTM2J.js";
import {
  s as s3
} from "./chunk-YNB3DCUM.js";
import {
  e
} from "./chunk-GLBAW5CR.js";
import {
  s2 as s,
  s3 as s2
} from "./chunk-WJ3HJKNC.js";

// node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderTechnique/BindType.js
var a;
!function(a6) {
  a6[a6.Pass = 0] = "Pass", a6[a6.Draw = 1] = "Draw";
}(a || (a = {}));

// node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderModules/Uniform.js
var a2 = class {
  constructor(a6, i2, e3, r, t = null) {
    if (this.name = a6, this.type = i2, this.arraySize = t, this.bind = { [a.Pass]: null, [a.Draw]: null }, r)
      switch (e3) {
        case a.Pass:
          this.bind[a.Pass] = r;
          break;
        case a.Draw:
          this.bind[a.Draw] = r;
      }
  }
  equals(s6) {
    return this.type === s6.type && this.name === s6.name && this.arraySize === s6.arraySize;
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderModules/Texture2DPassUniform.js
var s4 = class extends a2 {
  constructor(r, s6) {
    super(r, "sampler2D", a.Pass, (e3, o5, t) => e3.bindTexture(r, s6(o5, t)));
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderModules/Float2PassUniform.js
var e2 = class extends a2 {
  constructor(r, e3) {
    super(r, "vec2", a.Pass, (s6, o5, t) => s6.setUniform2fv(r, e3(o5, t)));
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderModules/FloatPassUniform.js
var o2 = class extends a2 {
  constructor(r, o5) {
    super(r, "float", a.Pass, (s6, e3, t) => s6.setUniform1f(r, o5(e3, t)));
  }
};

// node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/ScreenSpacePass.glsl.js
function o3(o5, t = true) {
  o5.attributes.add(e.POSITION, "vec2"), t && o5.varyings.add("uv", "vec2"), o5.vertex.code.add(o`
    void main(void) {
      gl_Position = vec4(position, 0.0, 1.0);
      ${t ? o`uv = position * 0.5 + vec2(0.5);` : ""}
    }
  `);
}

// node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/util/RgbaFloatEncoding.glsl.js
function a3(a6) {
  a6.code.add(o`const float MAX_RGBA_FLOAT =
255.0 / 256.0 +
255.0 / 256.0 / 256.0 +
255.0 / 256.0 / 256.0 / 256.0 +
255.0 / 256.0 / 256.0 / 256.0 / 256.0;
const vec4 FIXED_POINT_FACTORS = vec4(1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0);
vec4 float2rgba(const float value) {
float valueInValidDomain = clamp(value, 0.0, MAX_RGBA_FLOAT);
vec4 fixedPointU8 = floor(fract(valueInValidDomain * FIXED_POINT_FACTORS) * 256.0);
const float toU8AsFloat = 1.0 / 255.0;
return fixedPointU8 * toU8AsFloat;
}
const vec4 RGBA_2_FLOAT_FACTORS = vec4(
255.0 / (256.0),
255.0 / (256.0 * 256.0),
255.0 / (256.0 * 256.0 * 256.0),
255.0 / (256.0 * 256.0 * 256.0 * 256.0)
);
float rgba2float(vec4 rgba) {
return dot(rgba, RGBA_2_FLOAT_FACTORS);
}`);
}

// node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderLibrary/output/ReadLinearDepth.glsl.js
function a4(a6) {
  a6.include(a3), a6.code.add(o`float linearDepthFromFloat(float depth, vec2 nearFar) {
return -(depth * (nearFar[1] - nearFar[0]) + nearFar[0]);
}
float linearDepthFromRGBA(vec4 depth, vec2 nearFar) {
return linearDepthFromFloat(rgba2float(depth), nearFar);
}
float linearDepthFromTexture(sampler2D depthTex, vec2 uv, vec2 nearFar) {
ivec2 iuv = ivec2(uv * vec2(textureSize(depthTex, 0)));
return linearDepthFromRGBA(texelFetch(depthTex, iuv, 0), nearFar);
}`);
}

// node_modules/@arcgis/core/views/3d/webgl-engine/core/shaderModules/ShaderBuilder.js
var s5 = s.getLogger("esri.views.3d.webgl-engine.core.shaderModules.shaderBuilder");
var i = class {
  constructor() {
    this._includedModules = /* @__PURE__ */ new Map();
  }
  include(e3, t) {
    if (this._includedModules.has(e3)) {
      const r = this._includedModules.get(e3);
      if (r !== t) {
        s5.error("Trying to include shader module multiple times with different sets of options.");
        const t2 = /* @__PURE__ */ new Set();
        for (const n of Object.keys(r))
          r[n] !== e3[n] && t2.add(n);
        for (const n of Object.keys(e3))
          r[n] !== e3[n] && t2.add(n);
        t2.forEach((t3) => console.error(`  ${t3}: current ${r[t3]} new ${e3[t3]}`));
      }
    } else
      this._includedModules.set(e3, t), e3(this.builder, t);
  }
};
var o4 = class extends i {
  constructor() {
    super(...arguments), this.vertex = new u(), this.fragment = new u(), this.attributes = new h(), this.varyings = new m(), this.extensions = new l(), this.constants = new _(), this.outputs = new d();
  }
  get fragmentUniforms() {
    return this.fragment.uniforms.entries;
  }
  get builder() {
    return this;
  }
  generate(e3) {
    const t = this.extensions.generateSource(e3), r = this.attributes.generateSource(e3), n = this.varyings.generateSource(e3), s6 = "vertex" === e3 ? this.vertex : this.fragment, i2 = s6.uniforms.generateSource(), o5 = s6.code.generateSource(), a6 = "vertex" === e3 ? g : f, c2 = this.constants.generateSource().concat(s6.constants.generateSource()), u2 = this.outputs.generateSource(e3);
    return `#version 300 es
${t.join("\n")}

${a6}

${c2.join("\n")}

${i2.join("\n")}

${r.join("\n")}

${n.join("\n")}

${u2.join("\n")}

${o5.join("\n")}`;
  }
  generateBindPass(e3) {
    const t = /* @__PURE__ */ new Map();
    this.vertex.uniforms.entries.forEach((e4) => {
      const n2 = e4.bind[a.Pass];
      n2 && t.set(e4.name, n2);
    }), this.fragment.uniforms.entries.forEach((e4) => {
      const n2 = e4.bind[a.Pass];
      n2 && t.set(e4.name, n2);
    });
    const n = Array.from(t.values()), s6 = n.length;
    return (t2, r) => {
      for (let i2 = 0; i2 < s6; ++i2)
        n[i2](e3, t2, r);
    };
  }
  generateBindDraw(e3) {
    const t = /* @__PURE__ */ new Map();
    this.vertex.uniforms.entries.forEach((e4) => {
      const n2 = e4.bind[a.Draw];
      n2 && t.set(e4.name, n2);
    }), this.fragment.uniforms.entries.forEach((e4) => {
      const n2 = e4.bind[a.Draw];
      n2 && t.set(e4.name, n2);
    });
    const n = Array.from(t.values()), s6 = n.length;
    return (t2, r, i2) => {
      for (let o5 = 0; o5 < s6; ++o5)
        n[o5](e3, t2, r, i2);
    };
  }
};
var a5 = class {
  constructor() {
    this._entries = /* @__PURE__ */ new Map();
  }
  add(...e3) {
    for (const t of e3)
      this._add(t);
  }
  get(e3) {
    return this._entries.get(e3);
  }
  _add(t) {
    if (null != t) {
      if (this._entries.has(t.name) && !this._entries.get(t.name).equals(t))
        throw new s2(`Duplicate uniform name ${t.name} for different uniform type`);
      this._entries.set(t.name, t);
    } else
      s5.error(`Trying to add null Uniform from ${new Error().stack}.`);
  }
  generateSource() {
    return Array.from(this._entries.values()).map((e3) => null != e3.arraySize ? `uniform ${e3.type} ${e3.name}[${e3.arraySize}];` : `uniform ${e3.type} ${e3.name};`);
  }
  get entries() {
    return Array.from(this._entries.values());
  }
};
var c = class {
  constructor() {
    this._entries = new Array();
  }
  add(e3) {
    this._entries.push(e3);
  }
  generateSource() {
    return this._entries;
  }
};
var u = class extends i {
  constructor() {
    super(...arguments), this.uniforms = new a5(), this.code = new c(), this.constants = new _();
  }
  get builder() {
    return this;
  }
};
var h = class {
  constructor() {
    this._entries = new Array();
  }
  add(e3, t) {
    this._entries.push([e3, t]);
  }
  generateSource(e3) {
    return "fragment" === e3 ? [] : this._entries.map((e4) => `in ${e4[1]} ${e4[0]};`);
  }
};
var m = class {
  constructor() {
    this._entries = /* @__PURE__ */ new Map();
  }
  add(e3, t) {
    this._entries.has(e3) && s3(this._entries.get(e3) === t), this._entries.set(e3, t);
  }
  generateSource(e3) {
    const t = new Array();
    return this._entries.forEach((r, n) => t.push("vertex" === e3 ? `out ${r} ${n};` : `in ${r} ${n};`)), t;
  }
};
var l = class _l {
  constructor() {
    this._entries = /* @__PURE__ */ new Set();
  }
  add(e3) {
    this._entries.add(e3);
  }
  generateSource(e3) {
    const t = "vertex" === e3 ? _l.ALLOWLIST_VERTEX : _l.ALLOWLIST_FRAGMENT;
    return Array.from(this._entries).filter((e4) => t.includes(e4)).map((e4) => `#extension ${e4} : enable`);
  }
};
l.ALLOWLIST_FRAGMENT = ["GL_EXT_shader_texture_lod", "GL_OES_standard_derivatives"], l.ALLOWLIST_VERTEX = [];
var d = class _d {
  constructor() {
    this._entries = /* @__PURE__ */ new Map();
  }
  add(e3, t, r = 0) {
    const s6 = this._entries.get(r);
    s6 ? s3(s6.name === e3 && s6.type === t, `Fragment shader output location ${r} occupied`) : this._entries.set(r, { name: e3, type: t });
  }
  generateSource(e3) {
    if ("vertex" === e3)
      return [];
    0 === this._entries.size && this._entries.set(0, { name: _d.DEFAULT_NAME, type: _d.DEFAULT_TYPE });
    const t = new Array();
    return this._entries.forEach((e4, r) => t.push(`layout(location = ${r}) out ${e4.type} ${e4.name};`)), t;
  }
};
d.DEFAULT_TYPE = "vec4", d.DEFAULT_NAME = "fragColor";
var _ = class __ {
  constructor() {
    this._entries = /* @__PURE__ */ new Set();
  }
  add(e3, t, r) {
    let n = "ERROR_CONSTRUCTOR_STRING";
    switch (t) {
      case "float":
        n = __._numberToFloatStr(r);
        break;
      case "int":
        n = __._numberToIntStr(r);
        break;
      case "bool":
        n = r.toString();
        break;
      case "vec2":
        n = `vec2(${__._numberToFloatStr(r[0])},                            ${__._numberToFloatStr(r[1])})`;
        break;
      case "vec3":
        n = `vec3(${__._numberToFloatStr(r[0])},                            ${__._numberToFloatStr(r[1])},                            ${__._numberToFloatStr(r[2])})`;
        break;
      case "vec4":
        n = `vec4(${__._numberToFloatStr(r[0])},                            ${__._numberToFloatStr(r[1])},                            ${__._numberToFloatStr(r[2])},                            ${__._numberToFloatStr(r[3])})`;
        break;
      case "ivec2":
        n = `ivec2(${__._numberToIntStr(r[0])},                             ${__._numberToIntStr(r[1])})`;
        break;
      case "ivec3":
        n = `ivec3(${__._numberToIntStr(r[0])},                             ${__._numberToIntStr(r[1])},                             ${__._numberToIntStr(r[2])})`;
        break;
      case "ivec4":
        n = `ivec4(${__._numberToIntStr(r[0])},                             ${__._numberToIntStr(r[1])},                             ${__._numberToIntStr(r[2])},                             ${__._numberToIntStr(r[3])})`;
        break;
      case "mat2":
      case "mat3":
      case "mat4":
        n = `${t}(${Array.prototype.map.call(r, (e4) => __._numberToFloatStr(e4)).join(", ")})`;
    }
    return this._entries.add(`const ${t} ${e3} = ${n};`), this;
  }
  static _numberToIntStr(e3) {
    return e3.toFixed(0);
  }
  static _numberToFloatStr(e3) {
    return Number.isInteger(e3) ? e3.toFixed(1) : e3.toString();
  }
  generateSource() {
    return Array.from(this._entries);
  }
};
var f = "#ifdef GL_FRAGMENT_PRECISION_HIGH\n  precision highp float;\n  precision highp sampler2D;\n#else\n  precision mediump float;\n  precision mediump sampler2D;\n#endif";
var g = "precision highp float;\nprecision highp sampler2D;";

export {
  a,
  a2,
  s4 as s,
  e2 as e,
  o2 as o,
  a3,
  o3 as o2,
  a4,
  o4 as o3
};
//# sourceMappingURL=chunk-55WTSNPL.js.map
