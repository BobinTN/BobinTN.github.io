import {
  F,
  P,
  _2 as _,
  e2 as e,
  n,
  r2 as r,
  v,
  z
} from "./chunk-YTH6VA7N.js";
import {
  a
} from "./chunk-GINTRQSD.js";

// node_modules/@arcgis/core/views/3d/support/mathUtils.js
var d = n();
var w = n();
var y = n();
var z2 = n();
var A2 = n();

// node_modules/@arcgis/core/geometry/support/plane.js
function b(t = ut) {
  return [t[0], t[1], t[2], t[3]];
}
function d2(t, n2, r3, o2 = b()) {
  const c2 = r3[0] - n2[0], u2 = r3[1] - n2[1], e2 = r3[2] - n2[2], i2 = t[0] - n2[0], s2 = t[1] - n2[1], f = t[2] - n2[2], a3 = u2 * f - e2 * s2, I = e2 * i2 - c2 * f, N = c2 * s2 - u2 * i2, M = a3 * a3 + I * I + N * N, h = Math.abs(M - 1) > 1e-5 && M > 1e-12 ? 1 / Math.sqrt(M) : 1;
  return o2[0] = a3 * h, o2[1] = I * h, o2[2] = N * h, o2[3] = -(o2[0] * t[0] + o2[1] * t[1] + o2[2] * t[2]), o2;
}
function X(t, n2, e2, i2 = 0, s2 = Math.floor(e2 * (1 / 3)), f = Math.floor(e2 * (2 / 3))) {
  if (e2 < 3)
    return false;
  n2(L, i2);
  let a3 = s2, I = false;
  for (; a3 < e2 - 1 && !I; )
    n2(P2, a3), a3++, I = !F(L, P2);
  if (!I)
    return false;
  for (a3 = Math.max(a3, f), I = false; a3 < e2 && !I; )
    n2(O, a3), a3++, e(q2, L, P2), z(q2, q2), e(x, P2, O), z(x, x), I = !F(L, O) && !F(P2, O) && Math.abs(P(q2, x)) < C;
  return I ? (d2(L, P2, O, t), true) : (0 !== i2 || 1 !== s2 || 2 !== f) && X(t, n2, e2, 0, 1, 2);
}
var C = 0.99619469809;
var L = n();
var P2 = n();
var O = n();
var q2 = n();
var x = n();
var H = (() => {
  const t = n();
  return (r3, o2, u2) => {
    const e2 = ot(r3), f = ot(o2);
    _(t, e2, f);
    if (v(t) < a())
      return false;
    z(t, t);
    const [a3, I, N] = t, M = u2.origin, m = Math.abs(a3), g2 = Math.abs(I), p = Math.abs(N), [E2, j, b2] = e2, [l2, v2, A3] = f, F2 = r3[3], T = o2[3];
    return m > g2 && m > p ? (M[1] = (T * b2 - F2 * A3) / a3, M[2] = (F2 * v2 - T * j) / a3) : g2 > p ? (M[0] = (F2 * A3 - T * b2) / I, M[2] = (T * E2 - F2 * l2) / I) : (M[0] = (T * j - F2 * v2) / N, M[1] = (F2 * l2 - T * E2) / N), r(u2.direction, t), true;
  };
})();
function ot(t) {
  return t;
}
var ut = [0, 0, 1, 0];
var et;
!function(t) {
  t[t.NONE = 0] = "NONE", t[t.CLAMP = 1] = "CLAMP", t[t.INFINITE_MIN = 4] = "INFINITE_MIN", t[t.INFINITE_MAX = 8] = "INFINITE_MAX";
}(et || (et = {}));
var it = et.INFINITE_MIN | et.INFINITE_MAX;
var st = et.INFINITE_MAX;

export {
  b,
  X,
  ot
};
//# sourceMappingURL=chunk-IGVJ7QLR.js.map
