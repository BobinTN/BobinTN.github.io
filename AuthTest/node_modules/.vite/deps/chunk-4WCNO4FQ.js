import {
  n
} from "./chunk-7SYCRLSC.js";
import {
  Ae,
  Ue,
  _e,
  ge,
  pe,
  ye
} from "./chunk-GAWSWBHO.js";
import {
  W
} from "./chunk-HLGIRLYQ.js";

// node_modules/@arcgis/core/layers/graphics/sources/support/sourceUtils.js
var u = class {
  constructor() {
    this.code = null, this.description = null;
  }
};
var c = class {
  constructor(t) {
    this.error = new u(), this.globalId = null, this.objectId = null, this.success = false, this.uniqueId = null, this.error.description = t;
  }
};
function f(t) {
  return new c(t);
}
var a = class {
  constructor(t) {
    this.globalId = null, this.success = true, this.objectId = this.uniqueId = t;
  }
};
function d(t) {
  return new a(t);
}
var m = /* @__PURE__ */ new Set();
function p(t, n2, i, o = false) {
  m.clear();
  for (const s in i) {
    const l = t.get(s);
    if (!l)
      continue;
    const u2 = h(l, i[s]);
    if (m.add(l.name), l && (o || l.editable)) {
      const t2 = Ae(l, u2);
      if (t2)
        return f(Ue(t2, l, u2));
      n2[l.name] = u2;
    }
  }
  for (const e of (t == null ? void 0 : t.requiredFields) ?? [])
    if (!m.has(e.name))
      return f(`missing required field "${e.name}"`);
  return null;
}
function h(n2, e) {
  let r = e;
  return pe(n2) && "string" == typeof e ? r = parseFloat(e) : ye(n2) && null != e && "string" != typeof e ? r = String(e) : ge(n2) && "string" == typeof e && (r = n(e)), _e(r);
}
var y;
function w(t, e) {
  if (!t || !W(e))
    return t;
  if ("rings" in t || "paths" in t) {
    if (null == y)
      throw new TypeError("geometry engine not loaded");
    return y.simplify(e, t);
  }
  return t;
}
async function j() {
  return null == y && (y = await import("./geometryEngineJSON-CKCDO7TD.js")), y;
}
async function I(t, e) {
  !W(t) || "esriGeometryPolygon" !== e && "esriGeometryPolyline" !== e || await j();
}

export {
  f,
  d,
  p,
  w,
  I
};
//# sourceMappingURL=chunk-4WCNO4FQ.js.map
