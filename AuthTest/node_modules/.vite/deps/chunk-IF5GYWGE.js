import {
  e as e2
} from "./chunk-JDPYDQ7A.js";
import {
  T
} from "./chunk-C3MX2XVI.js";
import {
  j
} from "./chunk-CQMEHG4P.js";
import {
  o
} from "./chunk-WURET5CW.js";
import {
  f
} from "./chunk-QWPLZ3QH.js";
import {
  y2 as y
} from "./chunk-LXXF7K7W.js";
import {
  c
} from "./chunk-SBW6NNVI.js";
import {
  e
} from "./chunk-62CXLI6S.js";

// node_modules/@arcgis/core/layers/mixins/ArcGISCachedService.js
var p = (p2) => {
  let n = class extends p2 {
    constructor() {
      super(...arguments), this.copyright = null, this.minScale = 0, this.maxScale = 0, this.spatialReference = null, this.tileInfo = null, this.tilemapCache = null;
    }
    destroy() {
      var _a, _b;
      (_b = (_a = this.tilemapCache) == null ? void 0 : _a.destroy) == null ? void 0 : _b.call(_a);
    }
    readMinScale(e3, o2) {
      return null != o2.minLOD && null != o2.maxLOD ? e3 : 0;
    }
    readMaxScale(e3, o2) {
      return null != o2.minLOD && null != o2.maxLOD ? e3 : 0;
    }
    get supportsBlankTile() {
      return this.version >= 10.2;
    }
    readTilemapCache(e3, o2, r) {
      var _a;
      const t = (_a = o2.capabilities) == null ? void 0 : _a.includes("Tilemap");
      let { minLOD: a, maxLOD: p3, minScale: n2, maxScale: c2 } = o2;
      if (null == a && null == p3 && 0 !== n2 && 0 !== c2) {
        const e4 = (e5) => Math.round(1e4 * e5) / 1e4;
        n2 = e4(n2 || o2.tileInfo.lods[0].scale), c2 = e4(c2 || o2.tileInfo.lods[o2.tileInfo.lods.length - 1].scale);
        for (const r2 of o2.tileInfo.lods) {
          const o3 = e4(r2.scale);
          a = o3 >= n2 ? r2.level : a, p3 = o3 >= c2 ? r2.level : p3;
        }
      }
      if (t)
        return new T({ layer: this, minLOD: a, maxLOD: p3 });
      if (o2.tileInfo) {
        const e4 = new j();
        return e4.read(o2.tileInfo, r), new e2(e4, a, p3);
      }
      return null;
    }
  };
  return e([y({ json: { read: { source: "copyrightText" } } })], n.prototype, "copyright", void 0), e([y()], n.prototype, "minScale", void 0), e([o("service", "minScale")], n.prototype, "readMinScale", null), e([y()], n.prototype, "maxScale", void 0), e([o("service", "maxScale")], n.prototype, "readMaxScale", null), e([y({ type: f })], n.prototype, "spatialReference", void 0), e([y({ readOnly: true })], n.prototype, "supportsBlankTile", null), e([y({ type: j })], n.prototype, "tileInfo", void 0), e([y()], n.prototype, "tilemapCache", void 0), e([o("service", "tilemapCache", ["capabilities", "tileInfo"])], n.prototype, "readTilemapCache", null), e([y()], n.prototype, "version", void 0), n = e([c("esri.layers.mixins.ArcGISCachedService")], n), n;
};

export {
  p
};
//# sourceMappingURL=chunk-IF5GYWGE.js.map
