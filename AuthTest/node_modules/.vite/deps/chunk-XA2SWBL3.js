import {
  Fe,
  Ie,
  ge
} from "./chunk-GAWSWBHO.js";
import {
  E,
  I,
  g,
  i,
  j,
  k,
  x
} from "./chunk-KBJ5Z4R2.js";

// node_modules/@arcgis/core/smartMapping/support/utils.js
var y = { years: 365, months: 30, days: 1, hours: 1 / 24, minutes: 1 / 1440, seconds: 1 / 86400, milliseconds: 1 / 864e5 };
function Z(t) {
  return ge(t) || Fe(t) || Ie(t);
}
function N(s, o) {
  const { format: a, timeZoneOptions: c, fieldType: l } = o ?? {};
  let d, u;
  if (c && ({ timeZone: d, timeZoneName: u } = g(c.layerTimeZone, c.datesInUnknownTimezone, c.viewTimeZone, E(a || "short-date-short-time"), l)), "string" == typeof s && isNaN(Date.parse("time-only" === l ? `1970-01-01T${s}Z` : s)))
    return s;
  switch (l) {
    case "date-only": {
      const r = E(a || "short-date");
      return "string" == typeof s ? k(s, { ...r }) : j(s, { ...r, timeZone: i });
    }
    case "time-only": {
      const r = E(a || "short-time");
      return "string" == typeof s ? I(s, r) : j(s, { ...r, timeZone: i });
    }
    case "timestamp-offset": {
      if (!d && "string" == typeof s && new Date(s).toISOString() !== s)
        return s;
      const i3 = a || c ? E(a || "short-date-short-time") : void 0, n = i3 ? { ...i3, timeZone: d, timeZoneName: u } : void 0;
      return "string" == typeof s ? x(s, n) : j(s, n);
    }
    default: {
      const r = a || c ? E(a || "short-date-short-time") : void 0;
      return j("string" == typeof s ? new Date(s) : s, r ? { ...r, timeZone: d, timeZoneName: u } : void 0);
    }
  }
}

export {
  Z,
  N
};
//# sourceMappingURL=chunk-XA2SWBL3.js.map
