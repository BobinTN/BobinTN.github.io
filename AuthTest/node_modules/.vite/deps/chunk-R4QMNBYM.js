import {
  B,
  O
} from "./chunk-JYYKU27J.js";
import {
  e as e2,
  r as r2
} from "./chunk-SKLWU2B3.js";
import {
  e
} from "./chunk-2RN2AAP7.js";
import {
  n as n2
} from "./chunk-AMSVADDY.js";
import {
  l as l2
} from "./chunk-DXAIPMHS.js";
import {
  E,
  J,
  c,
  f2 as f,
  g,
  l2 as l,
  m,
  n,
  o,
  q,
  r2 as r,
  s,
  t,
  u2 as u
} from "./chunk-YTH6VA7N.js";

// node_modules/@arcgis/core/views/3d/support/orientedBoundingBox.js
var V = e2();
var C = n();
var D = n();
var E2 = n2();
var F = e();
function H(e4 = [0, 0, 0], t2 = [-1, -1, -1], n3 = e2()) {
  return { center: t(e4), halfSize: t(t2), quaternion: r2(n3) };
}
var Y2 = (() => {
  const e4 = new Int8Array(162);
  let t2 = 0;
  const n3 = (n4) => {
    for (let a = 0; a < n4.length; a++)
      e4[t2 + a] = n4[a];
    t2 += 6;
  };
  return n3([6, 2, 3, 1, 5, 4]), n3([0, 2, 3, 1, 5, 4]), n3([0, 2, 3, 7, 5, 4]), n3([0, 1, 3, 2, 6, 4]), n3([0, 1, 3, 2, 0, 0]), n3([0, 1, 5, 7, 3, 2]), n3([0, 1, 3, 7, 6, 4]), n3([0, 1, 3, 7, 6, 2]), n3([0, 1, 5, 7, 6, 2]), n3([0, 1, 5, 4, 6, 2]), n3([0, 1, 5, 4, 0, 0]), n3([0, 1, 3, 7, 5, 4]), n3([0, 2, 6, 4, 0, 0]), n3([0, 0, 0, 0, 0, 0]), n3([1, 3, 7, 5, 0, 0]), n3([2, 3, 7, 6, 4, 0]), n3([2, 3, 7, 6, 0, 0]), n3([2, 3, 1, 5, 7, 6]), n3([0, 1, 5, 7, 6, 2]), n3([0, 1, 5, 7, 6, 4]), n3([0, 1, 3, 7, 6, 4]), n3([4, 5, 7, 6, 2, 0]), n3([4, 5, 7, 6, 0, 0]), n3([4, 5, 1, 3, 7, 6]), n3([0, 2, 3, 7, 5, 4]), n3([6, 2, 3, 7, 5, 4]), n3([6, 2, 3, 1, 5, 4]), e4;
})();
function ee(e4, t2, n3, i2, o3) {
  if (B(o3.quaternion, e4.quaternion), i2 === l2.Global) {
    O(re, e4.quaternion), E(te, e4.center, re), f(ne, te), m(ae, ne, e4.halfSize), J(ae, ne, ae);
    const a = s(ae);
    u(ae, ne, e4.halfSize);
    const i3 = s(ae);
    if (a < n3)
      r(o3.center, e4.center), o(te, n3, n3, n3), u(o3.halfSize, e4.halfSize, te);
    else {
      const r3 = i3 > 0 ? 1 + t2 / i3 : 1, s3 = a > 0 ? 1 + n3 / a : 1, c2 = (s3 + r3) / 2, h = (s3 - r3) / 2;
      g(o3.halfSize, ne, h), q(o3.halfSize, o3.halfSize, e4.halfSize, c2), g(o3.center, ne, c2), q(o3.center, o3.center, e4.halfSize, h), l(te, te), c(o3.center, o3.center, te), E(o3.center, o3.center, o3.quaternion);
    }
  } else {
    const a = o(te, 0, 0, 1);
    q(o3.center, e4.center, a, (n3 + t2) / 2), O(re, e4.quaternion), E(a, a, re), f(a, a), q(o3.halfSize, e4.halfSize, a, (n3 - t2) / 2);
  }
  return o3;
}
var te = n();
var ne = n();
var ae = n();
var re = e2();

export {
  H,
  ee
};
//# sourceMappingURL=chunk-R4QMNBYM.js.map
