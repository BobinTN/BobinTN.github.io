import {
  j as j2
} from "./chunk-O2KD3APD.js";
import "./chunk-WK4UDTKV.js";
import {
  E as E2
} from "./chunk-RC6N7ZK6.js";
import "./chunk-ZKKM4KJT.js";
import "./chunk-LXYMQMWX.js";
import "./chunk-XJLKESB7.js";
import "./chunk-QLCCKKQG.js";
import {
  v,
  y as y4
} from "./chunk-JYYKU27J.js";
import {
  e as e4
} from "./chunk-SKLWU2B3.js";
import "./chunk-2RN2AAP7.js";
import "./chunk-673OQ2U7.js";
import "./chunk-DT2VHQBL.js";
import {
  i as i4
} from "./chunk-TKJNJ6KH.js";
import {
  l
} from "./chunk-36R5EC6A.js";
import {
  p
} from "./chunk-AYCE4MD7.js";
import {
  j
} from "./chunk-KQ7MCWUF.js";
import {
  t
} from "./chunk-PIEUUBJ5.js";
import {
  u as u4
} from "./chunk-OTTMOIDW.js";
import {
  m
} from "./chunk-P5GW5DPX.js";
import {
  c as c3,
  d as d2
} from "./chunk-WDO2BXGR.js";
import "./chunk-VA52CKTT.js";
import "./chunk-T3Y5GTKO.js";
import {
  y as y3
} from "./chunk-XN6LAULS.js";
import "./chunk-RP5SAUAF.js";
import "./chunk-6B7VJB6C.js";
import {
  s as s5
} from "./chunk-JIDGV6CL.js";
import "./chunk-BADPOP5P.js";
import {
  b
} from "./chunk-WETX22HQ.js";
import {
  k
} from "./chunk-DCYI44X2.js";
import "./chunk-JHJVOI7Q.js";
import "./chunk-S6NERLXF.js";
import {
  u as u3
} from "./chunk-G557TGXY.js";
import "./chunk-WOGT6UK2.js";
import "./chunk-BEALJUHO.js";
import {
  n
} from "./chunk-GRHSIT57.js";
import "./chunk-PJQIAD5D.js";
import "./chunk-GAWSWBHO.js";
import "./chunk-SZAJDZCO.js";
import "./chunk-3DSKWYU4.js";
import "./chunk-ZZYUEH57.js";
import "./chunk-VTWXDFFD.js";
import "./chunk-IPCIO3PX.js";
import {
  i as i3
} from "./chunk-WJ4LS3YG.js";
import "./chunk-V2RPSCV3.js";
import {
  y as y2
} from "./chunk-AOJ6OCPK.js";
import {
  m as m2
} from "./chunk-LMT5JII2.js";
import "./chunk-A43TI6AT.js";
import "./chunk-2D3PORS4.js";
import "./chunk-4HKQSEUR.js";
import "./chunk-V3U4F2NL.js";
import "./chunk-ZB6PGKG5.js";
import "./chunk-OIIDE5GZ.js";
import "./chunk-3XSRVKBX.js";
import "./chunk-WYBZLWIA.js";
import {
  i as i2,
  s as s4
} from "./chunk-MKW4ORPJ.js";
import {
  E,
  c as c2,
  e as e2,
  e2 as e3,
  i,
  n as n2,
  r,
  r2 as r3,
  u2,
  z
} from "./chunk-YTH6VA7N.js";
import {
  r as r2,
  u
} from "./chunk-GINTRQSD.js";
import "./chunk-APYNYYQC.js";
import "./chunk-6TJWLWLO.js";
import "./chunk-H7BKONNV.js";
import "./chunk-K6C6RVSV.js";
import "./chunk-KBJ5Z4R2.js";
import {
  V
} from "./chunk-JUZJCTW2.js";
import "./chunk-423VNHLR.js";
import "./chunk-FN47E7YK.js";
import "./chunk-XZS3Q5K4.js";
import "./chunk-WZPOQGKL.js";
import "./chunk-CCXEAKIM.js";
import {
  M
} from "./chunk-Y5D433JZ.js";
import {
  x2 as x
} from "./chunk-QNOCEWCR.js";
import {
  o
} from "./chunk-WURET5CW.js";
import {
  f as f2
} from "./chunk-QWPLZ3QH.js";
import {
  d2 as d
} from "./chunk-HLGIRLYQ.js";
import "./chunk-N2K4VRZH.js";
import "./chunk-WL4VPODY.js";
import {
  s as s3
} from "./chunk-OMPEZIP5.js";
import "./chunk-EUTNDAIV.js";
import "./chunk-SJZIFARA.js";
import "./chunk-R5DM4YAB.js";
import {
  f
} from "./chunk-NSRXJNTS.js";
import {
  y2 as y
} from "./chunk-LXXF7K7W.js";
import {
  T,
  a2 as a3,
  c
} from "./chunk-SBW6NNVI.js";
import {
  e
} from "./chunk-62CXLI6S.js";
import {
  a as a2
} from "./chunk-RFPH3ZTZ.js";
import "./chunk-WGO3VFQP.js";
import "./chunk-CQS47VN5.js";
import {
  a,
  s2 as s,
  s3 as s2
} from "./chunk-WJ3HJKNC.js";
import "./chunk-4V6374PV.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/layers/voxel/voxelPlaneUtils.js
var h = n2();
var i5 = e4();
var p2 = e4();
var e5 = e4();
var j3 = r(0, 0, 1);
var k2 = r(0, 1, 0);
var v2 = r(1, 0, 0);
function q(a8) {
  r3(h, a8), z(h, h);
  const n3 = Math.atan2(h[1], h[0]), o2 = v(e4(), j3, -n3);
  E(h, h, o2);
  const r4 = -1 * Math.atan2(h[2], h[0]);
  return [u(n3) + 270, u(r4) + 90];
}
function M2(t6, n3) {
  return v(p2, j3, r2(t6 - 270)), v(e5, k2, r2(n3 - 90)), y4(i5, p2, e5), r3(h, v2), E(h, h, i5), z(h, h), [h[0], h[1], h[2]];
}

// node_modules/@arcgis/core/layers/voxel/VoxelSlice.js
var m3 = class extends i3(f) {
  constructor(t6) {
    super(t6), this.enabled = true, this.label = "", this.normal = null, this.point = null;
  }
  get orientation() {
    if (!Array.isArray(this.normal) || 3 !== this.normal.length)
      return 0;
    const [t6, o2] = q(this.normal);
    return s5.normalize(a3(t6), 0, true);
  }
  set orientation(t6) {
    const o2 = M2(t6, this.tilt);
    this._set("normal", o2), this._set("orientation", t6);
  }
  get tilt() {
    if (!Array.isArray(this.normal) || 3 !== this.normal.length)
      return 0;
    const [t6, o2] = q(this.normal);
    return s5.normalize(a3(o2), 0, true);
  }
  set tilt(t6) {
    const o2 = M2(this.orientation, t6);
    this._set("normal", o2), this._set("tilt", t6);
  }
};
e([y({ type: Boolean, json: { write: true } })], m3.prototype, "enabled", void 0), e([y({ type: String, json: { write: true } })], m3.prototype, "label", void 0), e([y({ type: Number, json: { read: false }, clonable: false, range: { min: 0, max: 360 } }), s3((t6) => s5.normalize(a3(t6), 0, true))], m3.prototype, "orientation", null), e([y({ type: Number, json: { read: false }, clonable: false, range: { min: 0, max: 360 } }), s3((t6) => s5.normalize(a3(t6), 0, true))], m3.prototype, "tilt", null), e([y({ type: [Number], json: { write: true } })], m3.prototype, "normal", void 0), e([y({ type: [Number], json: { write: true } })], m3.prototype, "point", void 0), m3 = e([c("esri.layers.voxel.VoxelSlice")], m3);
var c4 = m3;

// node_modules/@arcgis/core/layers/voxel/VoxelSection.js
var d3 = class extends i3(f) {
  constructor() {
    super(...arguments), this.enabled = true, this.href = null, this.id = null, this.label = "", this.normal = null, this.point = null, this.sizeInPixel = null, this.slices = null, this.timeId = 0, this.variableId = null;
  }
  get orientation() {
    if (!Array.isArray(this.normal) || 3 !== this.normal.length)
      return 0;
    const [e6, r4] = q(this.normal);
    return s5.normalize(a3(e6), 0, true);
  }
  get tilt() {
    if (!Array.isArray(this.normal) || 3 !== this.normal.length)
      return 0;
    const [e6, r4] = q(this.normal);
    return s5.normalize(a3(r4), 0, true);
  }
};
e([y({ type: Boolean, json: { default: true, write: true } })], d3.prototype, "enabled", void 0), e([y({ type: String, json: { origins: { service: { read: m2 } }, write: { enabled: true, isRequired: true } } }), j2({ origins: ["web-scene"], type: "resource", prefix: "sections", compress: true })], d3.prototype, "href", void 0), e([y({ type: T, json: { write: { enabled: true, isRequired: true } } })], d3.prototype, "id", void 0), e([y({ type: String, json: { write: true } })], d3.prototype, "label", void 0), e([y({ type: Number, clonable: false, readOnly: true, range: { min: 0, max: 360 } })], d3.prototype, "orientation", null), e([y({ type: Number, clonable: false, readOnly: true, range: { min: 0, max: 360 } })], d3.prototype, "tilt", null), e([y({ type: [Number], json: { write: { enabled: true, isRequired: true } } })], d3.prototype, "normal", void 0), e([y({ type: [Number], json: { write: { enabled: true, isRequired: true } } })], d3.prototype, "point", void 0), e([y({ type: [T], json: { write: { enabled: true, isRequired: true } } })], d3.prototype, "sizeInPixel", void 0), e([y({ type: [c4], json: { write: true } })], d3.prototype, "slices", void 0), e([y({ type: T, json: { default: 0, write: true } })], d3.prototype, "timeId", void 0), e([y({ type: T, json: { write: { enabled: true, isRequired: true } } })], d3.prototype, "variableId", void 0), d3 = e([c("esri.layers.voxel.VoxelSection")], d3);
var u5 = d3;

// node_modules/@arcgis/core/layers/voxel/VoxelSimpleShading.js
var t2 = class extends f {
  constructor() {
    super(...arguments), this.diffuseFactor = 0.5, this.specularFactor = 0.5;
  }
};
e([y({ type: Number, range: { min: 0, max: 1 }, json: { default: 0.5, write: true } })], t2.prototype, "diffuseFactor", void 0), e([y({ type: Number, range: { min: 0, max: 1 }, json: { default: 0.5, write: true } })], t2.prototype, "specularFactor", void 0), t2 = e([c("esri.layers.voxel.VoxelSimpleShading")], t2);
var p3 = t2;

// node_modules/@arcgis/core/layers/voxel/VoxelFormat.js
var s6 = class extends f {
  constructor() {
    super(...arguments), this.continuity = null, this.hasNoData = false, this.noData = 0, this.offset = 0, this.scale = 1, this.type = null;
  }
};
e([y({ type: ["discrete", "continuous"], json: { write: true } })], s6.prototype, "continuity", void 0), e([y({ type: Boolean, json: { write: true } })], s6.prototype, "hasNoData", void 0), e([y({ type: Number, json: { write: true } })], s6.prototype, "noData", void 0), e([y({ type: Number, json: { write: true } })], s6.prototype, "offset", void 0), e([y({ type: Number, json: { write: true } })], s6.prototype, "scale", void 0), e([y({ type: String, json: { write: { enabled: true, isRequired: true } } })], s6.prototype, "type", void 0), s6 = e([c("esri.layers.voxel.VoxelFormat")], s6);
var p4 = s6;

// node_modules/@arcgis/core/layers/voxel/VoxelVariable.js
var i6 = class extends f {
  constructor() {
    super(...arguments), this.id = null, this.description = "", this.name = null, this.originalFormat = null, this.renderingFormat = null, this.unit = "", this.volumeId = 0, this.type = null;
  }
};
e([y({ type: Number, json: { write: { enabled: true, isRequired: true } } })], i6.prototype, "id", void 0), e([y({ type: String, json: { write: true } })], i6.prototype, "description", void 0), e([y({ type: String, json: { write: { enabled: true, isRequired: true } } })], i6.prototype, "name", void 0), e([y({ type: p4, json: { write: true } })], i6.prototype, "originalFormat", void 0), e([y({ type: p4, json: { write: { enabled: true, isRequired: true } } })], i6.prototype, "renderingFormat", void 0), e([y({ type: String, json: { write: true } })], i6.prototype, "unit", void 0), e([y({ type: Number, json: { write: true } })], i6.prototype, "volumeId", void 0), e([y({ type: ["stc-hot-spot-results", "stc-cluster-outlier-results", "stc-estimated-bin", "generic-nearest-interpolated"], json: { write: true } })], i6.prototype, "type", void 0), i6 = e([c("esri.layers.voxel.VoxelVariable")], i6);
var p5 = i6;

// node_modules/@arcgis/core/layers/voxel/VoxelIsosurface.js
var l2 = class extends i3(f) {
  constructor() {
    super(...arguments), this.color = u3.fromArray([0, 0, 0, 0]), this.value = 0, this.enabled = true, this.label = "", this.colorLocked = false;
  }
};
e([y({ type: u3, json: { type: [T], write: { enabled: true, isRequired: true } } })], l2.prototype, "color", void 0), e([y({ type: Number, json: { write: { enabled: true, isRequired: true } } })], l2.prototype, "value", void 0), e([y({ type: Boolean, json: { default: true, write: true } })], l2.prototype, "enabled", void 0), e([y({ type: String, json: { write: true } })], l2.prototype, "label", void 0), e([y({ type: Boolean, json: { default: false, write: true } })], l2.prototype, "colorLocked", void 0), l2 = e([c("esri.layers.voxel.VoxelIsosurface")], l2);
var a4 = l2;

// node_modules/@arcgis/core/layers/voxel/VoxelColorStop.js
var c5 = class extends i3(f) {
  constructor() {
    super(...arguments), this.color = null, this.position = 0;
  }
};
e([y({ type: u3, json: { type: [T], write: { enabled: true, isRequired: true } } })], c5.prototype, "color", void 0), e([y({ type: Number, json: { write: { enabled: true, isRequired: true } } })], c5.prototype, "position", void 0), c5 = e([c("esri.layers.voxel.VoxelColorStop")], c5);
var l3 = c5;

// node_modules/@arcgis/core/layers/voxel/VoxelOpacityStop.js
var p6 = class extends i3(f) {
  constructor() {
    super(...arguments), this.opacity = 1, this.position = 0;
  }
};
e([y({ type: Number, json: { name: "alpha", write: { enabled: true, isRequired: true } } })], p6.prototype, "opacity", void 0), e([y({ type: Number, json: { write: { enabled: true, isRequired: true } } })], p6.prototype, "position", void 0), p6 = e([c("esri.layers.voxel.VoxelOpacityStop")], p6);
var i7 = p6;

// node_modules/@arcgis/core/layers/voxel/VoxelRangeFilter.js
var p7 = class extends i3(f) {
  constructor() {
    super(...arguments), this.enabled = false, this.range = null;
  }
};
e([y({ type: Boolean, json: { default: false, write: true } })], p7.prototype, "enabled", void 0), e([y({ type: [Number], json: { write: true } })], p7.prototype, "range", void 0), p7 = e([c("esri.layers.voxel.VoxelRangeFilter")], p7);
var a5 = p7;

// node_modules/@arcgis/core/layers/voxel/VoxelTransferFunctionStyle.js
var u6;
!function(o2) {
  o2[o2.Color = 1] = "Color", o2[o2.Alpha = 2] = "Alpha", o2[o2.Both = 3] = "Both";
}(u6 || (u6 = {}));
var y5 = class extends i3(f) {
  constructor(o2) {
    super(o2), this.interpolation = null, this.stretchRange = null, this.rangeFilter = null, this._colorMapSize = 256, this.colorStops = new (V.ofType(l3))(), this.opacityStops = new (V.ofType(i7))();
  }
  set colorStops(o2) {
    this._set("colorStops", n(o2, this._get("colorStops"), V.ofType(l3)));
  }
  set opacityStops(o2) {
    this._set("opacityStops", n(o2, this._get("opacityStops"), V.ofType(i7)));
  }
  getPreviousNext(o2, t6, r4) {
    let e6 = o2;
    for (; --e6 > 0 && t6[e6].type !== r4 && t6[e6].type !== u6.Both; )
      ;
    let s8 = o2;
    const i8 = t6.length;
    for (; ++s8 < i8 && t6[s8].type !== r4 && t6[s8].type !== u6.Both; )
      ;
    return [e6, s8];
  }
  get rasterizedTransferFunction() {
    const o2 = [];
    if (this.colorStops.length < 2)
      return o2;
    const r4 = [], e6 = [], s8 = 1e-5;
    for (const t6 of this.colorStops) {
      if (!t6.color)
        return o2;
      e6.push({ color: { r: t6.color.r, g: t6.color.g, b: t6.color.b, a: Math.round(255 * (1 - t6.color.a)) }, position: t6.position, type: u6.Color });
    }
    if (0 === this.opacityStops.length)
      for (const t6 of e6)
        r4.push({ color: t6.color, position: t6.position });
    else {
      for (const t6 of this.opacityStops) {
        const o4 = i2(t6.position, 0, 1), r5 = Math.round(255 * i2(1 - t6.opacity, 0, 1));
        let i9 = false;
        for (const t7 of e6)
          if (t7.type === u6.Color && Math.abs(t7.position - o4) < s8) {
            t7.color.a = r5, t7.type = u6.Both, i9 = true;
            break;
          }
        i9 || e6.push({ color: { r: 0, g: 0, b: 0, a: r5 }, position: t6.position, type: u6.Alpha });
      }
      e6.sort((o4, t6) => o4.position < t6.position ? -1 : 1);
      const o3 = e6.length;
      for (let t6 = 0; t6 < o3; ++t6) {
        const r5 = e6[t6];
        if (r5.type !== u6.Both)
          if (r5.type === u6.Color) {
            const [s9, i9] = this.getPreviousNext(t6, e6, u6.Alpha);
            if (-1 !== s9 && i9 !== o3) {
              const o4 = (r5.position - e6[s9].position) / (e6[i9].position - e6[s9].position);
              r5.color.a = Math.round(s4(e6[s9].color.a, e6[i9].color.a, o4));
            } else
              r5.color.a = -1 !== s9 ? e6[s9].color.a : e6[i9].color.a;
          } else {
            const [s9, i9] = this.getPreviousNext(t6, e6, u6.Color);
            if (-1 !== s9 && i9 !== o3) {
              const o4 = (r5.position - e6[s9].position) / (e6[i9].position - e6[s9].position), t7 = e6[s9].color, p14 = e6[i9].color;
              g.forEach((e7) => {
                r5.color[e7] = Math.round(s4(t7[e7], p14[e7], o4));
              });
            } else
              -1 !== s9 ? g.forEach((o4) => {
                r5.color[o4] = e6[s9].color[o4];
              }) : g.forEach((o4) => {
                r5.color[o4] = e6[i9].color[o4];
              });
          }
      }
      for (const t6 of e6)
        r4.push({ color: t6.color, position: t6.position });
    }
    r4[0].position = 0, r4[r4.length - 1].position = 1;
    let i8 = 0, l5 = 1;
    for (let c8 = 0; c8 < this._colorMapSize; ++c8) {
      const e7 = c8 / this._colorMapSize;
      for (; e7 > r4[l5].position; )
        i8 = l5++;
      const s9 = (e7 - r4[i8].position) / (r4[l5].position - r4[i8].position), a8 = r4[i8].color, h2 = r4[l5].color, f5 = new u3();
      g.forEach((o3) => {
        f5[o3] = Math.round(s4(a8[o3], h2[o3], s9));
      }), f5.a = i2(1 - s4(a8.a, h2.a, s9) / 255, 0, 1), o2.push(f5);
    }
    return o2;
  }
  getColorForContinuousDataValue(o2, t6) {
    const r4 = this.rasterizedTransferFunction;
    if (this.colorStops.length < 2 || !Array.isArray(this.stretchRange) || this.stretchRange.length < 2 || r4.length < 256)
      return null;
    let e6 = this.stretchRange[0], s8 = this.stretchRange[1];
    if (e6 > s8) {
      const o3 = e6;
      e6 = s8, s8 = o3;
    }
    o2 = i2(o2, e6, s8);
    const i8 = r4[Math.round((o2 - e6) / (s8 - e6) * (this._colorMapSize - 1))].clone();
    return t6 || (i8.a = 1), i8;
  }
};
e([y({ type: ["linear", "nearest"], json: { write: true } })], y5.prototype, "interpolation", void 0), e([y({ type: [Number], json: { write: { enabled: true, isRequired: true } } })], y5.prototype, "stretchRange", void 0), e([y({ type: V.ofType(l3), json: { write: { enabled: true, overridePolicy() {
  return { enabled: !!this.colorStops && this.colorStops.length > 0 };
} } } })], y5.prototype, "colorStops", null), e([y({ type: V.ofType(i7), json: { read: { source: "alphaStops" }, write: { enabled: true, target: "alphaStops", overridePolicy() {
  return { enabled: !!this.opacityStops && this.opacityStops.length > 0 };
} } } })], y5.prototype, "opacityStops", null), e([y({ type: a5, json: { write: true } })], y5.prototype, "rangeFilter", void 0), e([y({ type: [u3], clonable: false, json: { read: false } })], y5.prototype, "rasterizedTransferFunction", null), y5 = e([c("esri.layers.voxel.VoxelTransferFunctionStyle")], y5);
var S = y5;
var g = ["r", "g", "b"];

// node_modules/@arcgis/core/layers/voxel/VoxelUniqueValue.js
var a6 = class extends i3(f) {
  constructor() {
    super(...arguments), this.color = u3.fromArray([0, 0, 0, 0]), this.value = 0, this.enabled = true, this.label = "";
  }
};
e([y({ type: u3, json: { type: [T], write: { enabled: true, isRequired: true } } })], a6.prototype, "color", void 0), e([y({ type: T, json: { write: { enabled: true, isRequired: true } } })], a6.prototype, "value", void 0), e([y({ type: Boolean, json: { default: true, write: true } })], a6.prototype, "enabled", void 0), e([y({ type: String, json: { write: true } })], a6.prototype, "label", void 0), a6 = e([c("esri.layers.voxel.VoxelUniqueValue")], a6);
var l4 = a6;

// node_modules/@arcgis/core/layers/voxel/VoxelVariableStyle.js
var p8;
var c6 = p8 = class extends f {
  constructor(e6) {
    super(e6), this.variableId = 0, this.label = "", this.transferFunction = null, this.uniqueValues = null, this.isosurfaces = null, this.uniqueValues = new (V.ofType(l4))(), this.isosurfaces = new (V.ofType(a4))();
  }
  clone() {
    return new p8({ variableId: this.variableId, label: this.label, transferFunction: a(this.transferFunction), uniqueValues: a(this.uniqueValues), isosurfaces: a(this.isosurfaces) });
  }
};
e([y({ type: T, json: { write: { enabled: true, isRequired: true } } })], c6.prototype, "variableId", void 0), e([y({ type: String, json: { write: true } })], c6.prototype, "label", void 0), e([y({ type: S, json: { write: { enabled: true, overridePolicy() {
  return { enabled: !this.uniqueValues || this.uniqueValues.length < 1 };
} } } })], c6.prototype, "transferFunction", void 0), e([y({ type: V.ofType(l4), json: { write: { enabled: true, overridePolicy() {
  return { enabled: !!this.uniqueValues && this.uniqueValues.length > 0 };
} } } })], c6.prototype, "uniqueValues", void 0), e([y({ type: V.ofType(a4), json: { write: { enabled: true, overridePolicy() {
  const e6 = !this.uniqueValues || this.uniqueValues.length < 1, s8 = !!this.isosurfaces && this.isosurfaces.length > 0;
  return { enabled: e6 && s8 };
} } } })], c6.prototype, "isosurfaces", void 0), c6 = p8 = e([c("esri.layers.voxel.VoxelVariableStyle")], c6);
var f3 = c6;

// node_modules/@arcgis/core/layers/voxel/VoxelIrregularSpacing.js
var t3 = class extends f {
  constructor() {
    super(...arguments), this.values = null;
  }
};
e([y({ type: [Number], json: { write: true } })], t3.prototype, "values", void 0), t3 = e([c("esri.layers.voxel.VoxelIrregularSpacing")], t3);
var p9 = t3;

// node_modules/@arcgis/core/layers/voxel/VoxelRegularSpacing.js
var t4 = class extends f {
  constructor() {
    super(...arguments), this.scale = 1, this.offset = 0;
  }
};
e([y({ type: Number, json: { write: true } })], t4.prototype, "scale", void 0), e([y({ type: Number, json: { write: true } })], t4.prototype, "offset", void 0), t4 = e([c("esri.layers.voxel.VoxelRegularSpacing")], t4);
var p10 = t4;

// node_modules/@arcgis/core/layers/voxel/VoxelDimension.js
var p11 = class extends f {
  constructor() {
    super(...arguments), this.irregularSpacing = null, this.isPositiveUp = true, this.isWrappedDateLine = false, this.label = null, this.name = null, this.quantity = null, this.regularSpacing = null, this.size = 0, this.unit = null;
  }
  get isRegular() {
    return (null == this.irregularSpacing || void 0 === this.irregularSpacing) && null !== this.regularSpacing;
  }
  getRange() {
    var _a;
    return this.isRegular ? [this.regularSpacing.offset, this.regularSpacing.offset + this.regularSpacing.scale * (this.size - 1)] : Array.isArray((_a = this.irregularSpacing) == null ? void 0 : _a.values) && this.irregularSpacing.values.length > 1 ? [this.irregularSpacing.values[0], this.irregularSpacing.values[this.irregularSpacing.values.length - 1]] : [0, 0];
  }
};
e([y({ type: p9, json: { write: true } })], p11.prototype, "irregularSpacing", void 0), e([y({ type: Boolean, json: { write: true } })], p11.prototype, "isPositiveUp", void 0), e([y({ type: Boolean, json: { write: true } })], p11.prototype, "isWrappedDateLine", void 0), e([y({ type: String, json: { write: true } })], p11.prototype, "label", void 0), e([y({ type: String, json: { write: true } })], p11.prototype, "name", void 0), e([y({ type: String, json: { write: true } })], p11.prototype, "quantity", void 0), e([y({ type: p10, json: { write: true } })], p11.prototype, "regularSpacing", void 0), e([y({ type: Number, json: { write: true } })], p11.prototype, "size", void 0), e([y({ type: String, json: { write: true } })], p11.prototype, "unit", void 0), e([y({ type: Boolean, json: { read: false } })], p11.prototype, "isRegular", null), p11 = e([c("esri.layers.voxel.VoxelDimension")], p11);
var a7 = p11;

// node_modules/@arcgis/core/layers/voxel/VoxelVolume.js
var y6 = "esri.layers.voxel.VoxelVolume";
var d4 = s.getLogger(y6);
var f4 = class extends f {
  constructor(e6) {
    super(e6), this.id = 0, this.dimensions = null, this.spatialReference = f2.WGS84;
  }
  get zDimension() {
    if (!this.dimensions)
      return -1;
    if (!Array.isArray(this.dimensions))
      return -1;
    if (4 !== this.dimensions.length)
      return -1;
    for (let e6 = 2; e6 < 4; ++e6)
      if (this.dimensions[e6].size > 0)
        return e6;
    return -1;
  }
  get isValid() {
    return !!this.dimensions && (!!Array.isArray(this.dimensions) && (4 === this.dimensions.length && (!(this.dimensions[0].size < 1 || this.dimensions[1].size < 1) && !(-1 === this.zDimension || this.dimensions[this.zDimension].size < 1))));
  }
  get originInLayerSpace3D() {
    if (!this.isValid || "xyt" === this.volumeType)
      return [0, 0, 0];
    const e6 = this.dimensions[0].getRange(), i8 = this.dimensions[1].getRange(), s8 = this.dimensions[2], r4 = s8.isRegular ? s8.getRange() : [0, s8.size];
    return [e6[0], i8[0], r4[0]];
  }
  get voxelSizeInLayerSpaceSigned() {
    if (!this.isValid || "xyt" === this.volumeType)
      return [0, 0, 0];
    const e6 = this.dimensions[0].getRange(), i8 = this.dimensions[1].getRange(), s8 = this.dimensions[2], r4 = s8.isRegular ? s8.getRange() : [0, s8.size], t6 = [this.sizeInVoxels[0], this.sizeInVoxels[1], this.sizeInVoxels[2]];
    for (let n3 = 0; n3 < 3; ++n3)
      t6[n3] < 2 ? t6[n3] = 1 : t6[n3] -= 1;
    return s8.isRegular && !s8.isPositiveUp && (t6[2] *= -1), [(e6[1] - e6[0]) / t6[0], (i8[1] - i8[0]) / t6[1], (r4[1] - r4[0]) / t6[2]];
  }
  get volumeType() {
    if (this.isValid) {
      const e6 = this.dimensions[2].size > 0, i8 = this.dimensions[3].size > 0;
      if (!e6 && i8)
        return "xyt";
      if (e6 && i8)
        return "xyzt";
    }
    return "xyz";
  }
  get sizeInVoxels() {
    if (!this.isValid)
      return [0, 0, 0];
    const e6 = this.zDimension;
    return [this.dimensions[0].size, this.dimensions[1].size, this.dimensions[e6].size];
  }
  computeVoxelSpaceLocation(e6) {
    var _a;
    if (!this.isValid)
      return [0, 0, 0];
    if ("xyt" === this.volumeType)
      return d4.error("computeVoxelSpacePosition cannot be used with XYT volumes."), [0, 0, 0];
    if (!d(this.spatialReference, e6.spatialReference))
      return d4.error("pos argument should have the same spatial reference as the VoxelLayer."), [0, 0, 0];
    const i8 = r(e6.x, e6.y, e6.z ?? 0);
    e3(i8, i8, this.originInLayerSpace3D), i(i8, i8, this.voxelSizeInLayerSpaceSigned);
    const s8 = this.dimensions[this.zDimension];
    if (!s8.isRegular && Array.isArray((_a = s8.irregularSpacing) == null ? void 0 : _a.values) && s8.irregularSpacing.values.length > 1) {
      const r4 = e6.z ?? 0, t6 = s8.irregularSpacing.values, n3 = s8.isPositiveUp ? 1 : -1, o2 = t6.reduce((e7, i9) => Math.abs(n3 * i9 - r4) < Math.abs(n3 * e7 - r4) ? i9 : e7);
      for (let e7 = 0; e7 < t6.length; ++e7)
        if (t6[e7] === o2) {
          i8[2] = e7;
          break;
        }
    }
    return [i8[0], i8[1], i8[2]];
  }
  computeLayerSpaceLocation(e6) {
    var _a;
    if (!this.isValid)
      return new x({ x: 0, y: 0, spatialReference: this.spatialReference });
    const i8 = e2(e6);
    if (c2(i8, i8, this.voxelSizeInLayerSpaceSigned), u2(i8, i8, this.originInLayerSpace3D), "xyt" === this.volumeType)
      return new x({ x: i8[0], y: i8[1], spatialReference: this.spatialReference });
    const s8 = this.dimensions[this.zDimension];
    return s8.isRegular || Array.isArray((_a = s8.irregularSpacing) == null ? void 0 : _a.values) && (e6[2] < 0 ? i8[2] = s8.irregularSpacing.values[0] : e6[2] < s8.irregularSpacing.values.length ? i8[2] = s8.irregularSpacing.values[e6[2]] : i8[2] = s8.irregularSpacing.values[s8.irregularSpacing.values.length - 1], s8.isPositiveUp || (i8[2] *= -1)), new x({ x: i8[0], y: i8[1], z: i8[2], spatialReference: this.spatialReference });
  }
};
e([y({ type: Number, json: { write: { enabled: true, isRequired: true } } })], f4.prototype, "id", void 0), e([y({ type: [a7], json: { write: { enabled: true, isRequired: true } } })], f4.prototype, "dimensions", void 0), e([y({ type: f2, json: { read: { enabled: false } } })], f4.prototype, "spatialReference", void 0), e([y({ type: Number, json: { read: false } })], f4.prototype, "zDimension", null), e([y({ type: [Boolean], json: { read: false } })], f4.prototype, "isValid", null), e([y({ type: [Number], json: { read: false } })], f4.prototype, "originInLayerSpace3D", null), e([y({ type: [Number], json: { read: false } })], f4.prototype, "voxelSizeInLayerSpaceSigned", null), e([y({ type: ["xyz", "xyzt", "xyt"], json: { read: { enabled: false } } })], f4.prototype, "volumeType", null), e([y({ type: [Number], json: { read: false } })], f4.prototype, "sizeInVoxels", null), f4 = e([c(y6)], f4);
var S2 = f4;

// node_modules/@arcgis/core/layers/voxel/VoxelVolumeIndex.js
var t5;
var s7 = t5 = class extends f {
  constructor() {
    super(...arguments), this.apronWidth = 1, this.brickSize = [32, 32, 32], this.maxLodLevel = 0, this.nodeSize = [4, 4, 4];
  }
  isValid() {
    const e6 = new t5();
    return e6.apronWidth === this.apronWidth && e6.maxLodLevel === this.maxLodLevel && (!!this.brickSize && (!!this.nodeSize && (!(!Array.isArray(this.brickSize) || !Array.isArray(this.nodeSize)) && (3 === this.brickSize.length && 3 === this.nodeSize.length && (32 === this.brickSize[0] && 32 === this.brickSize[1] && 32 === this.brickSize[2] && (4 === this.nodeSize[0] && 4 === this.nodeSize[1] && 4 === this.nodeSize[2]))))));
  }
};
e([y({ type: Number, json: { write: { enabled: true, isRequired: true } } })], s7.prototype, "apronWidth", void 0), e([y({ type: [Number], json: { write: { enabled: true, isRequired: true } } })], s7.prototype, "brickSize", void 0), e([y({ type: Number, json: { write: { enabled: true, isRequired: true } } })], s7.prototype, "maxLodLevel", void 0), e([y({ type: [Number], json: { write: { enabled: true, isRequired: true } } })], s7.prototype, "nodeSize", void 0), s7 = t5 = e([c("esri.layers.voxel.VoxelVolumeIndex")], s7);
var p12 = s7;

// node_modules/@arcgis/core/layers/voxel/VoxelDynamicSection.js
var m4 = class extends i3(f) {
  constructor(t6) {
    super(t6), this.enabled = true, this.label = "", this.normal = null, this.point = null;
  }
  get orientation() {
    if (!Array.isArray(this.normal) || 3 !== this.normal.length)
      return 0;
    const [t6, o2] = q(this.normal);
    return s5.normalize(a3(t6), 0, true);
  }
  set orientation(t6) {
    const o2 = M2(t6, this.tilt);
    this._set("normal", o2), this._set("orientation", t6);
  }
  get tilt() {
    if (!Array.isArray(this.normal) || 3 !== this.normal.length)
      return 0;
    const [t6, o2] = q(this.normal);
    return s5.normalize(a3(o2), 0, true);
  }
  set tilt(t6) {
    const o2 = M2(this.orientation, t6);
    this._set("normal", o2), this._set("tilt", t6);
  }
};
e([y({ type: Boolean, json: { default: true, write: true } })], m4.prototype, "enabled", void 0), e([y({ type: String, json: { write: true } })], m4.prototype, "label", void 0), e([y({ type: Number, json: { read: false }, clonable: false, range: { min: 0, max: 360 } }), s3((t6) => s5.normalize(a3(t6), 0, true))], m4.prototype, "orientation", null), e([y({ type: Number, json: { read: false }, clonable: false, range: { min: 0, max: 360 } }), s3((t6) => s5.normalize(a3(t6), 0, true))], m4.prototype, "tilt", null), e([y({ type: [Number], json: { write: true } })], m4.prototype, "normal", void 0), e([y({ type: [Number], json: { write: true } })], m4.prototype, "point", void 0), m4 = e([c("esri.layers.voxel.VoxelDynamicSection")], m4);
var c7 = m4;

// node_modules/@arcgis/core/layers/voxel/VoxelVolumeStyle.js
var p13;
var m5 = p13 = class extends f {
  constructor(e6) {
    super(e6), this.volumeId = 0, this.verticalExaggeration = 1, this.exaggerationMode = "scale-height", this.verticalOffset = 0, this.slices = new (V.ofType(c4))(), this.dynamicSections = new (V.ofType(c7))();
  }
  set slices(e6) {
    this._set("slices", n(e6, this._get("slices"), V.ofType(c4)));
  }
  set dynamicSections(e6) {
    this._set("dynamicSections", n(e6, this._get("dynamicSections"), V.ofType(c7)));
  }
  clone() {
    return new p13({ volumeId: this.volumeId, verticalExaggeration: this.verticalExaggeration, exaggerationMode: this.exaggerationMode, verticalOffset: this.verticalOffset, slices: a(this.slices), dynamicSections: a(this.dynamicSections) });
  }
};
e([y({ type: T, json: { write: { enabled: true, isRequired: true } } })], m5.prototype, "volumeId", void 0), e([y({ type: Number, json: { default: 1, write: true } })], m5.prototype, "verticalExaggeration", void 0), e([y({ type: ["scale-position", "scale-height"], json: { default: "scale-height", write: true } })], m5.prototype, "exaggerationMode", void 0), e([y({ type: Number, json: { default: 0, write: true } })], m5.prototype, "verticalOffset", void 0), e([y({ type: V.ofType(c4), json: { write: { enabled: true, overridePolicy() {
  return { enabled: !!this.slices && this.slices.length > 0 };
} } } })], m5.prototype, "slices", null), e([y({ type: V.ofType(c7), json: { write: { enabled: true, overridePolicy() {
  return { enabled: !!this.dynamicSections && this.dynamicSections.length > 0 };
} } } })], m5.prototype, "dynamicSections", null), m5 = p13 = e([c("esri.layers.voxel.VoxelVolumeStyle")], m5);
var d5 = m5;

// node_modules/@arcgis/core/layers/VoxelLayer.js
var A = "esri.layers.VoxelLayer";
var E3 = s.getLogger(A);
var R = class extends E2(l(u4(j(t(m(i4(b))))))) {
  constructor(e6) {
    super(e6), this.serviceRoot = "", this.operationalLayerType = "Voxel", this.legendEnabled = true, this.title = null, this.sections = null, this.currentVariableId = 0, this.volumeStyles = null, this.renderMode = "volume", this.variableStyles = null, this.enableSlices = true, this.enableSections = true, this.enableDynamicSections = true, this.enableIsosurfaces = true, this.shading = new p3(), this.opacity = 1, this.variables = new V(), this.volumes = new V(), this.index = null, this.minScale = 0, this.maxScale = 0, this.type = "voxel", this.version = { major: Number.NaN, minor: Number.NaN, versionString: "" }, this.fullExtent = null, this.popupEnabled = false, this.test = null, this.volumeStyles = new (V.ofType(d5))(), this.variableStyles = new (V.ofType(f3))(), this.sections = new (V.ofType(u5))();
  }
  normalizeCtorArgs(e6) {
    return (e6 == null ? void 0 : e6.constantUpscaling) && (this.test = { constantUpscaling: true }, delete e6.constantUpscaling), e6;
  }
  set url(e6) {
    this._set("url", y2(e6, E3));
  }
  load(e6) {
    const t6 = null != e6 ? e6.signal : null, i8 = this.loadFromPortal({ supportedTypes: ["Scene Service"] }, e6).catch(a2).then(() => this._fetchService(t6)).then(() => this.serviceRoot = this.url);
    return this.addResolvingPromise(i8), Promise.resolve(this);
  }
  read(e6, t6) {
    super.read(e6, t6);
    for (const i8 of this.volumes)
      i8.spatialReference = this.spatialReference;
  }
  readVersion(e6, t6) {
    return super.parseVersionString(e6);
  }
  validateLayer(e6) {
    if (e6.layerType && e6.layerType !== this.operationalLayerType)
      throw new s2("voxel-layer:layer-type-not-supported", "VoxelLayer does not support this layer type", { layerType: e6.layerType });
    if (isNaN(this.version.major) || isNaN(this.version.minor) || this.version.major < 3)
      throw new s2("layer:service-version-not-supported", "Service version is not supported.", { serviceVersion: this.version.versionString, supportedVersions: "3.x" });
    if (this.version.major > 3)
      throw new s2("layer:service-version-too-new", "Service version is too new.", { serviceVersion: this.version.versionString, supportedVersions: "3.x" });
  }
  readFullExtent(e6, t6, i8) {
    if (null != e6 && "object" == typeof e6) {
      const r4 = M.fromJSON(e6, i8);
      if (0 === r4.zmin && 0 === r4.zmax && Array.isArray(t6.volumes)) {
        const e7 = S2.fromJSON(t6.volumes[0]);
        if (e7.isValid && "xyt" !== e7.volumeType) {
          const t7 = e7.dimensions[2];
          if (t7.isRegular) {
            let e8 = t7.regularSpacing.offset, i9 = t7.regularSpacing.offset + t7.regularSpacing.scale * (t7.size - 1);
            if (e8 > i9) {
              const t8 = e8;
              e8 = i9, i9 = t8;
            }
            r4.zmin = e8, r4.zmax = i9;
          }
        }
      }
      return r4;
    }
    return null;
  }
  get voxelFields() {
    const e6 = [new y3({ name: "Voxel.ServiceValue", alias: "Value", domain: null, editable: false, length: 128, type: "string" }), new y3({ name: "Voxel.ServiceVariableLabel", alias: "Variable", domain: null, editable: false, length: 128, type: "string" }), new y3({ name: "Voxel.Position", alias: "Voxel Position", domain: null, editable: false, length: 128, type: "string" })], t6 = this.getVolume(null);
    if (null != t6) {
      if ("xyzt" === t6.volumeType || "xyt" === t6.volumeType) {
        const t7 = new y3({ name: "Voxel.ServiceLocalTime", alias: "Local Time", domain: null, editable: false, length: 128, type: "string" });
        e6.push(t7);
        const i8 = new y3({ name: "Voxel.ServiceNativeTime", alias: "Native Time", domain: null, editable: false, length: 128, type: "string" });
        e6.push(i8);
      }
      if ("xyt" !== t6.volumeType) {
        const t7 = new y3({ name: "Voxel.ServiceDepth", alias: "Depth", domain: null, editable: false, length: 128, type: "string" });
        e6.push(t7);
      }
    }
    return e6;
  }
  get popupTemplate() {
    return this.loaded ? this.createPopupTemplate() : null;
  }
  get defaultPopupTemplate() {
    return this.createPopupTemplate();
  }
  createPopupTemplate(e6) {
    const t6 = this.voxelFields, i8 = this.title;
    return p({ fields: t6, title: i8 }, e6);
  }
  getConfiguration() {
    var _a, _b;
    const e6 = { layerType: this.operationalLayerType, version: this.version.versionString, name: this.title, spatialReference: this.spatialReference, fullExtent: this.fullExtent, volumes: this.volumes.toJSON(), variables: this.variables.toJSON(), index: (_a = this.index) == null ? void 0 : _a.toJSON(), sections: this.getSections(), style: { volumeStyles: this.getVolumeStyles(), currentVariableId: this.currentVariableId, renderMode: this.renderMode, variableStyles: this.getVariableStyles(), enableSections: this.enableSections, enableDynamicSections: this.enableDynamicSections, enableIsosurfaces: this.enableIsosurfaces, enableSlices: this.enableSlices, shading: this.shading } };
    return e6.index && ((_b = this.index) == null ? void 0 : _b.isValid()) ? JSON.stringify(e6) : "";
  }
  getVariableStyle(e6) {
    let t6 = -1;
    t6 = null != e6 ? e6 : this.currentVariableId;
    if (!this.variableStyles || -1 === t6)
      return null;
    const i8 = this.variableStyles.findIndex((e7) => e7.variableId === t6);
    return i8 < 0 ? null : this.variableStyles.at(i8);
  }
  getVariable(e6) {
    let t6 = -1;
    if (t6 = null != e6 ? e6 : this.currentVariableId, !this.variables || -1 === t6)
      return null;
    const i8 = this.variables.findIndex((e7) => e7.id === t6);
    return i8 < 0 ? null : this.variables.at(i8);
  }
  getVolume(e6) {
    const t6 = this.getVariable(e6);
    return null != t6 ? this.volumes.find(({ id: e7 }) => e7 === t6.volumeId) : null;
  }
  getVolumeStyle(e6) {
    const t6 = this.getVariable(e6);
    return null != t6 ? this.volumeStyles.find(({ volumeId: e7 }) => e7 === t6.volumeId) : null;
  }
  getColorForContinuousDataValue(e6, t6, i8) {
    var _a;
    const r4 = this.getVariable(e6);
    if (null == r4 || "continuous" !== ((_a = r4.renderingFormat) == null ? void 0 : _a.continuity))
      return null;
    if (!this.variableStyles)
      return null;
    const o2 = this.variableStyles.findIndex((t7) => t7.variableId === e6);
    if (o2 < 0)
      return null;
    const s8 = this.variableStyles.at(o2);
    return (s8 == null ? void 0 : s8.transferFunction) ? s8.transferFunction.getColorForContinuousDataValue(t6, i8) : null;
  }
  getSections() {
    const e6 = [];
    for (const t6 of this.sections)
      e6.push(new u5({ enabled: t6.enabled, href: t6.href, id: t6.id, label: t6.label, normal: t6.normal, point: t6.point, sizeInPixel: t6.sizeInPixel, slices: t6.slices, timeId: t6.timeId, variableId: t6.variableId }));
    return e6;
  }
  getVariableStyles() {
    const e6 = [];
    for (const t6 of this.variableStyles) {
      const i8 = this._getVariable(t6);
      if (null != i8) {
        const r4 = t6.clone();
        r4.isosurfaces.length > 4 && (r4.isosurfaces = r4.isosurfaces.slice(0, 3), E3.error("A maximum of 4 isosurfaces are supported for Voxel Layers."));
        for (const e7 of r4.isosurfaces)
          if (!e7.colorLocked) {
            const t7 = this.getColorForContinuousDataValue(r4.variableId, e7.value, false);
            null === t7 || t7.equals(e7.color) || (e7.color = t7);
          }
        if ("continuous" === i8.renderingFormat.continuity)
          (null === r4.transferFunction || r4.transferFunction.colorStops.length < 2) && E3.error(`VoxelVariableStyle for variable ${i8.id} is invalid. At least 2 color stops are required in the transferFunction for continuous Voxel Layer variables.`), null !== r4.transferFunction && (Array.isArray(r4.transferFunction.stretchRange) && 2 === r4.transferFunction.stretchRange.length || (E3.error(`VoxelVariableStyle for variable ${i8.id} is invalid. The stretchRange of the transferFunction for continuous Voxel Layer variables must be of the form [minimumDataValue, maximumDataValue].`), r4.transferFunction.stretchRange = [0, 1], r4.transferFunction.colorStops.removeAll()));
        else if ("discrete" === i8.renderingFormat.continuity)
          if (0 === t6.uniqueValues.length)
            E3.error(`VoxelVariableStyle for variable ${i8.id} is invalid. Unique values are required for discrete Voxel Layer variables.`);
          else
            for (const e7 of t6.uniqueValues)
              null !== e7.label && void 0 !== e7.label || null === e7.value || void 0 === e7.value || (e7.label = e7.value.toString());
        e6.push(r4);
      } else
        E3.error(`VoxelVariable ID=${t6.variableId} doesn't exist, VoxelVariableStyle for this VoxelVariable will be ignored.`);
    }
    return e6;
  }
  getVolumeStyles() {
    const e6 = [];
    for (const t6 of this.volumeStyles) {
      const i8 = this._getVolumeFromVolumeId(t6.volumeId);
      if (null != i8) {
        const r4 = t6.clone();
        for (const e7 of r4.slices)
          this._isPlaneValid(e7, [0, 1, i8.zDimension], i8.dimensions) || (e7.enabled = false, e7.label = "invalid");
        for (const e7 of r4.dynamicSections)
          this._isPlaneValid(e7, [0, 1, i8.zDimension], i8.dimensions) || (e7.enabled = false, e7.label = "invalid");
        e6.push(r4);
      } else
        E3.error(`VoxelVolume ID=${t6.volumeId} doesn't exist, VoxelVolumeStyle for this VoxelVolume will be ignored.`);
    }
    return e6;
  }
  _getVariable(e6) {
    const t6 = e6.variableId;
    for (const i8 of this.variables)
      if (i8.id === t6)
        return i8;
    return null;
  }
  _getVolumeFromVolumeId(e6) {
    for (const t6 of this.volumes)
      if (t6.id === e6)
        return t6;
    return null;
  }
  _isPlaneValid(e6, t6, i8) {
    if (!e6.point)
      return false;
    if (!Array.isArray(e6.point) || 3 !== e6.point.length)
      return false;
    if (!e6.normal)
      return false;
    if (!Array.isArray(e6.normal) || 3 !== e6.normal.length)
      return false;
    const r4 = r(e6.normal[0], e6.normal[1], e6.normal[2]);
    z(r4, r4);
    const o2 = 1e-6;
    return !(Math.abs(r4[0]) + Math.abs(r4[1]) + Math.abs(r4[2]) < o2) && (e6.normal[0] = r4[0], e6.normal[1] = r4[1], e6.normal[2] = r4[2], true);
  }
};
e([y({ type: ["Voxel"] })], R.prototype, "operationalLayerType", void 0), e([y(c3)], R.prototype, "legendEnabled", void 0), e([y({ json: { write: true } })], R.prototype, "title", void 0), e([y(d2)], R.prototype, "url", null), e([y({ type: V.ofType(u5), json: { origins: { "web-scene": { name: "layerDefinition.sections", write: true } } } })], R.prototype, "sections", void 0), e([y({ type: T, json: { origins: { "web-scene": { name: "layerDefinition.style.currentVariableId", write: { enabled: true, isRequired: true, ignoreOrigin: true } }, service: { name: "style.currentVariableId" } } } })], R.prototype, "currentVariableId", void 0), e([y({ type: V.ofType(d5), json: { origins: { "web-scene": { name: "layerDefinition.style.volumeStyles", write: true }, service: { name: "style.volumeStyles" } } } })], R.prototype, "volumeStyles", void 0), e([y({ type: ["volume", "surfaces"], json: { origins: { "web-scene": { name: "layerDefinition.style.renderMode", write: true }, service: { name: "style.renderMode" } } } })], R.prototype, "renderMode", void 0), e([y({ type: V.ofType(f3), json: { origins: { "web-scene": { name: "layerDefinition.style.variableStyles", write: true }, service: { name: "style.variableStyles" } } } })], R.prototype, "variableStyles", void 0), e([y({ type: Boolean, json: { origins: { "web-scene": { name: "layerDefinition.style.enableSlices", write: true }, service: { name: "style.enableSlices" } } } })], R.prototype, "enableSlices", void 0), e([y({ type: Boolean, json: { origins: { "web-scene": { name: "layerDefinition.style.enableSections", write: true }, service: { name: "style.enableSections" } } } })], R.prototype, "enableSections", void 0), e([y({ type: Boolean, json: { origins: { "web-scene": { name: "layerDefinition.style.enableDynamicSections", write: true }, service: { name: "style.enableDynamicSections" } } } })], R.prototype, "enableDynamicSections", void 0), e([y({ type: Boolean, json: { origins: { "web-scene": { name: "layerDefinition.style.enableIsosurfaces", write: true }, service: { name: "style.enableIsosurfaces" } } } })], R.prototype, "enableIsosurfaces", void 0), e([y({ type: p3, json: { origins: { "web-scene": { name: "layerDefinition.style.shading", write: true }, service: { name: "style.shading" } } } })], R.prototype, "shading", void 0), e([y({ type: ["show", "hide"] })], R.prototype, "listMode", void 0), e([y({ type: Number, range: { min: 0, max: 1 }, nonNullable: true, json: { read: false, write: false, origins: { "web-scene": { read: false, write: false }, "portal-item": { read: false, write: false } } } })], R.prototype, "opacity", void 0), e([y({ type: V.ofType(p5) })], R.prototype, "variables", void 0), e([y({ type: V.ofType(S2) })], R.prototype, "volumes", void 0), e([y({ type: p12 })], R.prototype, "index", void 0), e([y({ type: Number, json: { name: "layerDefinition.minScale", read: false, write: false, origins: { service: { read: false, write: false } } } })], R.prototype, "minScale", void 0), e([y({ type: Number, json: { name: "layerDefinition.maxScale", read: false, write: false, origins: { service: { read: false, write: false } } } })], R.prototype, "maxScale", void 0), e([y({ json: { read: false }, readOnly: true })], R.prototype, "type", void 0), e([y({ readOnly: true, json: { name: "serviceVersion" } })], R.prototype, "version", void 0), e([o("service", "version")], R.prototype, "readVersion", null), e([y({ type: M })], R.prototype, "fullExtent", void 0), e([o("service", "fullExtent", ["fullExtent"])], R.prototype, "readFullExtent", null), e([y({ readOnly: true, clonable: false, json: { read: false } })], R.prototype, "voxelFields", null), e([y({ type: Boolean, json: { name: "disablePopup", read: { reader: (e6, t6) => !t6.disablePopup }, write: { enabled: true, ignoreOrigin: true, writer(e6, t6, i8) {
  t6[i8] = !e6;
} }, origins: { "portal-item": { default: true }, "web-scene": { default: true } } } })], R.prototype, "popupEnabled", void 0), e([y({ type: k, json: { read: false } })], R.prototype, "popupTemplate", null), e([y({ readOnly: true })], R.prototype, "defaultPopupTemplate", null), R = e([c(A)], R);
var M3 = R;
export {
  M3 as default
};
//# sourceMappingURL=VoxelLayer-KX4WEZ3O.js.map
