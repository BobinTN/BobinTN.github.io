import {
  F,
  I,
  S,
  T,
  b as b2,
  h,
  j,
  k,
  x
} from "./chunk-4PHH3CU7.js";
import "./chunk-O5L3AGFQ.js";
import "./chunk-7SYCRLSC.js";
import "./chunk-UIBKJIZ5.js";
import "./chunk-KMTPMPRR.js";
import "./chunk-747B2TEO.js";
import "./chunk-4NEWABLH.js";
import "./chunk-FW2Y26A2.js";
import "./chunk-5WG7GACT.js";
import {
  c as c3
} from "./chunk-ADNT35Y3.js";
import {
  p
} from "./chunk-3F7Z2GZ4.js";
import "./chunk-BVTDQR4O.js";
import {
  c as c2
} from "./chunk-GBF6I7IL.js";
import "./chunk-KXF4D4TD.js";
import "./chunk-UIN5EOGE.js";
import {
  n
} from "./chunk-ZRKSP45X.js";
import "./chunk-DT2VHQBL.js";
import {
  i as i2
} from "./chunk-TKJNJ6KH.js";
import {
  s as s2
} from "./chunk-CB5VOM2Q.js";
import "./chunk-3HOLDCR2.js";
import {
  i as i3
} from "./chunk-MJTRXEE4.js";
import {
  C
} from "./chunk-2XWWTLSJ.js";
import {
  o as o2
} from "./chunk-5DLICG33.js";
import {
  a as a2
} from "./chunk-WZZO74UB.js";
import {
  p as p2
} from "./chunk-AYCE4MD7.js";
import {
  m as m3,
  u
} from "./chunk-LVN3FGME.js";
import "./chunk-F3LMPTMS.js";
import {
  j as j2
} from "./chunk-KQ7MCWUF.js";
import {
  f as f2
} from "./chunk-NHWXARIK.js";
import {
  a
} from "./chunk-P5VIVFJT.js";
import "./chunk-SA3C7GIT.js";
import "./chunk-P3R45ANF.js";
import {
  t
} from "./chunk-PIEUUBJ5.js";
import {
  u as u2
} from "./chunk-OTTMOIDW.js";
import {
  m as m2
} from "./chunk-P5GW5DPX.js";
import {
  c as c4,
  d as d2,
  f as f3,
  m as m4,
  p as p4,
  y as y3
} from "./chunk-WDO2BXGR.js";
import "./chunk-PHX4PE2G.js";
import "./chunk-E3I4MGUC.js";
import "./chunk-SHFNNIVW.js";
import "./chunk-IYYYQK4Y.js";
import "./chunk-QN7I7LNY.js";
import "./chunk-64EQFPYJ.js";
import "./chunk-HKYMYCLL.js";
import "./chunk-ICVVQFO6.js";
import {
  d
} from "./chunk-O3E2OZKN.js";
import "./chunk-UTCX6DGX.js";
import "./chunk-EA6ZJZL6.js";
import "./chunk-VKTTTBW2.js";
import "./chunk-TTZWDXX5.js";
import "./chunk-3RBII4KE.js";
import "./chunk-SEKLTVY5.js";
import "./chunk-7YZ4X2DS.js";
import "./chunk-UPGPT5OX.js";
import "./chunk-S6MJEC4A.js";
import "./chunk-VA52CKTT.js";
import {
  b
} from "./chunk-45OAWGCA.js";
import "./chunk-X2TA76Q5.js";
import "./chunk-T3Y5GTKO.js";
import {
  y as y2
} from "./chunk-XN6LAULS.js";
import "./chunk-CKGVKMVG.js";
import "./chunk-CSWPLQ7Q.js";
import "./chunk-KWSMYM7P.js";
import "./chunk-RP5SAUAF.js";
import "./chunk-6BFXMZEZ.js";
import "./chunk-AMSVADDY.js";
import "./chunk-6B7VJB6C.js";
import "./chunk-GAJBN4TM.js";
import {
  b as b3
} from "./chunk-WETX22HQ.js";
import "./chunk-B3RXTW72.js";
import {
  k as k2
} from "./chunk-DCYI44X2.js";
import "./chunk-JHJVOI7Q.js";
import "./chunk-TWNBDJHC.js";
import "./chunk-4NU7FZD7.js";
import "./chunk-WYZCKLOR.js";
import "./chunk-S6NERLXF.js";
import "./chunk-MLRHWRJQ.js";
import "./chunk-H4ZZ5S37.js";
import "./chunk-G557TGXY.js";
import "./chunk-2AXFVQBN.js";
import "./chunk-WOGT6UK2.js";
import "./chunk-IRNKV32L.js";
import "./chunk-IATM3RCE.js";
import "./chunk-BEALJUHO.js";
import "./chunk-GRHSIT57.js";
import "./chunk-PJQIAD5D.js";
import {
  g,
  p as p3
} from "./chunk-GAWSWBHO.js";
import "./chunk-SZAJDZCO.js";
import "./chunk-3DSKWYU4.js";
import "./chunk-ZZYUEH57.js";
import {
  i,
  o
} from "./chunk-VTWXDFFD.js";
import "./chunk-IPCIO3PX.js";
import "./chunk-EIY2DYTV.js";
import "./chunk-WJ4LS3YG.js";
import "./chunk-F6MD5VOH.js";
import "./chunk-V2RPSCV3.js";
import "./chunk-LMT5JII2.js";
import "./chunk-A43TI6AT.js";
import "./chunk-2D3PORS4.js";
import "./chunk-4HKQSEUR.js";
import "./chunk-V3U4F2NL.js";
import "./chunk-ZB6PGKG5.js";
import "./chunk-OIIDE5GZ.js";
import "./chunk-3XSRVKBX.js";
import "./chunk-WYBZLWIA.js";
import "./chunk-MKW4ORPJ.js";
import "./chunk-YTH6VA7N.js";
import "./chunk-GINTRQSD.js";
import "./chunk-TBSVVR6M.js";
import "./chunk-6TJWLWLO.js";
import "./chunk-H7BKONNV.js";
import "./chunk-K6C6RVSV.js";
import "./chunk-KBJ5Z4R2.js";
import "./chunk-JUZJCTW2.js";
import "./chunk-423VNHLR.js";
import "./chunk-FN47E7YK.js";
import "./chunk-XZS3Q5K4.js";
import "./chunk-WZPOQGKL.js";
import {
  m
} from "./chunk-CCXEAKIM.js";
import {
  M
} from "./chunk-Y5D433JZ.js";
import "./chunk-QNOCEWCR.js";
import "./chunk-WURET5CW.js";
import {
  f
} from "./chunk-QWPLZ3QH.js";
import "./chunk-HLGIRLYQ.js";
import "./chunk-N2K4VRZH.js";
import "./chunk-WL4VPODY.js";
import "./chunk-OMPEZIP5.js";
import "./chunk-EUTNDAIV.js";
import "./chunk-SJZIFARA.js";
import "./chunk-R5DM4YAB.js";
import "./chunk-NSRXJNTS.js";
import {
  y2 as y
} from "./chunk-LXXF7K7W.js";
import {
  c
} from "./chunk-SBW6NNVI.js";
import {
  e
} from "./chunk-62CXLI6S.js";
import "./chunk-RFPH3ZTZ.js";
import "./chunk-WGO3VFQP.js";
import "./chunk-CQS47VN5.js";
import {
  s3 as s
} from "./chunk-WJ3HJKNC.js";
import "./chunk-4V6374PV.js";
import "./chunk-A34O4XB5.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/layers/graphics/sources/OGCFeatureSource.js
var h2 = class extends m {
  constructor() {
    super(...arguments), this.featureDefinition = null, this.type = "ogc-feature";
  }
  load(e2) {
    return this.addResolvingPromise(this._loadOGCServices(this.layer, e2)), this.when();
  }
  getSource() {
    const { featureDefinition: { collection: e2, layerDefinition: t2, spatialReference: s3, supportedCrs: r }, layer: { apiKey: o3, customParameters: p5, effectiveMaxRecordCount: i4 } } = this;
    return { type: "ogc-source", collection: e2, layerDefinition: t2, maxRecordCount: i4, queryParameters: { apiKey: o3, customParameters: p5 }, spatialReference: s3, supportedCrs: r };
  }
  queryExtent(e2, t2 = {}) {
    return null;
  }
  queryFeatureCount(e2, t2 = {}) {
    return null;
  }
  queryFeatures(e2, t2 = {}) {
    return this.queryFeaturesJSON(e2, t2).then((e3) => d.fromJSON(e3));
  }
  queryFeaturesJSON(e2, t2 = {}) {
    const s3 = this.getSource();
    return this.load(t2).then(() => S(s3, e2, t2));
  }
  queryObjectIds(e2, t2 = {}) {
    return null;
  }
  serviceSupportsSpatialReference(e2) {
    return !(!e2.isWGS84 && !e2.isWebMercator) || !!this.featureDefinition.supportedCrs[e2.wkid];
  }
  _conformsToType(e2, t2) {
    const s3 = new RegExp(`^${t2}$`, "i");
    return e2.conformsTo.some((e3) => s3.test(e3)) ?? false;
  }
  _getCapabilities(e2, t2) {
    return { analytics: { supportsCacheHint: false }, attachment: null, data: { isVersioned: false, supportsAttachment: false, supportsM: false, supportsZ: e2 }, metadata: { supportsAdvancedFieldProperties: false }, operations: { supportsCalculate: false, supportsTruncate: false, supportsValidateSql: false, supportsAdd: false, supportsDelete: false, supportsEditing: false, supportsChangeTracking: false, supportsQuery: false, supportsQueryAnalytics: false, supportsQueryAttachments: false, supportsQueryTopFeatures: false, supportsResizeAttachments: false, supportsSync: false, supportsUpdate: false, supportsExceedsLimitStatistics: false, supportsAsyncConvert3D: false }, query: { maxRecordCount: t2, maxRecordCountFactor: void 0, standardMaxRecordCount: void 0, supportsCacheHint: false, supportsCentroid: false, supportsDisjointSpatialRelationship: false, supportsDistance: false, supportsDistinct: false, supportsExtent: false, supportsFormatPBF: false, supportsGeometryProperties: false, supportsHavingClause: false, supportsHistoricMoment: false, supportsMaxRecordCountFactor: false, supportsOrderBy: false, supportsPagination: false, supportsPercentileStatistics: false, supportsQuantization: false, supportsQuantizationEditMode: false, supportsQueryByAnonymous: false, supportsQueryByOthers: false, supportsQueryGeometry: false, supportsResultType: false, supportsStandardizedQueriesOnly: false, supportsTopFeaturesQuery: false, supportsStatistics: false, supportsSpatialAggregationStatistics: false, supportedSpatialAggregationStatistics: { envelope: false, centroid: false, convexHull: false }, supportsDefaultSpatialReference: false, supportsFullTextSearch: false, supportsCompactGeometry: false, supportsSqlExpression: false, tileMaxRecordCount: void 0 }, queryRelated: { supportsCount: false, supportsOrderBy: false, supportsPagination: false, supportsCacheHint: false }, queryTopFeatures: { supportsCacheHint: false }, editing: { supportsDeleteByAnonymous: false, supportsDeleteByOthers: false, supportsGeometryUpdate: false, supportsGlobalId: false, supportsReturnServiceEditsInSourceSpatialReference: false, supportsRollbackOnFailure: false, supportsUpdateByAnonymous: false, supportsUpdateByOthers: false, supportsUploadWithItemId: false, supportsUpdateWithoutM: false, supportsAsyncApplyEdits: false, zDefault: void 0 } };
  }
  _getMaxRecordCount(e2) {
    var _a, _b, _c, _d, _e;
    const t2 = (_a = e2 == null ? void 0 : e2.components) == null ? void 0 : _a.parameters;
    return ((_c = (_b = t2 == null ? void 0 : t2.limit) == null ? void 0 : _b.schema) == null ? void 0 : _c.maximum) ?? ((_e = (_d = t2 == null ? void 0 : t2.limitFeatures) == null ? void 0 : _d.schema) == null ? void 0 : _e.maximum);
  }
  _getStorageSpatialReference(e2) {
    const t2 = e2.storageCrs ?? h, s3 = x(t2);
    return null == s3 ? f.WGS84 : new f({ wkid: s3 });
  }
  _getSupportedSpatialReferences(e2, t2) {
    const s3 = "#/crs", r = e2.crs ?? [h], o3 = r.includes(s3) ? r.filter((e3) => e3 !== s3).concat(t2.crs ?? []) : r, p5 = /^http:\/\/www\.opengis.net\/def\/crs\/epsg\/.*\/3785$/i;
    return o3.filter((e3) => !p5.test(e3));
  }
  async _loadOGCServices(e2, s3) {
    const r = null != s3 ? s3.signal : null, { apiKey: o3, collectionId: p5, customParameters: i4, fields: y4, geometryType: f4, hasZ: h3, objectIdField: S2, timeInfo: C2, url: R } = e2, w = { fields: y4 == null ? void 0 : y4.map((e3) => e3.toJSON()), geometryType: i.toJSON(f4), hasZ: h3 ?? false, objectIdField: S2, timeInfo: C2 == null ? void 0 : C2.toJSON() }, x2 = { apiKey: o3, customParameters: i4, signal: r }, j3 = await T(R, x2), [v, F2] = await Promise.all([I(j3, x2), F(j3, x2)]);
    if (!this._conformsToType(v, "http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/geojson"))
      throw new s("ogc-feature-layer:no-geojson-support", "Server does not support geojson");
    const O = F2.collections.find((e3) => e3.id === p5);
    if (!O)
      throw new s("ogc-feature-layer:collection-not-found", "Server does not contain the named collection");
    const D = this._conformsToType(v, "http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/oas30") ? await k(j3, x2) : null, T2 = await j(O, w, x2), A = this._getMaxRecordCount(D), _ = this._getCapabilities(T2.hasZ, A), P = this._getStorageSpatialReference(O).toJSON(), b4 = this._getSupportedSpatialReferences(O, F2), q = new RegExp(`^${b2}`, "i"), E = {};
    for (const t2 of b4) {
      const e3 = x(t2);
      null != e3 && (E[e3] || (E[e3] = t2.replace(q, "")));
    }
    this.featureDefinition = { capabilities: _, collection: O, layerDefinition: T2, spatialReference: P, supportedCrs: E };
  }
};
e([y()], h2.prototype, "featureDefinition", void 0), e([y({ constructOnly: true })], h2.prototype, "layer", void 0), e([y()], h2.prototype, "type", void 0), h2 = e([c("esri.layers.graphics.sources.OGCFeatureSource")], h2);

// node_modules/@arcgis/core/layers/OGCFeatureLayer.js
var M2 = s2();
var B = class extends i2(o2(c2(p(a(c3(a2(t(u2(j2(f2(m2(b3)))))))))))) {
  constructor(e2) {
    super(e2), this.capabilities = null, this.collectionId = null, this.copyright = null, this.definitionExpression = null, this.description = null, this.displayField = null, this.elevationInfo = null, this.fields = null, this.fieldsIndex = null, this.fullExtent = null, this.geometryType = null, this.hasZ = void 0, this.labelingInfo = null, this.labelsVisible = true, this.legendEnabled = true, this.maxRecordCount = null, this.objectIdField = null, this.operationalLayerType = "OGCFeatureLayer", this.popupEnabled = true, this.popupTemplate = null, this.screenSizePerspectiveEnabled = true, this.source = new h2({ layer: this }), this.spatialReference = null, this.title = null, this.type = "ogc-feature", this.typeIdField = null, this.types = null, this.url = null;
  }
  destroy() {
    var _a;
    (_a = this.source) == null ? void 0 : _a.destroy();
  }
  load(e2) {
    return this.addResolvingPromise(this.loadFromPortal({ supportedTypes: ["OGCFeatureServer"] }, e2).then(() => this._fetchService(e2))), this.when();
  }
  get defaultPopupTemplate() {
    return this.createPopupTemplate();
  }
  get effectiveMaxRecordCount() {
    var _a;
    return this.maxRecordCount ?? ((_a = this.capabilities) == null ? void 0 : _a.query.maxRecordCount) ?? 5e3;
  }
  get isTable() {
    return this.loaded && null == this.geometryType;
  }
  set renderer(e2) {
    p3(e2, this.fieldsIndex), this._set("renderer", e2);
  }
  on(e2, r) {
    return super.on(e2, r);
  }
  createPopupTemplate(e2) {
    return p2(this, e2);
  }
  createQuery() {
    return new b();
  }
  getField(e2) {
    return this.fieldsIndex.get(e2);
  }
  getFieldDomain(e2, r) {
    var _a;
    let t2, i4 = false;
    const o3 = (_a = r == null ? void 0 : r.feature) == null ? void 0 : _a.attributes, s3 = this.typeIdField && (o3 == null ? void 0 : o3[this.typeIdField]);
    return null != s3 && this.types && (i4 = this.types.some((r2) => {
      var _a2;
      return r2.id == s3 && (t2 = (_a2 = r2.domains) == null ? void 0 : _a2[e2], "inherited" === (t2 == null ? void 0 : t2.type) && (t2 = this._getLayerDomain(e2)), true);
    })), i4 || t2 || (t2 = this._getLayerDomain(e2)), t2;
  }
  queryFeatures(e2, r) {
    return this.load().then(() => this.source.queryFeatures(b.from(e2) || this.createQuery(), r)).then((e3) => {
      var _a;
      return (_a = e3 == null ? void 0 : e3.features) == null ? void 0 : _a.forEach((e4) => {
        e4.layer = e4.sourceLayer = this;
      }), e3;
    });
  }
  serviceSupportsSpatialReference(e2) {
    var _a;
    return ((_a = this.source) == null ? void 0 : _a.serviceSupportsSpatialReference(e2)) ?? false;
  }
  async _fetchService(e2) {
    await this.source.load(e2), this.read(this.source.featureDefinition, { origin: "service" }), p3(this.renderer, this.fieldsIndex), g(this.timeInfo, this.fieldsIndex);
  }
  _getLayerDomain(e2) {
    if (!this.fields)
      return null;
    for (const r of this.fields)
      if (r.name === e2 && r.domain)
        return r.domain;
    return null;
  }
};
e([y({ readOnly: true, json: { origins: { service: { read: true } } } })], B.prototype, "capabilities", void 0), e([y({ type: String, json: { write: true } })], B.prototype, "collectionId", void 0), e([y({ type: String })], B.prototype, "copyright", void 0), e([y({ readOnly: true })], B.prototype, "defaultPopupTemplate", null), e([y({ type: String })], B.prototype, "definitionExpression", void 0), e([y({ readOnly: true, type: String, json: { origins: { service: { name: "collection.description" } } } })], B.prototype, "description", void 0), e([y({ type: String })], B.prototype, "displayField", void 0), e([y({ type: Number })], B.prototype, "effectiveMaxRecordCount", null), e([y(f3)], B.prototype, "elevationInfo", void 0), e([y({ type: [y2], json: { origins: { service: { name: "layerDefinition.fields" } } } })], B.prototype, "fields", void 0), e([y(M2.fieldsIndex)], B.prototype, "fieldsIndex", void 0), e([y({ readOnly: true, type: M, json: { origins: { service: { name: "layerDefinition.extent" } } } })], B.prototype, "fullExtent", void 0), e([y({ type: o.apiValues, json: { origins: { service: { name: "layerDefinition.geometryType", read: { reader: o.read } } } } })], B.prototype, "geometryType", void 0), e([y({ type: Boolean, json: { origins: { service: { name: "layerDefinition.hasZ" } } } })], B.prototype, "hasZ", void 0), e([y({ type: Boolean, readOnly: true })], B.prototype, "isTable", null), e([y({ type: [C], json: { origins: { "web-document": { name: "layerDefinition.drawingInfo.labelingInfo", read: { reader: i3 }, write: true } } } })], B.prototype, "labelingInfo", void 0), e([y(m4)], B.prototype, "labelsVisible", void 0), e([y(c4)], B.prototype, "legendEnabled", void 0), e([y({ type: Number })], B.prototype, "maxRecordCount", void 0), e([y({ type: String, json: { origins: { service: { name: "layerDefinition.objectIdField" } } } })], B.prototype, "objectIdField", void 0), e([y({ type: ["OGCFeatureLayer"] })], B.prototype, "operationalLayerType", void 0), e([y(y3)], B.prototype, "popupEnabled", void 0), e([y({ type: k2, json: { name: "popupInfo", write: true } })], B.prototype, "popupTemplate", void 0), e([y({ types: m3, json: { origins: { service: { name: "layerDefinition.drawingInfo.renderer", write: false }, "web-scene": { types: u, name: "layerDefinition.drawingInfo.renderer", write: true } }, name: "layerDefinition.drawingInfo.renderer", write: true } })], B.prototype, "renderer", null), e([y(p4)], B.prototype, "screenSizePerspectiveEnabled", void 0), e([y({ readOnly: true })], B.prototype, "source", void 0), e([y({ readOnly: true, type: f, json: { origins: { service: { read: true } } } })], B.prototype, "spatialReference", void 0), e([y({ type: String, json: { write: { enabled: true, ignoreOrigin: true, isRequired: true }, origins: { service: { name: "collection.title" } } } })], B.prototype, "title", void 0), e([y({ readOnly: true, json: { read: false } })], B.prototype, "type", void 0), e([y({ type: String, readOnly: true })], B.prototype, "typeIdField", void 0), e([y({ type: [n] })], B.prototype, "types", void 0), e([y(d2)], B.prototype, "url", void 0), B = e([c("esri.layers.OGCFeatureLayer")], B);
var V = B;
export {
  V as default
};
//# sourceMappingURL=OGCFeatureLayer-KX55AI3R.js.map
