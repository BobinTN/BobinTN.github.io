import {
  c as c2
} from "./chunk-UFIIIHSC.js";
import "./chunk-VQFXN4EM.js";
import "./chunk-RFDTTDIQ.js";
import "./chunk-P5GW5DPX.js";
import {
  f as f2,
  i,
  s
} from "./chunk-EUGXS5RE.js";
import "./chunk-WURET5CW.js";
import "./chunk-EUTNDAIV.js";
import {
  j
} from "./chunk-R5DM4YAB.js";
import {
  f
} from "./chunk-NSRXJNTS.js";
import {
  y2 as y
} from "./chunk-LXXF7K7W.js";
import {
  c
} from "./chunk-SBW6NNVI.js";
import {
  e
} from "./chunk-62CXLI6S.js";
import "./chunk-RFPH3ZTZ.js";
import "./chunk-WGO3VFQP.js";
import "./chunk-CQS47VN5.js";
import "./chunk-WJ3HJKNC.js";
import "./chunk-4V6374PV.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/rest/networks/support/QueryNamedTraceConfigurationsResult.js
var a = class extends f {
  constructor(r) {
    super(r), this.namedTraceConfigurations = [];
  }
};
e([y({ type: [c2], json: { read: { source: "traceConfigurations" }, write: { target: "traceConfigurations" } } })], a.prototype, "namedTraceConfigurations", void 0), a = e([c("esri.rest.networks.support.QueryNamedTraceConfigurationsResult")], a);
var p = a;

// node_modules/@arcgis/core/rest/networks/queryNamedTraceConfigurations.js
async function e2(e3, n, g) {
  const i2 = f2(e3), l = n.toJSON();
  n.globalIds && n.globalIds.length > 0 && (l.globalIds = JSON.stringify(n.globalIds)), n.creators && n.creators.length > 0 && (l.creators = JSON.stringify(n.creators)), n.tags && n.tags.length > 0 && (l.tags = JSON.stringify(n.tags)), n.names && n.names.length > 0 && (l.names = JSON.stringify(n.names));
  const m = { ...l, f: "json" }, f3 = s({ ...i2.query, ...m }), u = i(f3, { ...g, method: "post" }), c3 = `${i2.path}/traceConfigurations/query`, { data: p2 } = await j(c3, u);
  return p.fromJSON(p2);
}
export {
  e2 as queryNamedTraceConfigurations
};
//# sourceMappingURL=queryNamedTraceConfigurations-IZBMH4OM.js.map
