import {
  E,
  P
} from "./chunk-RC6N7ZK6.js";
import {
  E as E2,
  p as p2,
  x
} from "./chunk-WICI4OJR.js";
import "./chunk-ZKKM4KJT.js";
import {
  a as a3,
  a2 as a4,
  a3 as a5,
  d
} from "./chunk-3LR56QLT.js";
import "./chunk-LXYMQMWX.js";
import "./chunk-XJLKESB7.js";
import "./chunk-QLCCKKQG.js";
import "./chunk-673OQ2U7.js";
import {
  i as i2
} from "./chunk-TKJNJ6KH.js";
import {
  l
} from "./chunk-36R5EC6A.js";
import {
  s as s3
} from "./chunk-CB5VOM2Q.js";
import {
  p
} from "./chunk-AYCE4MD7.js";
import {
  j as j2
} from "./chunk-KQ7MCWUF.js";
import {
  t
} from "./chunk-PIEUUBJ5.js";
import {
  u
} from "./chunk-OTTMOIDW.js";
import {
  m
} from "./chunk-P5GW5DPX.js";
import {
  c as c2,
  f as f2,
  y as y3
} from "./chunk-WDO2BXGR.js";
import "./chunk-HKYMYCLL.js";
import "./chunk-ICVVQFO6.js";
import "./chunk-VA52CKTT.js";
import "./chunk-T3Y5GTKO.js";
import {
  y as y2
} from "./chunk-XN6LAULS.js";
import "./chunk-CKGVKMVG.js";
import "./chunk-RP5SAUAF.js";
import "./chunk-6B7VJB6C.js";
import "./chunk-GAJBN4TM.js";
import "./chunk-BADPOP5P.js";
import {
  b
} from "./chunk-WETX22HQ.js";
import {
  i4 as i,
  k
} from "./chunk-DCYI44X2.js";
import "./chunk-JHJVOI7Q.js";
import "./chunk-S6NERLXF.js";
import "./chunk-G557TGXY.js";
import "./chunk-WOGT6UK2.js";
import "./chunk-BEALJUHO.js";
import "./chunk-PJQIAD5D.js";
import "./chunk-GAWSWBHO.js";
import "./chunk-SZAJDZCO.js";
import "./chunk-3DSKWYU4.js";
import "./chunk-ZZYUEH57.js";
import "./chunk-VTWXDFFD.js";
import "./chunk-IPCIO3PX.js";
import "./chunk-WJ4LS3YG.js";
import {
  o as o3
} from "./chunk-V2RPSCV3.js";
import "./chunk-AOJ6OCPK.js";
import "./chunk-LMT5JII2.js";
import "./chunk-A43TI6AT.js";
import "./chunk-2D3PORS4.js";
import "./chunk-4HKQSEUR.js";
import "./chunk-V3U4F2NL.js";
import "./chunk-ZB6PGKG5.js";
import "./chunk-OIIDE5GZ.js";
import "./chunk-3XSRVKBX.js";
import "./chunk-WYBZLWIA.js";
import "./chunk-MKW4ORPJ.js";
import "./chunk-YTH6VA7N.js";
import "./chunk-GINTRQSD.js";
import "./chunk-APYNYYQC.js";
import "./chunk-6TJWLWLO.js";
import "./chunk-H7BKONNV.js";
import "./chunk-K6C6RVSV.js";
import "./chunk-KBJ5Z4R2.js";
import "./chunk-JUZJCTW2.js";
import "./chunk-423VNHLR.js";
import "./chunk-FN47E7YK.js";
import "./chunk-XZS3Q5K4.js";
import "./chunk-WZPOQGKL.js";
import "./chunk-CCXEAKIM.js";
import "./chunk-Y5D433JZ.js";
import "./chunk-QNOCEWCR.js";
import {
  o as o2
} from "./chunk-WURET5CW.js";
import {
  r
} from "./chunk-QWPLZ3QH.js";
import "./chunk-HLGIRLYQ.js";
import "./chunk-N2K4VRZH.js";
import "./chunk-WL4VPODY.js";
import "./chunk-OMPEZIP5.js";
import "./chunk-EUTNDAIV.js";
import "./chunk-SJZIFARA.js";
import {
  V,
  j
} from "./chunk-R5DM4YAB.js";
import {
  f
} from "./chunk-NSRXJNTS.js";
import {
  y2 as y
} from "./chunk-LXXF7K7W.js";
import {
  T,
  c
} from "./chunk-SBW6NNVI.js";
import {
  e
} from "./chunk-62CXLI6S.js";
import {
  a as a2
} from "./chunk-RFPH3ZTZ.js";
import "./chunk-WGO3VFQP.js";
import "./chunk-CQS47VN5.js";
import {
  a,
  o,
  s2 as s,
  s3 as s2
} from "./chunk-WJ3HJKNC.js";
import "./chunk-4V6374PV.js";
import "./chunk-76J2PTFD.js";

// node_modules/@arcgis/core/layers/pointCloudFilters/PointCloudFilter.js
var t2 = class extends f {
  constructor(r2) {
    super(r2), this.field = null, this.type = null;
  }
  clone() {
    return console.warn(".clone() is not implemented for " + this.declaredClass), null;
  }
};
e([y({ type: String, json: { write: { enabled: true, isRequired: true } } })], t2.prototype, "field", void 0), e([y({ readOnly: true, nonNullable: true, json: { read: false } })], t2.prototype, "type", void 0), t2 = e([c("esri.layers.pointCloudFilters.PointCloudFilter")], t2);
var l2 = t2;

// node_modules/@arcgis/core/layers/pointCloudFilters/PointCloudBitfieldFilter.js
var d2;
var p3 = d2 = class extends l2 {
  constructor(e3) {
    super(e3), this.requiredClearBits = null, this.requiredSetBits = null, this.type = "bitfield";
  }
  clone() {
    return new d2({ field: this.field, requiredClearBits: a(this.requiredClearBits), requiredSetBits: a(this.requiredSetBits) });
  }
};
e([y({ type: [T], json: { write: { enabled: true, overridePolicy() {
  return { enabled: true, isRequired: !this.requiredSetBits };
} } } })], p3.prototype, "requiredClearBits", void 0), e([y({ type: [T], json: { write: { enabled: true, overridePolicy() {
  return { enabled: true, isRequired: !this.requiredClearBits };
} } } })], p3.prototype, "requiredSetBits", void 0), e([o3({ pointCloudBitfieldFilter: "bitfield" })], p3.prototype, "type", void 0), p3 = d2 = e([c("esri.layers.pointCloudFilters.PointCloudBitfieldFilter")], p3);
var u2 = p3;

// node_modules/@arcgis/core/layers/pointCloudFilters/PointCloudReturnFilter.js
var n;
var p4 = n = class extends l2 {
  constructor(r2) {
    super(r2), this.includedReturns = [], this.type = "return";
  }
  clone() {
    return new n({ field: this.field, includedReturns: a(this.includedReturns) });
  }
};
e([y({ type: [["firstOfMany", "last", "lastOfMany", "single"]], json: { write: { enabled: true, isRequired: true } } })], p4.prototype, "includedReturns", void 0), e([o3({ pointCloudReturnFilter: "return" })], p4.prototype, "type", void 0), p4 = n = e([c("esri.layers.pointCloudFilters.PointCloudReturnFilter")], p4);
var u3 = p4;

// node_modules/@arcgis/core/layers/pointCloudFilters/PointCloudValueFilter.js
var p5;
var l3 = p5 = class extends l2 {
  constructor(e3) {
    super(e3), this.mode = "exclude", this.type = "value", this.values = [];
  }
  clone() {
    return new p5({ field: this.field, mode: this.mode, values: a(this.values) });
  }
};
e([y({ type: ["exclude", "include"], json: { write: { enabled: true, isRequired: true } } })], l3.prototype, "mode", void 0), e([o3({ pointCloudValueFilter: "value" })], l3.prototype, "type", void 0), e([y({ type: [Number], json: { write: { enabled: true, isRequired: true } } })], l3.prototype, "values", void 0), l3 = p5 = e([c("esri.layers.pointCloudFilters.PointCloudValueFilter")], l3);
var u4 = l3;

// node_modules/@arcgis/core/layers/pointCloudFilters/typeUtils.js
var e2 = { key: "type", base: l2, typeMap: { value: u4, bitfield: u2, return: u3 } };

// node_modules/@arcgis/core/renderers/PointCloudRGBRenderer.js
var i3;
var c3 = i3 = class extends a3 {
  constructor(r2) {
    super(r2), this.type = "point-cloud-rgb", this.field = null;
  }
  clone() {
    return new i3({ ...this.cloneProperties(), field: a(this.field) });
  }
};
e([o3({ pointCloudRGBRenderer: "point-cloud-rgb" })], c3.prototype, "type", void 0), e([y({ type: String, json: { write: true } })], c3.prototype, "field", void 0), c3 = i3 = e([c("esri.renderers.PointCloudRGBRenderer")], c3);
var n2 = c3;

// node_modules/@arcgis/core/renderers/support/pointCloud/typeUtils.js
var i4 = { key: "type", base: a3, typeMap: { "point-cloud-class-breaks": d, "point-cloud-rgb": n2, "point-cloud-stretch": a4, "point-cloud-unique-value": a5 }, errorContext: "renderer" };

// node_modules/@arcgis/core/layers/PointCloudLayer.js
var R = s3();
var O = class extends E(l(u(j2(t(m(i2(b))))))) {
  constructor(...e3) {
    super(...e3), this.operationalLayerType = "PointCloudLayer", this.popupEnabled = true, this.popupTemplate = null, this.opacity = 1, this.filters = [], this.fields = null, this.fieldsIndex = null, this.outFields = null, this.path = null, this.legendEnabled = true, this.renderer = null, this.type = "point-cloud";
  }
  normalizeCtorArgs(e3, r2) {
    return "string" == typeof e3 ? { url: e3, ...r2 } : e3;
  }
  get defaultPopupTemplate() {
    return this.attributeStorageInfo ? this.createPopupTemplate() : null;
  }
  getFieldDomain(e3) {
    const r2 = this.fieldsIndex.get(e3);
    return (r2 == null ? void 0 : r2.domain) ? r2.domain : null;
  }
  readServiceFields(e3, r2, t3) {
    return Array.isArray(e3) ? e3.map((e4) => {
      const r3 = new y2();
      return "FieldTypeInteger" === e4.type && ((e4 = a(e4)).type = "esriFieldTypeInteger"), r3.read(e4, t3), r3;
    }) : Array.isArray(r2.attributeStorageInfo) ? r2.attributeStorageInfo.map((e4) => new y2({ name: e4.name, type: "ELEVATION" === e4.name ? "double" : "integer" })) : null;
  }
  set elevationInfo(e3) {
    this._set("elevationInfo", e3), this._validateElevationInfo();
  }
  writeRenderer(e3, r2, t3, o4) {
    o("layerDefinition.drawingInfo.renderer", e3.write({}, o4), r2);
  }
  load(e3) {
    const r2 = null != e3 ? e3.signal : null, t3 = this.loadFromPortal({ supportedTypes: ["Scene Service"] }, e3).catch(a2).then(() => this._fetchService(r2));
    return this.addResolvingPromise(t3), Promise.resolve(this);
  }
  createPopupTemplate(e3) {
    const r2 = p(this, e3);
    return r2 && (this._formatPopupTemplateReturnsField(r2), this._formatPopupTemplateRGBField(r2)), r2;
  }
  _formatPopupTemplateReturnsField(e3) {
    var _a;
    const r2 = this.fieldsIndex.get("RETURNS");
    if (!r2)
      return;
    const t3 = (_a = e3.fieldInfos) == null ? void 0 : _a.find((e4) => e4.fieldName === r2.name);
    if (!t3)
      return;
    const o4 = new i({ name: "pcl-returns-decoded", title: r2.alias || r2.name, expression: `
        var returnValue = $feature.${r2.name};
        return (returnValue % 16) + " / " + Floor(returnValue / 16);
      ` });
    e3.expressionInfos = [...e3.expressionInfos || [], o4], t3.fieldName = "expression/pcl-returns-decoded";
  }
  _formatPopupTemplateRGBField(e3) {
    var _a;
    const r2 = this.fieldsIndex.get("RGB");
    if (!r2)
      return;
    const t3 = (_a = e3.fieldInfos) == null ? void 0 : _a.find((e4) => e4.fieldName === r2.name);
    if (!t3)
      return;
    const o4 = new i({ name: "pcl-rgb-decoded", title: r2.alias || r2.name, expression: `
        var rgb = $feature.${r2.name};
        var red = Floor(rgb / 65536, 0);
        var green = Floor((rgb - (red * 65536)) / 256,0);
        var blue = rgb - (red * 65536) - (green * 256);

        return "rgb(" + red + "," + green + "," + blue + ")";
      ` });
    e3.expressionInfos = [...e3.expressionInfos || [], o4], t3.fieldName = "expression/pcl-rgb-decoded";
  }
  async queryCachedStatistics(e3, r2) {
    if (await this.load(r2), !this.attributeStorageInfo)
      throw new s2("scenelayer:no-cached-statistics", "Cached statistics are not available for this layer");
    const i5 = this.fieldsIndex.get(e3);
    if (!i5)
      throw new s2("pointcloudlayer:field-unexisting", `Field '${e3}' does not exist on the layer`);
    for (const o4 of this.attributeStorageInfo)
      if (o4.name === i5.name) {
        const e4 = V(this.parsedUrl.path, `./statistics/${o4.key}`);
        return j(e4, { query: { f: "json", token: this.apiKey }, responseType: "json", signal: r2 ? r2.signal : null }).then((e5) => e5.data);
      }
    throw new s2("pointcloudlayer:no-cached-statistics", "Cached statistics for this attribute are not available");
  }
  async saveAs(e3, r2) {
    return this._debouncedSaveOperations(P.SAVE_AS, { ...r2, getTypeKeywords: () => this._getTypeKeywords(), portalItemLayerType: "point-cloud" }, e3);
  }
  async save() {
    const e3 = { getTypeKeywords: () => this._getTypeKeywords(), portalItemLayerType: "point-cloud" };
    return this._debouncedSaveOperations(P.SAVE, e3);
  }
  validateLayer(e3) {
    if (e3.layerType && "PointCloud" !== e3.layerType)
      throw new s2("pointcloudlayer:layer-type-not-supported", "PointCloudLayer does not support this layer type", { layerType: e3.layerType });
    if (isNaN(this.version.major) || isNaN(this.version.minor))
      throw new s2("layer:service-version-not-supported", "Service version is not supported.", { serviceVersion: this.version.versionString, supportedVersions: "1.x-2.x" });
    if (this.version.major > 2)
      throw new s2("layer:service-version-too-new", "Service version is too new.", { serviceVersion: this.version.versionString, supportedVersions: "1.x-2.x" });
  }
  hasCachedStatistics(e3) {
    return null != this.attributeStorageInfo && this.attributeStorageInfo.some((r2) => r2.name === e3);
  }
  _getTypeKeywords() {
    return ["PointCloud"];
  }
  _validateElevationInfo() {
    const e3 = this.elevationInfo;
    x(s.getLogger(this), p2("Point cloud layers", "absolute-height", e3)), x(s.getLogger(this), E2("Point cloud layers", e3));
  }
};
e([y({ type: ["PointCloudLayer"] })], O.prototype, "operationalLayerType", void 0), e([y(y3)], O.prototype, "popupEnabled", void 0), e([y({ type: k, json: { name: "popupInfo", write: true } })], O.prototype, "popupTemplate", void 0), e([y({ readOnly: true, json: { read: false } })], O.prototype, "defaultPopupTemplate", null), e([y({ readOnly: true, json: { write: false, read: false, origins: { "web-document": { write: false, read: false } } } })], O.prototype, "opacity", void 0), e([y({ type: ["show", "hide"] })], O.prototype, "listMode", void 0), e([y({ types: [e2], json: { origins: { service: { read: { source: "filters" } } }, name: "layerDefinition.filters", write: true } })], O.prototype, "filters", void 0), e([y({ type: [y2] })], O.prototype, "fields", void 0), e([y(R.fieldsIndex)], O.prototype, "fieldsIndex", void 0), e([o2("service", "fields", ["fields", "attributeStorageInfo"])], O.prototype, "readServiceFields", null), e([y(R.outFields)], O.prototype, "outFields", void 0), e([y({ readOnly: true })], O.prototype, "attributeStorageInfo", void 0), e([y(f2)], O.prototype, "elevationInfo", null), e([y({ type: String, json: { origins: { "web-scene": { read: true, write: true }, "portal-item": { read: true, write: true } }, read: false } })], O.prototype, "path", void 0), e([y(c2)], O.prototype, "legendEnabled", void 0), e([y({ types: i4, json: { origins: { service: { read: { source: "drawingInfo.renderer" } } }, name: "layerDefinition.drawingInfo.renderer", write: { target: { "layerDefinition.drawingInfo.renderer": { types: i4 }, "layerDefinition.drawingInfo.transparency": { type: Number } } } } })], O.prototype, "renderer", void 0), e([r("renderer")], O.prototype, "writeRenderer", null), e([y({ json: { read: false }, readOnly: true })], O.prototype, "type", void 0), O = e([c("esri.layers.PointCloudLayer")], O);
var V2 = O;
export {
  V2 as default
};
//# sourceMappingURL=PointCloudLayer-C5TGX6OP.js.map
